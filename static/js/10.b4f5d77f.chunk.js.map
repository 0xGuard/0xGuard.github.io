{"version":3,"sources":["components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/FarmTable/CellLayout.tsx","hooks/useStartTime.ts","views/Home/components/StartCountdown.tsx","views/Home/components/StartCard.tsx","components/layout/Flex.tsx","hooks/usePersistState.ts","utils/latinise.ts","components/SearchInput/SearchInput.tsx","components/Select/Select.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","components/TokenPairImage/index.tsx","views/Farms/components/FarmCard/CardHeading.tsx","hooks/useApprove.ts","components/Balance.tsx","hooks/useStake.ts","hooks/useUnstake.ts","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","hooks/useHarvest.ts","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","utils/compoundApyHelpers.ts","components/ApyCalculatorModal/index.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/DepositFee/DepositFee.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/types.ts","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/Farms.tsx"],"names":["StyledSpacer","styled","div","_templateObject","_taggedTemplateLiteral","props","size","Spacer","_ref","s","_ref$size","spacing","useContext","ThemeContext","_jsx","StyledModalActions","theme","colors","primaryDark","StyledModalAction","_templateObject2","ModalActions","children","l","React","Children","toArray","length","map","child","i","_jsxs","_Fragment","StyledTokenInput","_ref2","input","_ref$isWarning","isWarning","shadows","warning","inset","_ref3","text","StyledInput","Input","_ref4","mediaQueries","xs","_ref5","sm","StyledErrorMessage","Text","_templateObject3","ModalInput","_ref6","max","symbol","onChange","onSelectMax","value","addLiquidityUrl","inputTitle","_ref6$decimals","decimals","t","useTranslation","isBalanceZero","style","position","Flex","justifyContent","pl","fontSize","balance","balanceBigNumber","BigNumber","gt","lt","toLocaleString","toFixed","ROUND_DOWN","displayBalance","alignItems","pattern","concat","inputMode","step","min","placeholder","Button","scale","onClick","mr","color","Link","bold","href","external","Label","ContentContainer","CellLayout","_ref$label","label","useStartTime","masterChefContract","useMasterchef","slowRefresh","useRefresh","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","data","setData","useEffect","fetchStartTime","_asyncToGenerator","_regeneratorRuntime","mark","_callee","startTime","wrap","_context","prev","next","methods","call","sent","t0","console","error","finish","stop","apply","arguments","CountdownNumber","span","renderer","completed","formatted","days","hours","minutes","seconds","StartCountdown","targetBlockTime","marginBottom","Countdown","date","Skeleton","width","height","StyledCard","Card","StartCard","_useStartTime","Date","now","Spinner","FlexLayout","defaultOptions","hydrate","identity","dehydrate","usePersistState","initialValue","userOptions","_defaultOptions$userO","_objectSpread","localStorageKey","valueFromLS","localStorage","getItem","JSON","parse","setValue","setItem","stringify","Latinise","latin_map","τ","Τ","latinise","replace","x","InputWrapper","Container","SearchInput","onChangeCallback","_ref2$placeholder","toggled","setToggled","searchText","setSearchText","debouncedOnChange","useMemo","debounce","e","target","onBlur","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","_templateObject4","_ref7","_ref8","tooltip","boxShadow","_ref9","_ref10","DropDownList","ul","_templateObject5","_ref11","ListItem","li","_templateObject6","_ref12","Select","_ref13","options","containerRef","useRef","dropdownRef","setIsOpen","selectedOptionIndex","setSelectedOptionIndex","_useState5","_useState6","containerSize","setContainerSize","toggling","current","offsetWidth","offsetHeight","ref","ArrowDropDownIcon","option","index","selectedIndex","Wrapper","primary","ExpandableSectionButton","expanded","role","ChevronUpIcon","ChevronDownIcon","defaultProps","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wETHAddressString","getWethAddress","quoteTokenAddressString","CHAIN_ID","tokenAddressString","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","NoFeesTag","Tag","variant","outline","startIcon","VerifiedIcon","DepositLockDicountTag","AutoRenewIcon","getImageUrlFromToken","token","toLowerCase","TokenPairImage","primaryToken","secondaryToken","_objectWithoutProperties","_excluded","UIKitTokenPairImage","primarySrc","secondarySrc","MultiplierTag","logoSize","CardHeading","multiplier","isFeesFreeFarm","isTokenOnly","quoteToken","mb","flexDirection","Heading","split","ImageWrapper","StyledPrimaryImage","src","useApprove","lpContract","account","useWeb3React","onApprove","useCallback","tx","approve","abrupt","Balance","_ref$color","_ref$decimals","_ref$isDisabled","isDisabled","unit","prefix","previousValue","CountUp","start","end","duration","separator","useStake","pid","farm","useFarmFromPid","merkleTree","useWhitelist","tokenDecimals","handleStake","amount","lockPeriod","whitelistMerkleTree","proof","txHash","_args","undefined","StandardMerkleTree","of","values","item","leafEncoding","getProof","stake","BIG_TEN","pow","info","_x","onStake","useUnstake","handleUnstake","unstake","onUnstake","DepositDiscountInfo","DepositDiscountTitle","DepositDiscountItems","DepositDiscountItem","DepositDiscountLabel","lockPeriods","discount","DATE_FORMAT","UnlockTime","NewUnlockTime","_useNewUnlockTime","enabled","masterChef","newUnlockTime","setNewUnlockTime","fetchNewUnlockTime","amountWei","response","times","toString","calculateNewUnlockTimeForUser","useNewUnlockTime","withDepositLockDiscount","moment","format","DepositModal","onConfirm","onDismiss","_ref4$tokenName","tokenName","_ref4$decimals","depositFee","unlockTime","val","setVal","_useState7","_useState8","setLockPeriod","_useState9","_useState10","pendingTx","setPendingTx","fullBalance","getFullDisplayBalance","valNumber","fullBalanceNumber","handleChange","currentTarget","validity","valid","handleLockPeriodChange","evt","parseInt","handleSelectMax","depositFeeNumber","parseFloat","Modal","title","Radio","checked","disabled","isFinite","eq","_callee2","_context2","alignSelf","CountdownWrapper","UnlockedText","UnlockCountdown","args","WithdrawModal","_ref2$tokenName","canWithdraw","submitDisabled","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","hasDiscount","location","useLocation","dispatch","useAppDispatch","lpPrice","useLpTokenPrice","fetchFarmUserDataAsync","pids","_x2","stakedBalanceBigNumber","getBalanceAmount","_depositFee","_useModal","useModal","onPresentDeposit","_useModal3","onPresentWithdraw","getBalanceNumber","some","pathname","includes","IconButton","MinusIcon","AddIcon","useHarvest","farmPid","referrer","useReferrer","onReward","harvest","HarvestAction","earnings","dibPrice","usePriceDIBUsdc","rawEarningsBalance","BIG_ZERO","earningsBusd","multipliedBy","toNumber","Action","CardActions","requestedApproval","setRequestedApproval","lpAddresses","userData","_ref2$allowance","allowance","allowanceAsString","_ref2$tokenBalance","tokenBalanceAsString","_ref2$stakedBalance","stakedBalanceAsString","_ref2$earnings","earningsAsString","_ref2$unlockTime","lpAddress","getAddress","address","isApproved","isGreaterThan","useERC20","handleApprove","textTransform","pr","lpSymbol","mt","UnlockButton","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenPrice","_ref$roundingDecimals","roundingDecimals","_ref$compoundFrequenc","compoundFrequency","_ref$performanceFee","performanceFee","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","Math","getRoi","amountEarned","amountInvested","Grid","GridItem","GridHeaderItem","BulletList","textSubtle","ApyCalculatorModal","apr","linkLabel","linkHref","_ref2$earningTokenSym","earningTokenSymbol","_ref2$roundingDecimal","_ref2$compoundFrequen","_ref2$performanceFee","_ref2$isFarm","isFarm","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","small","textAlign","ml","num","maxWidth","Box","p","display","freq","fee","ApyButton","onPresentApyModal","event","stopPropagation","CalculateIcon","DepositFeeWrapper","DepositFeeDiscounted","DepositFee","AccentGradient","keyframes","StyledCardAccent","primaryBright","secondary","FCard","card","background","Divider","cardBorder","ExpandingWrapper","FarmCard","showExpandableSection","setShowExpandableSection","liquidity","maximumFractionDigits","earnLabel","dual","farmAPR","liquidityUrlPathParts","BASE_SWAP_URL","BASE_ADD_LIQUIDITY_URL","isPromotedFarm","CardActionsContainer","getScanAddressUrl","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","timeoutId","setTimeout","clearTimeout","AprWrapper","Apr","originalValue","_ref3$hideButton","hideButton","Arrow","className","viewBox","fill","xmlns","d","stroke","TokensWrapper","TokenWrapper","isPair","Farm","useFarmUser","rawStakedBalance","imgSize","Amount","earned","textDisabled","Earned","userDataReady","ArrowIcon","Details","actionPanelToggled","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","tooltipContent","_useTooltip","useTooltip","placement","tooltipOffset","targetRef","tooltipVisible","HelpIcon","LiquidityWrapper","Liquidity","displayLiquidity","Number","ActionContainer","xl","ActionTitles","ActionContent","earningsBigNumber","isZero","Staked","_useFarmUser","daysToLock","_x3","_callee3","_context3","toUpperCase","marginTop","expandAnimation","collapseAnimation","StakeContainer","_templateObject7","TagsContainer","_templateObject8","_templateObject9","InfoContainer","_templateObject10","ValueContainer","_templateObject11","ValueWrapper","_templateObject12","ActionPanel","details","tokenOnly","isActive","scan","noFees","link","StakedAction","MobileColumnSchema","id","name","sortable","DesktopColumnSchema","ViewMode","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","_useMatchBreakpoints","useMatchBreakpoints","isXl","isXs","isMobile","tableSchema","columnNames","column","Object","keys","key","columnIndex","indexOf","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","columns","rows","useTable","sortColumn","row","_createElement","original","scrollIntoView","behavior","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","StatsContainer","getSortOptions","Farms","path","useRouteMatch","_useFarms","useFarms","farmsData","userDataLoaded","query","setQuery","_usePersistState","TABLE","viewMode","sortOption","setSortOption","isArchived","isInactive","usePollFarmsData","isInWhiteList","forEach","farmsLP","stakedOnly","setStakedOnly","dibPerSecond","useDIBPerSecond","activeFarms","filter","isArchivedPid","upcomingFarms","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","usdcPrice","totalLiquidity","getFarmApr","poolWeight","lowercaseQuery","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","_toConsumableArray","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","Page","TutorialBanner","FarmStakingCard","DIBStats","Toggle","sort","a","b","Table","Route","exact","renderContent"],"mappings":"8MA8BMA,EAAeC,IAAOC,IAAGC,MAAAC,YAAA,6CACnB,SAACC,GAAK,OAAKA,EAAMC,IAAI,IACtB,SAACD,GAAK,OAAKA,EAAMC,IAAI,IAGjBC,EA5BuB,SAAHC,GAAyB,IAGtDC,EAHqDC,EAAAF,EAAlBF,YAAI,IAAAI,EAAG,KAAIA,EAC1CC,EAAYC,qBAAWC,KAAvBF,QAGR,OAAQL,GACN,IAAK,KACHG,EAAIE,EAAQ,GACZ,MACF,IAAK,KACHF,EAAIE,EAAQ,GACZ,MAEF,QACEF,EAAIE,EAAQ,GAGhB,OAAOG,cAACd,EAAY,CAACM,KAAMG,GAC7B,ECLMM,EAAqBd,IAAOC,IAAGC,MAAAC,YAAA,mHAEf,SAACC,GAAK,OAAKA,EAAMW,MAAMC,OAAOC,WAAW,IAGlD,SAACb,GAAK,OAAKA,EAAMW,MAAML,QAAQ,EAAE,IAGxCQ,EAAoBlB,IAAOC,IAAGkB,MAAAhB,YAAA,sBAIrBiB,EA1BgB,SAAHb,GAAsB,IAAhBc,EAAQd,EAARc,SAC1BC,EAAIC,IAAMC,SAASC,QAAQJ,GAAUK,OAC3C,OACEb,cAACC,EAAkB,CAAAO,SAChBE,IAAMC,SAASG,IAAIN,GAAU,SAACO,EAAOC,GAAC,OACrCC,eAAAC,WAAA,CAAAV,SAAA,CACER,cAACK,EAAiB,CAAAG,SAAEO,IACnBC,EAAIP,EAAI,GAAKT,cAACP,EAAM,MACpB,KAIX,C,kICSM0B,EAAmBhC,IAAOC,IAAGC,MAAAC,YAAA,6KAGb,SAAA8B,GAAQ,OAAAA,EAALlB,MAAkBC,OAAOkB,KAAK,IAXlC,SAAH3B,GAAsC,IAAD4B,EAAA5B,EAA/B6B,iBAAS,IAAAD,GAAQA,EAAEpB,EAAKR,EAALQ,MACzC,OAAIqB,EACKrB,EAAMsB,QAAQC,QAGhBvB,EAAMsB,QAAQE,KACvB,IAQW,SAAAC,GAAQ,OAAAA,EAALzB,MAAkBC,OAAOyB,IAAI,IAKrCC,EAAc1C,YAAO2C,IAAP3C,CAAamB,MAAAhB,YAAA,oJAM7B,SAAAyC,GAAQ,OAAAA,EAAL7B,MAAkB8B,aAAaC,EAAE,IAIpC,SAAAC,GAAQ,OAAAA,EAALhC,MAAkB8B,aAAaG,EAAE,IAKlCC,EAAqBjD,YAAOkD,IAAPlD,CAAYmD,MAAAhD,YAAA,qFAmExBiD,EA3D+B,SAAHC,GASpC,IARLC,EAAGD,EAAHC,IACAC,EAAMF,EAANE,OACAC,EAAQH,EAARG,SACAC,EAAWJ,EAAXI,YACAC,EAAKL,EAALK,MACAC,EAAeN,EAAfM,gBACAC,EAAUP,EAAVO,WAAUC,EAAAR,EACVS,gBAAQ,IAAAD,EAAG,GAAEA,EAELE,EAAMC,cAAND,EACFE,EAAwB,MAARX,IAAgBA,EAatC,OACExB,eAAA,OAAKoC,MAAO,CAAEC,SAAU,YAAa9C,SAAA,CACnCS,eAACE,EAAgB,CAACI,UAAW6B,EAAc5C,SAAA,CACzCS,eAACsC,IAAI,CAACC,eAAe,gBAAgBC,GAAG,OAAMjD,SAAA,CAC5CR,cAACqC,IAAI,CAACqB,SAAS,OAAMlD,SAAEuC,IACvB/C,cAACqC,IAAI,CAACqB,SAAS,OAAMlD,SAAE0C,EAAE,qBAAsB,CAAES,QAhBlC,SAACA,GACtB,GAAIP,EACF,MAAO,IAET,IAAMQ,EAAmB,IAAIC,YAAUF,GACvC,OAAIC,EAAiBE,GAAG,IAAMF,EAAiBG,GAAG,MACzCH,EAAiBI,iBAEnBJ,EAAiBK,QAAQ,EAAGJ,YAAUK,WAC/C,CAOkEC,CAAe1B,UAE3ExB,eAACsC,IAAI,CAACa,WAAW,WAAWZ,eAAe,eAAchD,SAAA,CACvDR,cAAC6B,EAAW,CACVwC,QAAO,uBAAAC,OAAyBrB,EAAQ,MACxCsB,UAAU,UACVC,KAAK,MACLC,IAAI,IACJ9B,SAAUA,EACV+B,YAAY,IACZ7B,MAAOA,IAET7C,cAAC2E,IAAM,CAACC,MAAM,KAAKC,QAASjC,EAAakC,GAAG,MAAKtE,SAC9C0C,EAAE,SAELlD,cAACqC,IAAI,CAACqB,SAAS,OAAMlD,SAAEkC,UAG1BU,GACCnC,eAACmB,EAAkB,CAACsB,SAAS,OAAOqB,MAAM,UAASvE,SAAA,CAChD0C,EAAE,sBAAsB,IAAE,IAC3BlD,cAACgF,IAAI,CAACtB,SAAS,OAAOuB,MAAM,EAAOC,KAAMpC,EAAiBqC,UAAQ,EAACJ,MAAM,UAASvE,SAC/E0C,EAAE,eAAgB,CAAER,kBAMjC,C,uEClHM0C,EAAQjG,IAAOC,IAAGC,MAAAC,YAAA,sKAUlB+F,EAAmBlG,IAAOC,IAAGkB,MAAAhB,YAAA,yEAmBpBgG,IAT+B,SAAH5F,GAAkC,IAAD6F,EAAA7F,EAA3B8F,aAAK,IAAAD,EAAG,GAAEA,EAAE/E,EAAQd,EAARc,SAC3D,OACES,eAAA,OAAAT,SAAA,CACGgF,GAASxF,cAACoF,EAAK,CAAA5E,SAAEgF,IAClBxF,cAACqF,EAAgB,CAAA7E,SAAEA,MAGzB,C,sPCEeiF,EA5BM,WACnB,IAAMC,EAAqBC,cACnBC,EAAgBC,cAAhBD,YACRE,EAA8BC,oBAAkB,GAAMC,EAAAC,YAAAH,EAAA,GAA/CI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAAwBL,mBAAiB,GAAEM,EAAAJ,YAAAG,EAAA,GAApCE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GAkBpB,OAhBAG,qBAAU,WACR,IAAMC,EAAc,eAAA/G,EAAAgH,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,OAFGF,EAAAC,KAAA,EAEnBd,GAAW,GAAKa,EAAAE,KAAA,EACQxB,EAAmByB,QAAQL,YAAYM,OAAM,OAA/DN,EAASE,EAAAK,KACfd,EAAoB,IAAZO,GAAiBE,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEzBO,QAAQC,MAAM,yBAAwBR,EAAAM,IAAI,QAEzB,OAFyBN,EAAAC,KAAA,GAE1Cd,GAAW,GAAMa,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAEpB,kBAVmB,OAAAnH,EAAAiI,MAAA,KAAAC,UAAA,KAYpBnB,GACF,GAAG,CAACf,EAAoBE,IAEjB,CACLU,OACAJ,UAEJ,E,gBCzBM2B,EAAkB1I,IAAO2I,KAAIzI,MAAAC,YAAA,oDAK7ByI,EAAW,SAAHrI,GAAkC,IAA5BsI,EAAStI,EAATsI,UAAWC,EAASvI,EAATuI,UACrBC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,QAASC,EAAYJ,EAAZI,QAC9B,OAAIL,EAEK,UAIPhI,cAAA,OAAAQ,SACES,eAAA,OAAAT,SAAA,CACER,cAAC6H,EAAe,CAAArH,SAAE0H,IAAuB,SAAMlI,cAAC6H,EAAe,CAAArH,SAAE2H,IAAwB,SAAO,IAChGnI,cAAC6H,EAAe,CAAArH,SAAE4H,IAA0B,YAASpI,cAAC6H,EAAe,CAAArH,SAAE6H,IAA0B,eAIzG,EAceC,EAZQ,SAAHlH,GAA6B,IAAvBmH,EAAenH,EAAfmH,gBACxB,OACEvI,cAACqC,IAAI,CAACqB,SAAS,OAAO8E,aAAa,OAAMhI,SACtC+H,EACCvI,cAACyI,IAAS,CAACC,KAAMH,EAAiBR,SAAUA,IAE5C/H,cAAC2I,IAAQ,CAACC,MAAO,IAAKC,OAAQ,MAItC,EC5BMC,EAAa3J,YAAO4J,IAAP5J,CAAYE,MAAAC,YAAA,oDAkBhB0J,EAbG,WAChB,IAAAC,EAAqCxD,IAAvBqB,EAASmC,EAAf3C,KAAiBJ,EAAO+C,EAAP/C,QACzB,OAAIY,EAAYoC,KAAKC,MAAc,KAEjClI,eAAC6H,EAAU,CAAAtI,SAAA,CACTR,cAACqC,IAAI,CAAA7B,SAAC,0BACL0F,IAAYY,EAAY9G,cAACoJ,IAAO,CAAC5J,KAAM,KAASQ,cAACsI,EAAc,CAACC,gBAAiBzB,IAClF9G,cAACqC,IAAI,CAAA7B,SAAC,qDACNR,cAACqC,IAAI,CAAA7B,SAAC,+DAGZ,ECVe6I,EAbIlK,IAAOC,IAAGC,MAAAC,YAAA,0M,mCCOvBgK,EAAiB,CACrBC,QAASC,IACTC,UAAWD,KAyBEE,EAnBS,SAACC,EAAmBC,GAC1C,IAAAC,EAAAC,wBAAA,GAAqDR,GAAmBM,GAAhEG,EAAeF,EAAfE,gBAAiBR,EAAOM,EAAPN,QAASE,EAASI,EAATJ,UAClC3D,EAA0BC,oBAAS,WACjC,IACE,IAAMiE,EAAcC,aAAaC,QAAQH,GAEzC,OAAOC,EAAcT,EAAQY,KAAKC,MAAMJ,IAAgBL,CAC1D,CAAE,MAAOnC,GACP,OAAOmC,CACT,CACF,IAAE3D,EAAAC,YAAAH,EAAA,GARKjD,EAAKmD,EAAA,GAAEqE,EAAQrE,EAAA,GActB,OAJAQ,qBAAU,WACRyD,aAAaK,QAAQP,EAAiBI,KAAKI,UAAUd,EAAU5G,IACjE,GAAG,CAACA,EAAOkH,EAAiBN,IAErB,CAAC5G,EAAOwH,EACjB,E,oDClCaG,GAAW,CACtBC,UAAW,CACTC,SAAG,IACHC,SAAG,MAIMC,GAAW,SAACvJ,GACvB,OAAOA,EAAMwJ,QAAQ,qBAAqB,SAACC,GAAC,OAAKN,GAASC,UAAUK,IAAMA,CAAC,GAC7E,E,+BCHMjJ,GAAc1C,YAAO2C,IAAP3C,CAAaE,MAAAC,YAAA,uDAK3ByL,GAAe5L,IAAOC,IAAGkB,MAAAhB,YAAA,oEAE3B,SAAAI,GAAQ,OAAAA,EAALQ,MAAkB8B,aAAaG,EAAE,IAKlC6I,GAAY7L,IAAOC,IAAGkD,MAAAhD,YAAA,QAqCb2L,GA9BsB,SAAH7J,GAAgE,IAAhD8J,EAAgB9J,EAA1BuB,SAAQwI,EAAA/J,EAAoBsD,mBAAW,IAAAyG,EAAG,SAAQA,EACxFrF,EAA8BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAtCsF,EAAOpF,EAAA,GAAEqF,EAAUrF,EAAA,GAC1BI,EAAoCL,mBAAS,IAAGM,EAAAJ,YAAAG,EAAA,GAAzCkF,EAAUjF,EAAA,GAAEkF,EAAalF,EAAA,GAExBnD,EAAMC,cAAND,EAEFsI,EAAoBC,mBACxB,kBAAMC,MAAS,SAACC,GAAsC,OAAKT,EAAiBS,EAAE,GAAE,IAAI,GACpF,CAACT,IAQH,OACElL,cAACgL,GAAS,CAACI,QAASA,EAAQ5K,SAC1BR,cAAC+K,GAAY,CAAAvK,SACXR,cAAC6B,GAAW,CACVgB,MAAOyI,EACP3I,SAVS,SAACgJ,GAChBJ,EAAcI,EAAEC,OAAO/I,OACvB2I,EAAkBG,EACpB,EAQQjH,YAAaxB,EAAEwB,GACfmH,OAAQ,kBAAMR,GAAW,EAAM,OAKzC,ECjDMS,GAAiB3M,IAAOC,IAAGC,MAAAC,YAAA,+QAOjB,SAAAI,GAAQ,OAAAA,EAALQ,MAAkBsB,QAAQE,KAAK,IAC5B,SAAAN,GAAQ,OAAAA,EAALlB,MAAkBC,OAAO4L,cAAc,IAM1DC,GAAwB7M,IAAOC,IAAGkB,MAAAhB,YAAA,0SAM3B,SAAAqC,GAAQ,OAAAA,EAALzB,MAAkB+L,SAASC,QAAQ,IAO/C,SAAAnK,GAAQ,OAAAA,EAAL7B,MAAkB8B,aAAaG,EAAE,IAKlCgK,GAAoBhN,IAAOC,IAAGkD,MAAAhD,YAAA,6UAEzB,SAAA4C,GAAQ,OAAAA,EAAL0G,KAAiB,IAQ3B,SAAApG,GAAQ,OAAAA,EAALtC,MAAkB8B,aAAaG,EAAE,IAIpC,SAAC5C,GAAK,OACNA,EAAM6M,QACNC,YAAGC,MAAAhN,YAAA,sUACCwM,IAC2B,SAAAS,GAAQ,OAAAA,EAALrM,MAAkBC,OAAO4L,cAAc,IACvD,SAAAS,GAAQ,OAAAA,EAALtM,MAAkBuM,QAAQC,SAAS,GAGpDV,IAIoB,SAAAW,GAAQ,OAAAA,EAALzM,MAAkBC,OAAO4L,cAAc,IAGhD,SAAAa,GAAQ,OAAAA,EAAL1M,MAAkBuM,QAAQC,SAAS,GAEvD,IAUCG,GAAe1N,IAAO2N,GAAEC,MAAAzN,YAAA,mFAIjB,SAAA0N,GAAQ,OAAAA,EAAL9M,MAAkB+L,SAASC,SAAW,CAAC,IAGjDe,GAAW9N,IAAO+N,GAAEC,MAAA7N,YAAA,6FAIR,SAAA8N,GAAQ,OAAAA,EAALlN,MAAkBC,OAAO4L,cAAc,IA8D7CsB,GAhDsC,SAAHC,GAA+B,IAAzBC,EAAOD,EAAPC,QAAS5K,EAAQ2K,EAAR3K,SACzD6K,EAAeC,iBAAO,MACtBC,EAAcD,iBAAO,MAC3B3H,EAA4BC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAApCsG,EAAMpG,EAAA,GAAE2H,EAAS3H,EAAA,GACxBI,EAAsDL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAA1DwH,EAAmBvH,EAAA,GAAEwH,EAAsBxH,EAAA,GAClDyH,EAA0C/H,mBAAS,CAAE6C,MAAO,EAAGC,OAAQ,IAAIkF,EAAA9H,YAAA6H,EAAA,GAApEE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GAEhCG,EAAW,WAAH,OAASP,GAAWvB,EAAO,EAkBzC,OAPA5F,qBAAU,WACRyH,EAAiB,CACfrF,MAAO8E,EAAYS,QAAQC,YAC3BvF,OAAQ6E,EAAYS,QAAQE,cAEhC,GAAG,IAGDpN,eAACkL,GAAiBrC,wBAAA,CAACsC,OAAQA,EAAQkC,IAAKd,GAAkBQ,GAAa,IAAAxN,SAAA,CAC5C,IAAxBwN,EAAcpF,OACb5I,cAAC8L,GAAc,CAACjH,QAASqJ,EAAS1N,SAChCR,cAACqC,IAAI,CAAA7B,SAAE+M,EAAQK,GAAqBpI,UAGxCxF,cAACuO,IAAiB,CAACxJ,MAAM,OAAOF,QAASqJ,IACzClO,cAACgM,GAAqB,CAAAxL,SACpBR,cAAC6M,GAAY,CAACyB,IAAKZ,EAAYlN,SAC5B+M,EAAQzM,KAAI,SAAC0N,EAAQC,GAAK,OACzBA,IAAUb,EACR5N,cAACiN,GAAQ,CAACpI,SA5BG6J,EA4BsBD,EA5BI,WACjDZ,EAAuBa,GACvBf,GAAU,GAENhL,GACFA,EAAS4K,EAAQmB,GAErB,GAqBsDlO,SACxCR,cAACqC,IAAI,CAAA7B,SAAEgO,EAAOhJ,SADgCgJ,EAAOhJ,OAGrD,KA/BU,IAACkJ,CA+BP,WAMpB,E,8BC1IMC,GAAUxP,IAAOC,IAAGC,MAAAC,YAAA,oIAOd,SAAAI,GAAQ,OAAAA,EAALQ,MAAkBC,OAAOyO,OAAO,IAIzCC,GAAkE,SAAHzN,GAA+B,IAAzByD,EAAOzD,EAAPyD,QAASiK,EAAQ1N,EAAR0N,SAC1E5L,EAAMC,cAAND,EAER,OACEjC,eAAC0N,GAAO,CAAC,aAAYzL,EAAE,mCAAoC6L,KAAK,SAASlK,QAAS,kBAAMA,GAAS,EAACrE,SAAA,CAChGR,cAACqC,IAAI,CAAC0C,MAAM,UAAUE,MAAI,EAAAzE,SACZ0C,EAAX4L,EAAa,OAAY,aAE3BA,EAAW9O,cAACgP,IAAa,IAAMhP,cAACiP,IAAe,MAGtD,EAEAJ,GAAwBK,aAAe,CACrCJ,UAAU,GAGGD,I,2NAAAA,M,SCvBAM,GAVkB,SAAHzP,GAA6C,IAAvC0P,EAAiB1P,EAAjB0P,kBAAmBC,EAAY3P,EAAZ2P,aAC/CC,EAAoBC,eACpBC,EAAkCJ,EAAoBA,EAAkBK,KAAY,KACpFC,EAA6BL,EAAeA,EAAaI,KAAY,KAGrEE,EAAcD,GAAsBA,IAAuBJ,EAA4BI,EAAR,MACrF,MAAM,GAANpL,OAFGkL,GAA2BA,IAA4BF,EAA4BE,EAAR,MAE3D,KAAAlL,OAAIqL,EACzB,ECCMhB,GAAUxP,IAAOC,IAAGC,QAAAC,YAAA,+BAIpBsQ,GAAqBzQ,YAAO0Q,IAAP1Q,CAAoBmB,QAAAhB,YAAA,+BA6BhCwQ,GAzB0C,SAAHpQ,GAO/C,IANLqQ,EAAcrQ,EAAdqQ,eACAC,EAAWtQ,EAAXsQ,YACAC,EAAOvQ,EAAPuQ,QACAC,EAAmBxQ,EAAnBwQ,oBACAC,EAAOzQ,EAAPyQ,QACArN,EAAepD,EAAfoD,gBAEQI,EAAMC,cAAND,EAER,OACEjC,eAAC0N,GAAO,CAAAnO,SAAA,CACNS,eAACsC,IAAI,CAACC,eAAe,gBAAehD,SAAA,CAClCS,eAACoB,IAAI,CAAA7B,SAAA,CAAE0C,EAAE,mBAAmB,OAC3BgN,EAAsBlQ,cAACqC,IAAI,CAAA7B,SAAE0P,IAA8BlQ,cAAC2I,IAAQ,CAACC,MAAO,GAAIC,OAAQ,SAEzFoH,GACAjQ,cAAC4P,GAAkB,CAAC1K,KAAMpC,EAAgBtC,SAAE0C,EAAE,eAAgB,CAAER,OAAQyN,MAE1EnQ,cAAC4P,GAAkB,CAAC1K,KAAM6K,EAAevP,SAAE0C,EAAE,mBAC7ClD,cAAC4P,GAAkB,CAAC1K,KAAM8K,EAAYxP,SAAE0C,EAAE,gBAGhD,EChCMkN,GAAgC,SAAC7Q,GACrC,IAAQ2D,EAAMC,cAAND,EACR,OACElD,cAACqQ,IAAGvG,wBAAA,CAACwG,QAAQ,UAAUC,SAAO,EAACC,UAAWxQ,cAACyQ,IAAY,CAAC7H,MAAM,OAAO7D,MAAM,UAAUD,GAAG,SAAcvF,GAAK,IAAAiB,SACxG0C,EAAE,aAGT,EAqCMwN,GAA4C,SAACnR,GACjD,IAAQ2D,EAAMC,cAAND,EACR,OACElD,cAACqQ,IAAGvG,wBAAA,CAACwG,QAAQ,UAAUC,SAAO,EAACC,UAAWxQ,cAAC2Q,IAAa,CAAC/H,MAAM,OAAO7D,MAAM,UAAUD,GAAG,SAAcvF,GAAK,IAAAiB,SACzG0C,EAAE,2BAGT,E,8CCrDa0N,GAAuB,SAACC,GACnC,IAAMnO,EAASmO,EAAMnO,OAAOoO,cAC5B,MAAM,kBAANxM,OAAyB5B,EAAM,OACjC,EAYeqO,GAVuC,SAAHrR,GAAoD,IAA9CsR,EAAYtR,EAAZsR,aAAcC,EAAcvR,EAAduR,eAAmB1R,EAAK2R,aAAAxR,EAAAyR,IAC7F,OACEnR,cAACoR,IAAmBtH,YAAA,CAClBuH,WAAYT,GAAqBI,GACjCM,aAAcV,GAAqBK,IAC/B1R,GAGV,E,mBCNMoP,GAAUxP,YAAOoE,IAAPpE,CAAYE,QAAAC,YAAA,gDAMtBiS,GAAgBpS,YAAOkR,IAAPlR,CAAWmB,QAAAhB,YAAA,+BAI3BkS,GAAW,GAoCFC,GAlCuC,SAAH/R,GAO5C,IANLyQ,EAAOzQ,EAAPyQ,QACAuB,EAAUhS,EAAVgS,WACAC,EAAcjS,EAAdiS,eACAC,EAAWlS,EAAXkS,YACAf,EAAKnR,EAALmR,MACAgB,EAAUnS,EAAVmS,WAEA,OACE5Q,eAAC0N,GAAO,CAACnL,eAAe,gBAAgBY,WAAW,SAAS0N,GAAG,OAAMtR,SAAA,CACnES,eAACsC,IAAI,CAACwO,cAAc,SAAS3N,WAAW,aAAY5D,SAAA,CAClDR,cAACgS,IAAO,CAACF,GAAG,MAAKtR,SAAE2P,EAAQ8B,MAAM,KAAK,KACtChR,eAACsC,IAAI,CAACC,eAAe,SAAQhD,SAAA,CAC1BmR,GAAkB3R,cAACoQ,GAAS,IAC7BpQ,cAACuR,GAAa,CAACjB,QAAQ,YAAW9P,SAAEkR,GAAc,cAGrDE,EACC5R,cAACkS,KAAY,CAACtJ,MAAO4I,GAAU3I,OAAQ2I,GAAShR,SAC9CR,cAACmS,KAAkB,CAAC7B,QAAQ,WAAW8B,IAAKxB,GAAqBC,GAAQjI,MAAO4I,GAAU3I,OAAQ2I,OAGpGxR,cAAC+Q,GAAc,CACbT,QAAQ,WACRU,aAAcH,EACdI,eAAgBY,EAChBjJ,MAAO4I,GACP3I,OAAQ2I,OAKlB,E,4BCvDaa,GAAa,SAACC,GACzB,IAAQC,EAAYC,cAAZD,QACF7M,EAAqBC,cAW3B,MAAO,CAAE8M,UATaC,sBAAWhM,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAA8L,EAAA,OAAAhM,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEb0L,aAAQN,EAAY5M,EAAoB6M,GAAQ,OAAzD,OAAFI,EAAE3L,EAAAK,KAAAL,EAAA6L,OAAA,SACDF,GAAE,cAAA3L,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAAAA,EAAA6L,OAAA,UAEF,GAAK,yBAAA7L,EAAAU,OAAA,GAAAb,EAAA,kBAEb,CAAC0L,EAASD,EAAY5M,IAG3B,E,sGCiBeoN,GAzByB,SAAHpT,GAS9B,IARLmD,EAAKnD,EAALmD,MAAKkQ,EAAArT,EACLqF,aAAK,IAAAgO,EAAG,OAAMA,EAAAC,EAAAtT,EACduD,gBAAQ,IAAA+P,EAAG,EAACA,EAAAC,EAAAvT,EACZwT,kBAAU,IAAAD,GAAQA,EAClBE,EAAIzT,EAAJyT,KACAC,EAAM1T,EAAN0T,OACAvO,EAAOnF,EAAPmF,QACGtF,EAAK2R,aAAAxR,EAAAyR,IAEFkC,EAAgB5F,iBAAO,GAM7B,OAJAjH,qBAAU,WACR6M,EAAclF,QAAUtL,CAC1B,GAAG,CAACA,IAGF5B,eAACoB,IAAIyH,wBAAA,CAAC/E,MAAOmO,EAAa,eAAiBnO,EAAOF,QAASA,GAAatF,GAAK,IAAAiB,SAAA,CAC1E4S,GAAUpT,cAAA,QAAAQ,SAAO4S,IAClBpT,cAACsT,KAAO,CAACC,MAAOF,EAAclF,QAASqF,IAAK3Q,EAAOI,SAAUA,EAAUwQ,SAAU,EAAGC,UAAU,MAC7FP,GAAQnT,cAAA,QAAAQ,SAAO2S,OAGtB,E,2BC8CeQ,GAxEE,SAACC,GAChB,IAAQrB,EAAYC,cAAZD,QACF7M,EAAqBC,cACrBkO,EAAOC,YAAeF,GACpBG,EAAeC,cAAfD,WAEFE,EAAgBJ,EAAKjC,YAAciC,EAAKhD,MAAM5N,SAAW,GAEzDiR,EAAcxB,sBAAW,eAAAhT,EAAAgH,YAAAC,cAAAC,MAC7B,SAAAC,EAAOsN,GAAc,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5M,UAAA,OAAAjB,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAEkN,EAAUI,EAAA3T,OAAA,QAAA4T,IAAAD,EAAA,GAAAA,EAAA,GAAG,EAC5BH,EAAsBK,sBAAmBC,GAC7CZ,EAAWa,OAAO9T,KAAI,SAAC+T,GAAI,OAAKA,EAAKhS,KAAK,IAC1CkR,EAAWe,cAETR,EAAQ,GACZ,IACEA,EAAQD,EAAoBU,SAAS,CAACxC,GACxC,CAAE,MAAO5G,GACPpE,QAAQC,MAAM,wBAAyBmE,EACzC,CAAC,OAAA3E,EAAAE,KAAA,EACoB8N,aACnBtP,EACAkO,EACAO,EACAC,EACAE,EACA/B,EACA0C,KAAQC,IAAIjB,IACb,OARKM,EAAMvN,EAAAK,KASZE,QAAQ4N,KAAKZ,GAAO,wBAAAvN,EAAAU,OAAA,GAAAb,EAAA,KACrB,gBAAAuO,GAAA,OAAA1V,EAAAiI,MAAA,KAAAC,UAAA,EAtB4B,GAuB7B,CAAC2K,EAAS7M,EAAoBkO,EAAKK,EAAeF,IAGpD,MAAO,CAAEsB,QAASnB,EACpB,ECUeoB,GA9CI,SAAC1B,GAClB,IAAQrB,EAAYC,cAAZD,QACF7M,EAAqBC,cACrBkO,EAAOC,YAAeF,GAEtBK,EAAgBJ,EAAKjC,YAAciC,EAAKhD,MAAM5N,SAAW,GAEzDsS,EAAgB7C,sBAAW,eAAAhT,EAAAgH,YAAAC,cAAAC,MAC/B,SAAAC,EAAOsN,GAAc,IAAAI,EAAA,OAAA5N,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEsO,aAAQ9P,EAAoBkO,EAAKO,EAAQ5B,EAAS0C,KAAQC,IAAIjB,IAAe,OAA5FM,EAAMvN,EAAAK,KACZE,QAAQ4N,KAAKZ,GAAO,wBAAAvN,EAAAU,OAAA,GAAAb,EAAA,KACrB,gBAAAuO,GAAA,OAAA1V,EAAAiI,MAAA,KAAAC,UAAA,EAJ8B,GAK/B,CAAC2K,EAAS7M,EAAoBkO,EAAKK,IAGrC,MAAO,CAAEwB,UAAWF,EACtB,E,yCCZMG,GAAsBvW,IAAOC,IAAGC,QAAAC,YAAA,+CAKhCqW,GAAuBxW,IAAOC,IAAGkB,QAAAhB,YAAA,kCAIjCsW,GAAuBzW,IAAOC,IAAGkD,QAAAhD,YAAA,QAEjCuW,GAAsB1W,IAAOqG,MAAK8G,QAAAhN,YAAA,+IAUlCwW,GAAuB3W,IAAOC,IAAG2N,QAAAzN,YAAA,iIAUjCyW,GAAc,CAClB,CACElT,MAAO,EACPmT,SAAU,GAEZ,CACEnT,MAAO,GACPmT,SAAU,KAEZ,CACEnT,MAAO,GACPmT,SAAU,IAEZ,CACEnT,MAAO,GACPmT,SAAU,MAkBRC,GAAc,yBAmCdC,GAAa/W,IAAOC,IAAG+N,QAAA7N,YAAA,+BAIvB6W,GAAgB,SAAHxU,GAAiF,IAClGyU,EAtCuB,SAAH1W,GAAiE,IAA3DkU,EAAGlU,EAAHkU,IAAKrB,EAAO7S,EAAP6S,QAAS4B,EAAMzU,EAANyU,OAAQC,EAAU1U,EAAV0U,WAAYnR,EAAQvD,EAARuD,SAAUoT,EAAO3W,EAAP2W,QAChEC,EAAa3Q,cACnBG,EAA8BC,oBAAkB,GAAMC,EAAAC,YAAAH,EAAA,GAA/CI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAA0CL,mBAAS,GAAEM,EAAAJ,YAAAG,EAAA,GAA9CmQ,EAAalQ,EAAA,GAAEmQ,EAAgBnQ,EAAA,GAwBtC,OAtBAG,qBAAU,WACR,IAAMiQ,EAAkB,eAAArV,EAAAsF,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAA6P,EAAAC,EAAA,OAAAhQ,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAI+D,OAJ/DF,EAAAC,KAAA,EAEvBd,GAAW,GAELuQ,EAAY,IAAI7S,IAAUsQ,GAAU,KAAKyC,MAAM3B,KAAQC,IAAIjS,IAAW4T,WAAU7P,EAAAE,KAAA,EAE/DoP,EAAWnP,QAC/B2P,8BAA8BvE,EAASqB,EAAkB,GAAbQ,EAAkB,GAAK,GAAIsC,GACvEtP,OAAM,OAFHuP,EAAQ3P,EAAAK,KAIdmP,EAAiBtN,KAAKC,MAAmB,IAAXwN,GAAgB3P,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE9CO,QAAQC,MAAKR,EAAAM,IAAG,QAEC,OAFDN,EAAAC,KAAA,GAEhBd,GAAW,GAAMa,EAAAS,OAAA,6BAAAT,EAAAU,OAAA,GAAAb,EAAA,wBAEpB,kBAhBuB,OAAAzF,EAAAuG,MAAA,KAAAC,UAAA,KAkBpByO,GAASI,GACf,GAAG,CAAClE,EAASqB,EAAKO,EAAQlR,EAAUmR,EAAYkC,EAAYD,IAErD,CACLnQ,UACAI,KAAMiQ,EAEV,CAO4BQ,CAAiB,CACzCnD,IAFwBjS,EAAHiS,IAGrBrB,QAHiC5Q,EAAP4Q,QAI1B4B,OAJyCxS,EAANwS,OAKnClR,SALmDtB,EAARsB,SAM3CmR,WAN+DzS,EAAVyS,WAOrDiC,QAPwF1U,EAAvBqV,0BAC3D9Q,EAAOkQ,EAAPlQ,QAASI,EAAI8P,EAAJ9P,KASjB,OAAIJ,EAEAjF,eAACiV,GAAU,CAAA1V,SAAA,CAAC,oBACOR,cAAC2I,IAAQ,CAACC,MAAM,WAKhC3H,eAACiV,GAAU,CAAA1V,SAAA,CAAC,oBAAkB8F,EAAO,EAAI2Q,KAAO3Q,EAAM,KAAK4Q,OAAOjB,IAAe,MAC1F,EAkHekB,GAhHmC,SAAHpV,GAYxC,IAXLU,EAAGV,EAAHU,IACA2U,EAASrV,EAATqV,UACAC,EAAStV,EAATsV,UAASC,EAAAvV,EACTwV,iBAAS,IAAAD,EAAG,GAAEA,EACdxU,EAAef,EAAfe,gBAAe0U,EAAAzV,EACfkB,gBAAQ,IAAAuU,EAAG,GAAEA,EACbR,EAAuBjV,EAAvBiV,wBACAS,EAAU1V,EAAV0V,WACAC,EAAU3V,EAAV2V,WACAnF,EAAOxQ,EAAPwQ,QACAqB,EAAG7R,EAAH6R,IAEA9F,EAAsB/H,mBAAS,IAAGgI,EAAA9H,YAAA6H,EAAA,GAA3B6J,EAAG5J,EAAA,GAAE6J,EAAM7J,EAAA,GAClB8J,EAAoC9R,mBAAS,GAAE+R,EAAA7R,YAAA4R,EAAA,GAAxCzD,EAAU0D,EAAA,GAAEC,EAAaD,EAAA,GAChCE,EAAkCjS,oBAAS,GAAMkS,EAAAhS,YAAA+R,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtB/U,EAAMC,cAAND,EACFkV,EAAc3M,mBAAQ,WAC1B,OAAO4M,YAAsB5V,EAC/B,GAAG,CAACA,IAEE6V,EAAY,IAAIzU,IAAU8T,GAC1BY,EAAoB,IAAI1U,IAAUuU,GAElCI,EAAe9F,uBACnB,SAAC/G,GACKA,EAAE8M,cAAcC,SAASC,OAC3Bf,EAAOjM,EAAE8M,cAAc5V,MAAMgI,QAAQ,KAAM,KAE/C,GACA,CAAC+M,IAGGgB,EAAyB,SAACC,GAC9B,IAAQhW,EAAUgW,EAAIjN,OAAd/I,MACRkV,EAAce,SAASjW,GACzB,EAEMkW,EAAkBrG,uBAAY,WAClCkF,EAAOQ,EACT,GAAG,CAACA,EAAaR,IAEXoB,EAAmBC,WAAWxB,GAEpC,OACExW,eAACiY,IAAK,CAACC,MAAOjW,EAAE,gBAAiBmU,UAAWA,EAAU7W,SAAA,CACpDR,cAACuC,KAAU,CACTM,MAAO8U,EACP/U,YAAamW,EACbpW,SAAU6V,EACV/V,IAAK2V,EACL1V,OAAQ6U,EACRzU,gBAAiBA,EACjBC,WAAYG,EAAE,SACdD,SAAUA,IAEX+T,EACC/V,eAACyU,GAAmB,CAAAlV,SAAA,CAClBR,cAAC2V,GAAoB,CAAAnV,SAAC,wDACtBR,cAAC4V,GAAoB,CAAApV,SAClBuV,GAAYjV,KAAI,SAAC+T,GAAI,OACpB5T,eAAC4U,GAAmB,CAAArV,SAAA,CAClBR,cAACoZ,IAAK,CACJxU,MAAM,KACNjC,SAAUiW,EACV/V,MAAOgS,EAAKhS,MACZwW,QAASjF,IAAeS,EAAKhS,QAE/B5B,eAAC6U,GAAoB,CAAAtV,SAAA,CAClBqU,EAAKhS,MAAM,MAAIgS,EAAKhS,MAAQ,EAAI5B,eAAA,QAAAT,SAAA,CAAM,IAAEiX,EAAW,OAAW,KAAM,IACpEuB,GAAoB,EAAInE,EAAKmB,UAAU,SATlBnB,EAAKhS,MAWT,MAG1B5B,eAACiV,GAAU,CAAA1V,SAAA,CAAC,oBACQkX,EAAaxO,KAAKC,MAAQ8N,KAAOS,EAAY,KAAKR,OAAOjB,IAAe,cAE5FjW,cAACmW,GAAa,CACZlT,SAAUA,EACVsP,QAASA,EACTqB,IAAKA,EACLO,OAAQwD,EACRX,wBAAyBA,EACzB5C,WAAYA,OAGd,KACJnT,eAACV,KAAY,CAAAC,SAAA,CACXR,cAAC2E,IAAM,CAAC2L,QAAQ,YAAYzL,QAASwS,EAAWzO,MAAM,OAAO0Q,SAAUpB,EAAU1X,SAC9E0C,EAAE,YAELlD,cAAC2E,IAAM,CACLiE,MAAM,OACN0Q,SAAUpB,IAAcI,EAAUiB,YAAcjB,EAAUkB,GAAG,IAAMlB,EAAUxU,GAAGyU,GAChF1T,QAAO6B,YAAAC,cAAAC,MAAE,SAAA6S,IAAA,OAAA9S,cAAAI,MAAA,SAAA2S,GAAA,cAAAA,EAAAzS,KAAAyS,EAAAxS,MAAA,OACW,OAAlBiR,GAAa,GAAKuB,EAAAxS,KAAA,EACZkQ,EAAUO,EAAKvD,GAAW,OAChC+D,GAAa,GACbd,IAAW,wBAAAqC,EAAAhS,OAAA,GAAA+R,EAAA,KACXjZ,SAEW0C,EAAZgV,EAAc,uBAA4B,gBAG/ClY,cAAC6P,IAAY,CAAC3K,KAAMpC,EAAiBO,MAAO,CAAEsW,UAAW,UAAWnZ,SACjE0C,EAAE,eAAgB,CAAER,OAAQ6U,QAIrC,EC7OM1P,GAAkB1I,IAAO2I,KAAIzI,QAAAC,YAAA,oDAK7Bsa,GAAmBza,IAAOC,IAAGkB,QAAAhB,YAAA,uEAM7Bua,GAAe,WAAH,OAAS7Z,cAACqC,IAAI,CAACqB,SAAS,OAAMlD,SAAC,YAAe,EAE1DsZ,GAAoD,SAAHpa,GAAwB,IAAlBgY,EAAUhY,EAAVgY,WAmB3D,OACEzW,eAAC2Y,GAAgB,CAAApZ,SAAA,CACfR,cAACqC,IAAI,CAACyP,GAAG,OAAMtR,SAAC,gBACfkX,EAAa,EAAI1X,cAACyI,IAAS,CAACC,KAAMgP,EAAY3P,SArBlC,SAACgS,GAChB,IAAQ/R,EAAyB+R,EAAzB/R,UAAWC,EAAc8R,EAAd9R,UACXC,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,MAAOC,EAAqBH,EAArBG,QAASC,EAAYJ,EAAZI,QAC9B,OAAIL,EAEKhI,cAAC6Z,GAAY,IAIpB7Z,cAAA,OAAAQ,SACES,eAAA,OAAAT,SAAA,CACER,cAAC6H,GAAe,CAAArH,SAAE0H,IAAuB,SAAMlI,cAAC6H,GAAe,CAAArH,SAAE2H,IAAwB,SAAO,IAChGnI,cAAC6H,GAAe,CAAArH,SAAE4H,IAA0B,YAASpI,cAAC6H,GAAe,CAAArH,SAAE6H,IAA0B,eAIzG,IAK4ErI,cAAC6Z,GAAY,MAG3F,EAyEeG,GA/DqC,SAAH5Y,GAAmE,IAA7DgW,EAAShW,EAATgW,UAAWC,EAASjW,EAATiW,UAAW5U,EAAGrB,EAAHqB,IAAGwX,EAAA7Y,EAAEmW,iBAAS,IAAA0C,EAAG,GAAEA,EAAEvC,EAAUtW,EAAVsW,WAChG5R,EAAsBC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA3B6R,EAAG3R,EAAA,GAAE4R,EAAM5R,EAAA,GAClBI,EAAkCL,oBAAS,GAAMM,EAAAJ,YAAAG,EAAA,GAA1C8R,EAAS7R,EAAA,GAAE8R,EAAY9R,EAAA,GACtBnD,EAAMC,cAAND,EACFkV,EAAc3M,mBAAQ,WAC1B,OAAO4M,YAAsB5V,EAC/B,GAAG,CAACA,IAEE6V,EAAY,IAAIzU,IAAU8T,GAC1BY,EAAoB,IAAI1U,IAAUuU,GAElCI,EAAe9F,uBACnB,SAAC/G,GACKA,EAAE8M,cAAcC,SAASC,OAC3Bf,EAAOjM,EAAE8M,cAAc5V,MAAMgI,QAAQ,KAAM,KAE/C,GACA,CAAC+M,IAGGmB,EAAkBrG,uBAAY,WAClCkF,EAAOQ,EACT,GAAG,CAACA,EAAaR,IAEXsC,EAAcxC,EAAaxO,KAAKC,MAEhCgR,EACJjC,IAAcI,EAAUiB,YAAcjB,EAAUkB,GAAG,IAAMlB,EAAUxU,GAAGyU,KAAuB2B,EAE/F,OACEjZ,eAACiY,IAAK,CAACC,MAAOjW,EAAE,kBAAmBmU,UAAWA,EAAU7W,SAAA,CACtDR,cAACuC,KAAU,CACTK,YAAamW,EACbpW,SAAU6V,EACV3V,MAAO8U,EACPlV,IAAK2V,EACL1V,OAAQ6U,EACRxU,WAAYG,EAAE,aAGhBlD,cAAC8Z,GAAe,CAACpC,WAAYA,IAE7BzW,eAACV,KAAY,CAAAC,SAAA,CACXR,cAAC2E,IAAM,CAAC2L,QAAQ,YAAYzL,QAASwS,EAAWzO,MAAM,OAAO0Q,SAAUpB,EAAU1X,SAC9E0C,EAAE,YAELlD,cAAC2E,IAAM,CACL2U,SAAUa,EACVtV,QAAO6B,YAAAC,cAAAC,MAAE,SAAAC,IAAA,OAAAF,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACW,OAAlBiR,GAAa,GAAKnR,EAAAE,KAAA,EACZkQ,EAAUO,GAAI,OACpBQ,GAAa,GACbd,IAAW,wBAAArQ,EAAAU,OAAA,GAAAb,EAAA,KAEb+B,MAAM,OAAMpI,SAEC0C,EAAZgV,EAAc,uBAA4B,kBAKrD,EC1FMkC,GAAoBjb,IAAOC,IAAGC,QAAAC,YAAA,4DA2GrB+a,GApGqC,SAAH3a,GAU1C,IATL4a,EAAa5a,EAAb4a,cACAC,EAAY7a,EAAZ6a,aACAhD,EAAS7X,EAAT6X,UACA3D,EAAGlU,EAAHkU,IACA9Q,EAAepD,EAAfoD,gBACA2U,EAAU/X,EAAV+X,WACAT,EAAuBtX,EAAvBsX,wBACAU,EAAUhY,EAAVgY,WACA8C,EAAW9a,EAAX8a,YAEQtX,EAAMC,cAAND,EACAmS,EAAY1B,GAASC,GAArByB,QACAI,EAAcH,GAAW1B,GAAzB6B,UACFgF,EAAWC,cACXC,EAAWC,eACTrI,EAAYC,cAAZD,QACFsI,EAAUC,YAAgBvD,GAE1BrD,EAAW,eAAA9S,EAAAsF,YAAAC,cAAAC,MAAG,SAAAC,EAAOsN,GAAc,OAAAxN,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjCmO,EAAQlB,GAAO,OACrBwG,EAASI,aAAuB,CAAExI,UAASyI,KAAM,CAACpH,MAAQ,wBAAA5M,EAAAU,OAAA,GAAAb,EAAA,KAC3D,gBAHgBuO,GAAA,OAAAhU,EAAAuG,MAAA,KAAAC,UAAA,KAKX2N,EAAa,eAAA5T,EAAA+E,YAAAC,cAAAC,MAAG,SAAA6S,EAAOtF,GAAc,OAAAxN,cAAAI,MAAA,SAAA2S,GAAA,cAAAA,EAAAzS,KAAAyS,EAAAxS,MAAA,cAAAwS,EAAAxS,KAAA,EACnCuO,EAAUtB,GAAO,OACvBwG,EAASI,aAAuB,CAAExI,UAASyI,KAAM,CAACpH,MAAQ,wBAAA8F,EAAAhS,OAAA,GAAA+R,EAAA,KAC3D,gBAHkBwB,GAAA,OAAAtZ,EAAAgG,MAAA,KAAAC,UAAA,KAKbzD,EAAiBuO,uBAAY,WACjC,IAAMwI,EAAyBC,YAAiBb,GAChD,OAAIY,EAAuBpX,GAAG,IAAMoX,EAAuBnX,GAAG,MACrDsU,YAAsBiC,GAAetW,iBAEvCkX,EAAuBjX,QAAQ,EAAGJ,IAAUK,WACrD,GAAG,CAACoW,IAEEc,EAAcZ,GAAevB,WAAWxB,GAAc,GAAGZ,WAAaY,EAE5E4D,EAA2BC,YACzBtb,cAACmX,GAAY,CACXvD,IAAKA,EACLrB,QAASA,EACT9P,IAAK8X,EACLnD,UAAWlD,EACXqD,UAAWA,EACXzU,gBAAiBA,EACjB2U,WAAY2D,EACZpE,wBAAyBA,EACzBU,WAAYA,KAVT6D,EAYNtV,YAAAoV,EAAA,GAZsB,GAavBG,EAA4BF,YAC1Btb,cAACga,GAAa,CAACvX,IAAK6X,EAAelD,UAAW7B,EAAegC,UAAWA,EAAWG,WAAYA,KAD1F+D,EAENxV,YAAAuV,EAAA,GAFuB,GA4BxB,OACEva,eAACsC,IAAI,CAACC,eAAe,gBAAgBY,WAAW,SAAQ5D,SAAA,CACtDS,eAACsC,IAAI,CAACwO,cAAc,SAAS3N,WAAW,aAAY5D,SAAA,CAClDR,cAACgS,IAAO,CAACjN,MAAOuV,EAAcd,GAAG,GAAK,eAAiB,OAAOhZ,SAAE2D,MAC/DmW,EAAcxW,GAAG,IAAM+W,EAAQ/W,GAAG,IACjC9D,cAAC8S,GAAO,CACNpP,SAAS,OACTqB,MAAM,aACN9B,SAAU,EACVJ,MAAO6Y,YAAiBb,EAAQjE,MAAM0D,IACtCnH,KAAK,OACLC,OAAO,SAlCRkH,EAAcd,GAAG,GACtBxZ,cAAC2E,IAAM,CACLE,QAAS0W,EACTjC,SAAU,CAAC,UAAW,YAAYqC,MAAK,SAAC9G,GAAI,OAAK4F,EAASmB,SAASC,SAAShH,EAAK,IAAErU,SAElF0C,EAAE,WAGLjC,eAACmZ,GAAiB,CAAA5Z,SAAA,CAChBR,cAAC8b,IAAU,CAACxL,QAAQ,WAAWzL,QAAS4W,EAAmB3W,GAAG,MAAKtE,SACjER,cAAC+b,IAAS,CAAChX,MAAM,UAAU6D,MAAM,WAEnC5I,cAAC8b,IAAU,CACTxL,QAAQ,WACRzL,QAAS0W,EACTjC,SAAU,CAAC,UAAW,YAAYqC,MAAK,SAAC9G,GAAI,OAAK4F,EAASmB,SAASC,SAAShH,EAAK,IAAErU,SAEnFR,cAACgc,IAAO,CAACjX,MAAM,UAAU6D,MAAM,gBAwBzC,E,UC9HaqT,GAAa,SAACC,GACzB,IAAQ3J,EAAYC,cAAZD,QACF7M,EAAqBC,cACrBwW,EAAWC,eAOjB,MAAO,CAAEC,SALa3J,sBAAWhM,YAAAC,cAAAC,MAAC,SAAAC,IAAA,IAAA0N,EAAA,OAAA5N,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACXoV,aAAQ5W,EAAoBwW,EAASC,EAAU5J,GAAQ,OAAhE,OAANgC,EAAMvN,EAAAK,KAAAL,EAAA6L,OAAA,SACL0B,GAAM,wBAAAvN,EAAAU,OAAA,GAAAb,EAAA,KACZ,CAAC0L,EAAS2J,EAASxW,EAAoByW,IAG5C,ECkCeI,GAnCuC,SAAH7c,GAA2B,IAArB8c,EAAQ9c,EAAR8c,SAAU5I,EAAGlU,EAAHkU,IACzDrB,EAAYC,cAAZD,QACArP,EAAMC,cAAND,EACR4C,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CoS,EAASlS,EAAA,GAAEmS,EAAYnS,EAAA,GACtBqW,EAAaJ,GAAWrI,GAAxByI,SACFI,EAAWC,cACX/B,EAAWC,eACX+B,EAAqBpK,EAAU4I,YAAiBqB,GAAYI,KAC5DzY,EAAiBwY,EAAmB1Y,QAAQ,EAAGJ,IAAUK,YACzD2Y,EAAeF,EAAqBA,EAAmBG,aAAaL,GAAUM,WAAa,EAEjG,OACE9b,eAACsC,IAAI,CAACuO,GAAG,MAAMtO,eAAe,gBAAgBY,WAAW,SAAQ5D,SAAA,CAC/DS,eAACsC,IAAI,CAACwO,cAAc,SAAS3N,WAAW,aAAY5D,SAAA,CAClDR,cAACgS,IAAO,CAACjN,MAAO4X,EAAmBnD,GAAG,GAAK,eAAiB,OAAOhZ,SAAE2D,IACpE0Y,EAAe,GACd7c,cAAC8S,GAAO,CAACpP,SAAS,OAAOqB,MAAM,aAAa9B,SAAU,EAAGJ,MAAOga,EAAc1J,KAAK,OAAOC,OAAO,SAGrGpT,cAAC2E,IAAM,CACL2U,SAAUqD,EAAmBnD,GAAG,IAAMtB,EACtCrT,QAAO6B,YAAAC,cAAAC,MAAE,SAAAC,IAAA,OAAAF,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACW,OAAlBiR,GAAa,GAAKnR,EAAAE,KAAA,EACZmV,IAAU,OAChB1B,EAASI,aAAuB,CAAExI,UAASyI,KAAM,CAACpH,MAElDuE,GAAa,GAAM,wBAAAnR,EAAAU,OAAA,GAAAb,EAAA,KACnBrG,SAED0C,EAAE,eAIX,ECpCM8Z,GAAS7d,IAAOC,IAAGC,QAAAC,YAAA,gCAiGV2d,GAnFqC,SAAHvd,GAAyD,IAAnDmU,EAAInU,EAAJmU,KAAMtB,EAAO7S,EAAP6S,QAASzP,EAAepD,EAAfoD,gBAAiB0X,EAAW9a,EAAX8a,YAC7EtX,EAAMC,cAAND,EACR4C,EAAkDC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1DoX,EAAiBlX,EAAA,GAAEmX,EAAoBnX,EAAA,GACtC4N,EAAyCC,EAAzCD,IAAKwJ,EAAoCvJ,EAApCuJ,YAAavM,EAAuBgD,EAAvBhD,MAAOe,EAAgBiC,EAAhBjC,YACjCxQ,EAMIyS,EAAKwJ,UAAY,CAAC,EAACC,EAAAlc,EALrBmc,UAAWC,OAAiB,IAAAF,EAAG,IAAGA,EAAAG,EAAArc,EAClCmZ,aAAcmD,OAAoB,IAAAD,EAAG,IAAGA,EAAAE,EAAAvc,EACxCkZ,cAAesD,OAAqB,IAAAD,EAAG,IAAGA,EAAAE,EAAAzc,EAC1Cob,SAAUsB,OAAgB,IAAAD,EAAG,IAAGA,EAAAE,EAAA3c,EAChCsW,kBAAU,IAAAqG,EAAG,EAACA,EAEVR,EAAY,IAAI1Z,IAAU2Z,GAC1BjD,EAAe,IAAI1W,IAAU6Z,GAAsB9G,MAAM,IAAI/S,IAAU,IAAIqR,IAAI,GAAKrB,EAAKhD,MAAM5N,WAC/FqX,EAAgB,IAAIzW,IAAU+Z,GAAuBhH,MAAM,IAAI/S,IAAU,IAAIqR,IAAI,GAAKrB,EAAKhD,MAAM5N,WACjGuZ,EAAW,IAAI3Y,IAAUia,GACzBE,EAAYC,aAAWrM,EAAcf,EAAMqN,QAAUd,GACrDe,EAAa5L,GAAWgL,GAAaA,EAAUa,cAAc,GAC7DzD,EAAWC,eAEXtI,EAAa+L,YAASL,GAEpBvL,EAAcJ,GAAWC,GAAzBG,UAEF6L,EAAgB5L,sBAAWhM,YAAAC,cAAAC,MAAC,SAAAC,IAAA,OAAAF,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEJ,OAFIF,EAAAC,KAAA,EAE9BkW,GAAqB,GAAKnW,EAAAE,KAAA,EACpBuL,IAAW,OACjBkI,EAASI,aAAuB,CAAExI,UAASyI,KAAM,CAACpH,MAClDuJ,GAAqB,GAAMnW,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE3BO,QAAQC,MAAKR,EAAAM,IAAG,yBAAAN,EAAAU,OAAA,GAAAb,EAAA,kBAEjB,CAAC4L,EAAWkI,EAAUpI,EAASqB,IA2BlC,OACE3S,eAAC+b,GAAM,CAAAxc,SAAA,CACLS,eAACsC,IAAI,CAAA/C,SAAA,CACHR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,YAAYrB,SAAS,OAAO8a,GAAG,MAAKhe,SAAC,QAGhFR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,aAAarB,SAAS,OAAMlD,SACpE0C,EAAE,eAGPlD,cAACuc,GAAa,CAACC,SAAUA,EAAU5I,IAAKA,IACxC3S,eAACsC,IAAI,CAAA/C,SAAA,CACHR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,YAAYrB,SAAS,OAAO8a,GAAG,MAAKhe,SAC5EqT,EAAK4K,WAERze,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,aAAarB,SAAS,OAAMlD,SACpE0C,EAAE,eAGLqP,EA3CCsB,EAAKD,KAAoB,IAAbC,EAAKD,IAOfuK,EACLne,cAACqa,GAAW,CACVC,cAAeA,EACfC,aAAcA,EACdhD,UAAW1D,EAAK4K,SAChB7K,IAAKA,EACL9Q,gBAAiBA,EACjB4U,WAAYA,EACZ8C,YAAaA,IAGfxa,cAAC2E,IAAM,CAAC+Z,GAAG,MAAM9V,MAAM,OAAO0Q,SAAU4D,EAAmBrY,QAASyZ,EAAc9d,SAC/E0C,EAAE,sBAjBHlD,cAAC2E,IAAM,CAAC+Z,GAAG,MAAM9V,MAAM,OAAO0Q,UAAQ,EAAA9Y,SAAC,QAyC7BR,cAAC2e,KAAY,CAACD,GAAG,MAAM9V,MAAM,WAG/C,EC9GagW,GAA2C,SAAHlf,GAO9C,IANLmf,EAAYnf,EAAZmf,aACAC,EAAOpf,EAAPof,QACAC,EAAUrf,EAAVqf,WAAUC,EAAAtf,EACVuf,wBAAgB,IAAAD,EAAG,EAACA,EAAAE,EAAAxf,EACpByf,yBAAiB,IAAAD,EAAG,EAACA,EAAAE,EAAA1f,EACrB2f,sBAAc,IAAAD,EAAG,EAACA,EAGZE,EAAkB,IAAMH,EAE1BI,EAAeT,EAAU,IAEzBO,IAIFE,GADoBT,EADMA,EAAU,IAAOO,GAEd,KAG/B,IAAMG,EAAsBX,EAAe,IAErCY,EAAY,IAAOV,EAEnBW,EAAcD,EAASE,KAAAzK,IAAI,EAAIqK,EAAeD,EAAqBA,EAAkBE,GAI3F,OAAOvG,YAFgByG,EAAcD,GAEJxb,QAAQgb,GAC3C,EAEaW,GAAS,SAAHxe,GAEjB,OAFmCA,EAAZye,aAA4Bze,EAAd0e,eACgB,GAEvD,ECfMC,GAAO5gB,IAAOC,IAAGC,QAAAC,YAAA,uIAOjB0gB,GAAW7gB,IAAOC,IAAGkB,QAAAhB,YAAA,QAErB2gB,GAAiB9gB,IAAOC,IAAGkD,QAAAhD,YAAA,+BAI3B4gB,GAAa/gB,IAAO2N,GAAER,QAAAhN,YAAA,sEAGf,SAAAI,GAAQ,OAAAA,EAALQ,MAAkBC,OAAOggB,UAAU,IAoMpCC,GAhM+C,SAAHhf,GAWpD,IAVLiW,EAASjW,EAATiW,UACA0H,EAAU3d,EAAV2d,WACAsB,EAAGjf,EAAHif,IACAC,EAASlf,EAATkf,UACAC,EAAQnf,EAARmf,SAAQC,EAAApf,EACRqf,0BAAkB,IAAAD,EAAG,MAAKA,EAAAE,EAAAtf,EAC1B6d,wBAAgB,IAAAyB,EAAG,EAACA,EAAAC,EAAAvf,EACpB+d,yBAAiB,IAAAwB,EAAG,EAACA,EAAAC,EAAAxf,EACrBie,sBAAc,IAAAuB,EAAG,EAACA,EAAAC,EAAAzf,EAClB0f,cAAM,IAAAD,GAAQA,EAEN3d,EAAMC,cAAND,EACF6d,EAAiC,IAAOhC,EAExCiC,EAA2BpC,GAAyC,CACxEC,aAAc,EACdC,QAASuB,EACTtB,aACAE,mBACAE,oBACAE,mBAEI4B,EAA2BrC,GAAyC,CACxEC,aAAc,EACdC,QAASuB,EACTtB,aACAE,mBACAE,oBACAE,mBAEI6B,EAA4BtC,GAAyC,CACzEC,aAAc,GACdC,QAASuB,EACTtB,aACAE,mBACAE,oBACAE,mBAEI8B,EAA6BvC,GAAyC,CAC1EC,aAAc,IACdC,QAASuB,EACTtB,aACAE,mBACAE,oBACAE,mBAGF,OACEpe,eAACiY,IAAK,CAACC,MAAOjW,EAAE,OAAQmU,UAAWA,EAAU7W,SAAA,CAC1CsgB,GACC7f,eAACsC,IAAI,CAACuO,GAAG,OAAOtO,eAAe,gBAAehD,SAAA,CAC5CR,cAACqC,IAAI,CAAC+e,OAAK,EAACrc,MAAM,aAAYvE,SAC3B0C,EAAE,4BAELjC,eAACoB,IAAI,CAAC+e,OAAK,EAAA5gB,SAAA,CAAE6f,EAAIpc,QAAQgb,GAAkB,UAG/Che,eAAC8e,GAAI,CAAAvf,SAAA,CACHR,cAACigB,GAAc,CAAAzf,SACbR,cAACqC,IAAI,CAACqB,SAAS,OAAOuB,MAAI,EAACF,MAAM,aAAawZ,cAAc,YAAYzM,GAAG,OAAMtR,SAC9E0C,EAAE,iBAGPlD,cAACigB,GAAc,CAAAzf,SACbR,cAACqC,IAAI,CACHgf,UAAU,QACV3d,SAAS,OACTuB,MAAI,EACJF,MAAM,aACNwZ,cAAc,YACdzZ,GAAG,OACHwc,GAAG,OACHxP,GAAG,OAAMtR,SAER0C,EAAE,WAGPlD,cAACigB,GAAc,CAAAzf,SACbR,cAACqC,IAAI,CAACgf,UAAU,QAAQ3d,SAAS,OAAOuB,MAAI,EAACF,MAAM,aAAawZ,cAAc,YAAYzM,GAAG,OAAMtR,SAChG0C,EAAE,sBAAuB,CAAER,OAAQ+d,QAIxCzgB,cAACggB,GAAQ,CAAAxf,SACPR,cAACqC,IAAI,CAAA7B,SAAE0C,EAAE,SAAU,CAAEqe,IAAK,QAE5BvhB,cAACggB,GAAQ,CAAAxf,SACPS,eAACoB,IAAI,CAACgf,UAAU,QAAQvc,GAAG,OAAOwc,GAAG,OAAM9gB,SAAA,CACxCof,GAAO,CAAEC,aAAcmB,EAA0BlB,eAAgBiB,IAAkC9c,QAClGgb,GACA,SAINjf,cAACggB,GAAQ,CAAAxf,SACPR,cAACqC,IAAI,CAACgf,UAAU,QAAO7gB,SAAEwgB,MAG3BhhB,cAACggB,GAAQ,CAAAxf,SACPR,cAACqC,IAAI,CAAA7B,SAAE0C,EAAE,SAAU,CAAEqe,IAAK,QAE5BvhB,cAACggB,GAAQ,CAAAxf,SACPS,eAACoB,IAAI,CAACgf,UAAU,QAAQvc,GAAG,OAAOwc,GAAG,OAAM9gB,SAAA,CACxCof,GAAO,CAAEC,aAAcoB,EAA0BnB,eAAgBiB,IAAkC9c,QAClGgb,GACA,SAINjf,cAACggB,GAAQ,CAAAxf,SACPR,cAACqC,IAAI,CAACgf,UAAU,QAAO7gB,SAAEygB,MAG3BjhB,cAACggB,GAAQ,CAAAxf,SACPR,cAACqC,IAAI,CAAA7B,SAAE0C,EAAE,SAAU,CAAEqe,IAAK,SAE5BvhB,cAACggB,GAAQ,CAAAxf,SACPS,eAACoB,IAAI,CAACgf,UAAU,QAAQvc,GAAG,OAAOwc,GAAG,OAAM9gB,SAAA,CACxCof,GAAO,CACNC,aAAcqB,EACdpB,eAAgBiB,IACf9c,QAAQgb,GAAkB,SAIjCjf,cAACggB,GAAQ,CAAAxf,SACPR,cAACqC,IAAI,CAACgf,UAAU,QAAO7gB,SAAE0gB,MAG3BlhB,cAACggB,GAAQ,CAAC3c,MAAO,CAAEme,SAAU,SAAUhhB,SACrCR,cAACqC,IAAI,CAAA7B,SAAE0C,EAAE,kBAEXlD,cAACggB,GAAQ,CAAAxf,SACPS,eAACoB,IAAI,CAACgf,UAAU,QAAQvc,GAAG,OAAOwc,GAAG,OAAM9gB,SAAA,CACxCof,GAAO,CACNC,aAAcsB,EACdrB,eAAgBiB,IACf9c,QAAQgb,GAAkB,SAIjCjf,cAACggB,GAAQ,CAAAxf,SACPR,cAACqC,IAAI,CAACgf,UAAU,QAAO7gB,SAAE2gB,SAG7BnhB,cAACuD,IAAI,CAACC,eAAe,SAAQhD,SAC3BR,cAACyhB,IAAG,CAAC3P,GAAG,OAAO0P,SAAS,QAAQE,EAAE,MAAKlhB,SACrCS,eAACif,GAAU,CAAA1f,SAAA,CACTR,cAAA,MAAAQ,SACER,cAACqC,IAAI,CAACif,GAAG,OAAO5d,SAAS,OAAO2d,UAAU,SAAStc,MAAM,aAAa4c,QAAQ,SAAQnhB,SACnF0C,EAAE,0CAGPlD,cAAA,MAAAQ,SACER,cAACqC,IAAI,CAACif,GAAG,OAAO5d,SAAS,OAAO2d,UAAU,SAAStc,MAAM,aAAa4c,QAAQ,SAAQnhB,SACnF0C,EAAE,6BAA8B,CAAE0e,KAAMzC,EAAkBnb,uBAG9D8c,GACC9gB,cAAA,MAAAQ,SACER,cAACqC,IAAI,CAACif,GAAG,OAAO5d,SAAS,OAAO2d,UAAU,SAAStc,MAAM,aAAa4c,QAAQ,SAAQnhB,SACnF0C,EAAE,0FAITlD,cAAA,MAAAQ,SACER,cAACqC,IAAI,CAACif,GAAG,OAAO5d,SAAS,OAAO2d,UAAU,SAAStc,MAAM,aAAa4c,QAAQ,SAAQnhB,SACnF0C,EACC,mHAILmc,EAAiB,GAChBrf,cAAA,MAAAQ,SACER,cAACqC,IAAI,CAACqc,GAAG,OAAO4C,GAAG,OAAO5d,SAAS,OAAO2d,UAAU,SAAStc,MAAM,aAAa4c,QAAQ,SAAQnhB,SAC7F0C,EAAE,gFAA4E,CAC7E2e,IAAKxC,eAQnBrf,cAACuD,IAAI,CAACC,eAAe,SAAQhD,SAC3BR,cAAC6P,IAAY,CAAC3K,KAAMqb,EAAS/f,SAAE8f,QAIvC,EChMewB,GAxB6B,SAAHpiB,GAAqD,IAA/CyQ,EAAOzQ,EAAPyQ,QAASsM,EAAQ/c,EAAR+c,SAAU4D,EAAG3gB,EAAH2gB,IAAKvd,EAAepD,EAAfoD,gBAC7DI,EAAMC,cAAND,EACRmY,EAA4BC,YAC1Btb,cAACogB,GAAkB,CACjBE,UAAWpd,EAAE,eAAgB,CAAER,OAAQyN,IACvC4O,WAAYtC,EAASM,WACrBsD,IAAKA,EACLE,SAAUzd,EACVge,QAAM,KANHiB,EAQN9b,YAAAoV,EAAA,GARuB,GAexB,OACErb,cAAC8b,IAAU,CAACjX,QANY,SAACmd,GACzBA,EAAMC,kBACNF,GACF,EAG0CzR,QAAQ,OAAO1L,MAAM,KAAK0c,GAAG,MAAK9gB,SACxER,cAACkiB,IAAa,CAACtZ,MAAM,UAG3B,EChCMuZ,GAAoBhjB,IAAOC,IAAGC,QAAAC,YAAA,wEAM9B8iB,GAAuBjjB,IAAOC,IAAGkB,QAAAhB,YAAA,4CAmBxB+iB,GAfI,SAAH3iB,GAA0C,IAApC+X,EAAU/X,EAAV+X,WAAY+C,EAAW9a,EAAX8a,YAChC,IAAK/C,EAAY,MAAO,MACxB,IAAM5U,EAAK,GAAAyB,OAAMmT,EAAU,KAE3B,OADsB+C,EAAc/C,EAAa,EAAIwB,WAAWxB,MAC1CwB,WAAWxB,GAE7BxW,eAACkhB,GAAiB,CAAA3hB,SAAA,CAChBR,cAACoiB,GAAoB,CAAA5hB,SAAEqC,IAA6B,IAAE4U,EAAa,EAAE,OAKpE5U,CACT,ECJMyf,GAAiBC,YAASljB,QAAAC,YAAA,8JAY1BkjB,GAAmBrjB,IAAOC,IAAGkB,QAAAhB,YAAA,+NACnB,SAAAI,GAAA,IAAGQ,EAAKR,EAALQ,MAAK,iCAAAoE,OAAkCpE,EAAMC,OAAOsiB,cAAa,MAAAne,OAAKpE,EAAMC,OAAOuiB,UAAS,OAEhGJ,IAUTK,GAAQxjB,IAAOC,IAAGkD,QAAAhD,YAAA,gRAER,SAACC,GAAK,OAAKA,EAAMW,MAAM0iB,KAAKC,UAAU,IAWhDC,GAAU3jB,IAAOC,IAAGkN,QAAAhN,YAAA,0FACJ,SAAA8B,GAAQ,OAAAA,EAALlB,MAAkBC,OAAO4iB,UAAU,IAMtDC,GAAmB7jB,IAAOC,IAAG2N,QAAAzN,YAAA,+CACvB,SAACC,GAAK,OAAMA,EAAMuP,SAAW,OAAS,KAAK,IA+FxCmU,GAlF2B,SAAHthB,GAA2D,IAArDkS,EAAIlS,EAAJkS,KAAM5D,EAAOtO,EAAPsO,QAASwM,EAAQ9a,EAAR8a,SAAUlK,EAAO5Q,EAAP4Q,QAASiI,EAAW7Y,EAAX6Y,YACrEtX,EAAMC,cAAND,EAER4C,EAA0DC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAlEod,EAAqBld,EAAA,GAAEmd,EAAwBnd,EAAA,GAEhDkK,EACJ2D,EAAKuP,WAAavP,EAAKuP,UAAUtf,GAAG,GAAE,IAAAQ,OAC9BuP,EAAKuP,UAAUrG,WAAW/Y,oBAAeyQ,EAAW,CAAE4O,sBAAuB,KACjF,GAEAlT,EAAU0D,EAAK4K,SACf6E,EAAYzP,EAAK0P,KAAO1P,EAAK0P,KAAKD,UAAYpgB,EAAE,OAEhDsgB,EAAU3P,EAAKwM,KAAOxM,EAAKwM,IAAIrc,eAAe,QAAS,CAAEqf,sBAAuB,IAEhFI,EAAwBtU,GAAyB,CACrDC,kBAAmByE,EAAKhC,WAAWqM,QACnC7O,aAAcwE,EAAKhD,MAAMqN,UAErBA,EAAUrK,EAAKjC,YAAcqM,aAAWpK,EAAKhD,MAAMqN,SAAWD,aAAWpK,EAAKuJ,aAC9Eta,EAAkB+Q,EAAKjC,YAAW,GAAAtN,OACjCof,IAAa,oBAAApf,OAAmB4Z,GAAO,GAAA5Z,OACvCqf,IAAsB,KAAArf,OAAImf,GAC3BG,EAAuC,QAAtB/P,EAAKhD,MAAMnO,OAC5BiP,EAAiD,IAAhCsH,WAAWpF,EAAK4D,YAC/BA,EAAe5D,EAAf4D,WAER,OACExW,eAAC0hB,GAAK,CAACiB,eAAgBA,EAAepjB,SAAA,CACnCojB,GAAkB5jB,cAACwiB,GAAgB,IACpCxiB,cAACyR,GAAW,CACVtB,QAASA,EACTuB,WAAYmC,EAAKnC,WACjBC,eAAgBA,EAChBd,MAAOgD,EAAKhD,MACZgB,WAAYgC,EAAKhC,WACjBD,YAAaiC,EAAKjC,eAElB3B,GACAhP,eAACsC,IAAI,CAACC,eAAe,gBAAgBY,WAAW,SAAQ5D,SAAA,CACtDS,eAACoB,IAAI,CAAA7B,SAAA,CAAE0C,EAAE,OAAO,OAChBlD,cAACqC,IAAI,CAAC4C,MAAI,EAAC5B,MAAO,CAAEse,QAAS,OAAQvd,WAAY,UAAW5D,SACzDqT,EAAKwM,IACJpf,eAAAC,WAAA,CAAAV,SAAA,CACER,cAAC8hB,GAAS,CAAC3R,QAASA,EAASrN,gBAAiBA,EAAiB2Z,SAAUA,EAAU4D,IAAKxM,EAAKwM,MAC5FmD,EAAQ,OAGXxjB,cAAC2I,IAAQ,CAACE,OAAQ,GAAID,MAAO,UAKrC3H,eAACsC,IAAI,CAACC,eAAe,gBAAehD,SAAA,CAClCS,eAACoB,IAAI,CAAA7B,SAAA,CAAE0C,EAAE,QAAQ,OACjBlD,cAACqC,IAAI,CAAC4C,MAAI,EAAAzE,SAAE8iB,OAEdriB,eAACsC,IAAI,CAACC,eAAe,gBAAehD,SAAA,CAClCS,eAACoB,IAAI,CAAA7B,SAAA,CAAE0C,EAAE,eAAe,OACxBlD,cAACqC,IAAI,CAAC4C,MAAI,EAAAzE,SACRR,cAACqiB,GAAU,CAAC5K,WAAYA,EAAY+C,YAAaA,SAGrDxa,cAAC6jB,GAAoB,CAAChQ,KAAMA,EAAMtB,QAASA,EAASiI,YAAaA,EAAa1X,gBAAiBA,IAC/F9C,cAAC8iB,GAAO,IACR9iB,cAAC6O,GAAuB,CACtBhK,QAAS,kBAAMse,GAA0BD,EAAsB,EAC/DpU,SAAUoU,IAEZljB,cAACgjB,GAAgB,CAAClU,SAAUoU,EAAsB1iB,SAChDR,cAAC8P,GAAc,CACbG,QAASA,EACTF,eAAgB+T,aAAkB5F,GAClChO,oBAAqBA,EACrBC,QAASA,EACTrN,gBAAiBA,QAK3B,ECtIeihB,GAfW,SAACC,EAAoBC,GAC7C,IAAAne,EAAwCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAAhDoe,EAAYle,EAAA,GAAEme,EAAene,EAAA,GAWpC,OATAQ,qBAAU,WACR,IAAI4d,EAMJ,OALIJ,IAAcE,EAChBC,GAAgB,IACNH,GAAaE,IACvBE,EAAYC,YAAW,kBAAMF,GAAgB,EAAM,GAAEF,IAEhD,kBAAMK,aAAaF,EAAU,CACtC,GAAG,CAACJ,EAAWC,EAAWC,IACnBA,CACT,ECHMlZ,GAAY7L,IAAOC,IAAGC,QAAAC,YAAA,0LAGjB,SAAAI,GAAQ,OAAAA,EAALQ,MAAkBC,OAAOyB,IAAI,IAQ3B,SAAAR,GAAQ,OAAAA,EAALlB,MAAkBC,OAAOggB,UAAU,IAMhDoE,GAAaplB,IAAOC,IAAGkB,QAAAhB,YAAA,mDAuCdklB,GAlCiB,SAAH7iB,GAQtB,IAPLkB,EAAKlB,EAALkB,MACAsN,EAAOxO,EAAPwO,QACAd,EAAY1N,EAAZ0N,aACAD,EAAiBzN,EAAjByN,kBACAqN,EAAQ9a,EAAR8a,SACAgI,EAAa9iB,EAAb8iB,cAAaC,EAAA/iB,EACbgjB,kBAAU,IAAAD,GAAQA,EAEZjB,EAAwBtU,GAAyB,CAAEC,oBAAmBC,iBACtEvM,EAAe,GAAAwB,OAAMqf,IAAsB,KAAArf,OAAImf,GAErD,OAAyB,IAAlBgB,EACLzkB,cAACgL,GAAS,CAAAxK,SACPikB,EACCxjB,eAAAC,WAAA,CAAAV,SAAA,CACES,eAACsjB,GAAU,CAAA/jB,SAAA,CAAEqC,EAAM,QACjB8hB,GACA3kB,cAAC8hB,GAAS,CAAC3R,QAASA,EAASsM,SAAUA,EAAU4D,IAAKoE,EAAe3hB,gBAAiBA,OAI1F9C,cAACukB,GAAU,CAAA/jB,SACTR,cAAC2I,IAAQ,CAACC,MAAO,SAKvB5I,cAACgL,GAAS,CAAAxK,SACRS,eAACsjB,GAAU,CAAA/jB,SAAA,CAAEikB,EAAc,QAGjC,ECvDMG,GAAQ,WAAH,OACT3jB,eAAA,OACE4jB,UAAU,eACVjc,MAAM,KACNC,OAAO,KACPic,QAAQ,YACRC,KAAK,OACLC,MAAM,6BAA4BxkB,SAAA,CAElCR,cAAA,QAAMilB,EAAE,2BAA2BF,KAAK,UACxC/kB,cAAA,QAAMilB,EAAE,YAAYC,OAAO,YACvB,EAGFla,GAAY7L,IAAOC,IAAGC,QAAAC,YAAA,oHAKxB,SAAAI,GAAQ,OAAAA,EAALQ,MAAkB8B,aAAaG,EAAE,IAKlCgjB,GAAgBhmB,IAAOC,IAAGkB,QAAAhB,YAAA,wSAoB1B8lB,GAAejmB,IAAOC,IAAGkD,QAAAhD,YAAA,qHACpB,SAAA8B,GAAS,OAAAA,EAANikB,OAAuB,OAAS,MAAM,IAIhD,SAAA1jB,GAAQ,OAAAA,EAALzB,MAAkB8B,aAAaG,EAAE,IAC3B,SAAAJ,GAAS,OAAAA,EAANsjB,OAAuB,OAAS,MAAM,IAgEvCC,GA3DkC,SAAHpjB,GAQvC,IAPL0P,EAAW1P,EAAX0P,YACAf,EAAK3O,EAAL2O,MACAgB,EAAU3P,EAAV2P,WACArM,EAAKtD,EAALsD,MACAoO,EAAG1R,EAAH0R,IACA6D,EAAUvV,EAAVuV,WACA+C,EAAWtY,EAAXsY,YAEQF,EAAkBiL,YAAY3R,GAA9B0G,cACApX,EAAMC,cAAND,EACFsiB,EAAmB9J,YAAiBpB,GAcpCmL,EAAU,GAEhB,OACExkB,eAAC+J,GAAS,CAAAxK,SAAA,CACRS,eAACkkB,GAAa,CAAA3kB,SAAA,CACZR,cAAColB,GAAY,CAACC,QAASzT,EAAYpR,SAChCoR,EACC5R,cAACmS,KAAkB,CAAC7B,QAAQ,WAAW8B,IAAKxB,GAAqBC,GAAQjI,MAAO6c,EAAS5c,OAAQ4c,IAEjGzlB,cAAC+Q,GAAc,CACbT,QAAQ,WACRU,aAAcH,EACdI,eAAgBY,EAChBjJ,MAAO6c,EACP5c,OAAQ4c,MAIdzlB,cAAC4kB,GAAK,IACN5kB,cAAColB,GAAY,CAAA5kB,SACXR,cAACmS,KAAkB,CAAC7B,QAAQ,WAAW8B,IAAI,yBAAyBxJ,MAAO6c,EAAS5c,OAAQ4c,SAGhGxkB,eAAA,OAAAT,SAAA,CAlCEglB,EAEAxlB,cAACqC,IAAI,CAAC0C,MAAM,YAAYrB,SAAS,OAAOuB,MAAI,EAACsZ,cAAc,YAAW/d,SACnE0C,EAAE,aAKF,KA4BHlD,cAACqC,IAAI,CAAC4C,MAAI,EAAAzE,SAAEgF,IACZvE,eAACoB,IAAI,CAACqB,SAAS,OAAMlD,SAAA,CAAC,gBACPR,cAACqiB,GAAU,CAAC5K,WAAYA,EAAY+C,YAAaA,YAKxE,ECtHMkL,GAASvmB,IAAO2I,KAAIzI,QAAAC,YAAA,mEACf,SAAAI,GAAA,IAAGimB,EAAMjmB,EAANimB,OAAQzlB,EAAKR,EAALQ,MAAK,OAAQylB,EAASzlB,EAAMC,OAAOyB,KAAO1B,EAAMC,OAAOylB,YAAY,IAgB1EC,GAXiD,SAAHzkB,GAAqC,IAA/Bob,EAAQpb,EAARob,SACjE,OADwFpb,EAAb0kB,cAElE9lB,cAAC0lB,GAAM,CAACC,OAAQnJ,EAAShc,SAAEgc,EAASxY,mBAG3ChE,cAAC0lB,GAAM,CAACC,OAAQ,EAAEnlB,SAChBR,cAAC2I,IAAQ,CAACC,MAAO,MAGvB,ECtBMoC,GAAY7L,IAAOC,IAAGC,QAAAC,YAAA,yJAKjB,SAAAI,GAAQ,OAAAA,EAALQ,MAAkBC,OAAOyO,OAAO,IAE1C,SAAAxN,GAAQ,OAAAA,EAALlB,MAAkB8B,aAAaG,EAAE,IAKlC4jB,GAAY5mB,YAAO8P,IAAP9P,CAAuBmB,QAAAhB,YAAA,8CAC1B,SAAAqC,GAAU,OAAAA,EAAPyJ,QAAyB,iBAAmB,WAAW,IAY1D4a,GARyB,SAAHjkB,GAAgC,IAA1BkkB,EAAkBlkB,EAAlBkkB,mBACzC,OACEjmB,cAACgL,GAAS,CAAAxK,SACRR,cAAC+lB,GAAS,CAAChhB,MAAM,UAAUqG,QAAS6a,KAG1C,EC1BMC,GAAmB/mB,IAAOC,IAAGC,QAAAC,YAAA,oCAQ7B6mB,GAAoBhnB,IAAOC,IAAGkB,QAAAhB,YAAA,mJACzB,SAAAI,GAAQ,OAAAA,EAALQ,MAAkBC,OAAOyB,IAAI,IAKvC,SAAAR,GAAQ,OAAAA,EAALlB,MAAkB8B,aAAaokB,EAAE,IAMlCpb,GAAY7L,IAAOC,IAAGkD,QAAAhD,YAAA,oDAgCb+mB,GA3B8C,SAAH1kB,GAAwB,IAAlB+P,EAAU/P,EAAV+P,WACxD4U,EAAoB5U,EAAaA,EAAWZ,cAAgB9Q,cAAC2I,IAAQ,CAACC,MAAO,KAC3E1F,EAAMC,cAAND,EACFqjB,EACJtlB,eAAA,OAAAT,SAAA,CACG0C,EAAE,uEACHlD,cAAA,SACAA,cAAA,SACCkD,EAAE,2GAGPsjB,EAA+CC,YAAWF,EAAgB,CACxEG,UAAW,UACXC,cAAe,CAAC,GAAI,MAFdC,EAASJ,EAATI,UAAWna,EAAO+Z,EAAP/Z,QAASoa,EAAcL,EAAdK,eAK5B,OACE5lB,eAAC+J,GAAS,CAAAxK,SAAA,CACRR,cAACmmB,GAAiB,CAAA3lB,SAAE8lB,IACpBtmB,cAACkmB,GAAgB,CAAC5X,IAAKsY,EAAUpmB,SAC/BR,cAAC8mB,IAAQ,CAAC/hB,MAAM,iBAEjB8hB,GAAkBpa,IAGzB,ECjDMyZ,GAAmB/mB,IAAOC,IAAGC,QAAAC,YAAA,oCAQ7BynB,GAAmB5nB,IAAOC,IAAGkB,QAAAhB,YAAA,8JAM/B,SAAAI,GAAQ,OAAAA,EAALQ,MAAkB8B,aAAaokB,EAAE,IAMlCpb,GAAY7L,IAAOC,IAAGkD,QAAAhD,YAAA,oDA+Bb0nB,GA1B4C,SAAH5lB,GAAuB,IAAjBgiB,EAAShiB,EAATgiB,UACtD6D,EACJ7D,GAAaA,EAAUtf,GAAG,GAAE,IAAAQ,OACtB4iB,OAAO9D,GAAWpf,oBAAeyQ,EAAW,CAAE4O,sBAAuB,KAEzErjB,cAAC2I,IAAQ,CAACC,MAAO,KAEb1F,EAAMC,cAAND,EACRsjB,EAA+CC,YAC7CvjB,EAAE,+DACF,CAAEwjB,UAAW,UAAWC,cAAe,CAAC,GAAI,MAFtCC,EAASJ,EAATI,UAAWna,EAAO+Z,EAAP/Z,QAASoa,EAAcL,EAAdK,eAK5B,OACE5lB,eAAC+J,GAAS,CAAAxK,SAAA,CACRR,cAAC+mB,GAAgB,CAAAvmB,SACfR,cAACqC,IAAI,CAAA7B,SAAEymB,MAETjnB,cAACkmB,GAAgB,CAAC5X,IAAKsY,EAAUpmB,SAC/BR,cAAC8mB,IAAQ,CAAC/hB,MAAM,iBAEjB8hB,GAAkBpa,IAGzB,ECrDa0a,GAAkBhoB,IAAOC,IAAGC,QAAAC,YAAA,2UAOrC,SAAAI,GAAQ,OAAAA,EAALQ,MAAkB8B,aAAaG,EAAE,IAOpC,SAAAf,GAAQ,OAAAA,EAALlB,MAAkB8B,aAAaolB,EAAE,IAQ3BC,GAAeloB,IAAOC,IAAGkB,QAAAhB,YAAA,4BAIzBgoB,GAAgBnoB,IAAOC,IAAGkD,QAAAhD,YAAA,uFAK1BumB,GAAS1mB,IAAOC,IAAGkN,QAAAhN,YAAA,kEAGrB,SAAAqC,GAAQ,OAAAA,EAALzB,MAAkBC,OAAOyB,IAAI,ICuC5B2a,GAvDoD,SAAH7c,GAA0C,IAApCkU,EAAGlU,EAAHkU,IAAKyJ,EAAQ3d,EAAR2d,SAAUyI,EAAapmB,EAAbomB,cAC7EyB,EAAoB,IAAI1jB,IAAUwZ,EAASb,UAC3CC,EAAWC,cACbF,EAAWI,KACXC,EAAe,EACf1Y,EAAiB2hB,EAAgBtJ,EAASxY,iBAAmBhE,cAAC2I,IAAQ,CAACC,MAAO,KAG7E2e,EAAkBC,WAErB3K,GADAL,EAAWrB,YAAiBoM,IACJzK,aAAaL,GAAUM,WAC/C5Y,EAAiBqY,EAASvY,QAAQ,EAAGJ,IAAUK,aAGjD,IAAA4B,EAAkCC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1CoS,EAASlS,EAAA,GAAEmS,EAAYnS,EAAA,GACtBqW,EAAaJ,GAAWrI,GAAxByI,SACAnZ,EAAMC,cAAND,EACFyX,EAAWC,eACTrI,EAAYC,cAAZD,QAER,OACEtR,eAACkmB,GAAe,CAAA3mB,SAAA,CACdS,eAAComB,GAAY,CAAA7mB,SAAA,CACXR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,YAAYrB,SAAS,OAAO8a,GAAG,MAAKhe,SAAC,QAGhFR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,aAAarB,SAAS,OAAMlD,SACpE0C,EAAE,eAGPjC,eAACqmB,GAAa,CAAA9mB,SAAA,CACZS,eAAA,OAAAT,SAAA,CACER,cAAC6lB,GAAM,CAAArlB,SAAE2D,IACR0Y,EAAe,GACd7c,cAAC8S,GAAO,CAACpP,SAAS,OAAOqB,MAAM,aAAa9B,SAAU,EAAGJ,MAAOga,EAAc1J,KAAK,OAAOC,OAAO,SAGrGpT,cAAC2E,IAAM,CACL2U,SAAUkD,EAAShD,GAAG,IAAMtB,IAAc4N,EAC1CjhB,QAAO6B,YAAAC,cAAAC,MAAE,SAAAC,IAAA,OAAAF,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACW,OAAlBiR,GAAa,GAAKnR,EAAAE,KAAA,EACZmV,IAAU,OAChB1B,EAASI,aAAuB,CAAExI,UAASyI,KAAM,CAACpH,MAElDuE,GAAa,GAAM,wBAAAnR,EAAAU,OAAA,GAAAb,EAAA,KAErBya,GAAG,MAAK9gB,SAEP0C,EAAE,kBAKb,EChDMkX,GAAoBjb,IAAOC,IAAGC,QAAAC,YAAA,4BAqNrBmoB,GA5M6C,SAAH/nB,GAYlD,IAXLkS,EAAWlS,EAAXkS,YACAgC,EAAGlU,EAAHkU,IACA6K,EAAQ/e,EAAR+e,SACArB,EAAW1d,EAAX0d,YACAvL,EAAUnS,EAAVmS,WACAhB,EAAKnR,EAALmR,MACAiV,EAAapmB,EAAbomB,cACA9O,EAAuBtX,EAAvBsX,wBACAS,EAAU/X,EAAV+X,WACA4F,EAAQ3d,EAAR2d,SACA7C,EAAW9a,EAAX8a,YAEQtX,EAAMC,cAAND,EACAqP,EAAYC,cAAZD,QACRzM,EAAkDC,oBAAS,GAAMC,EAAAC,YAAAH,EAAA,GAA1DoX,EAAiBlX,EAAA,GAAEmX,EAAoBnX,EAAA,GAC9C0hB,EAAgGnC,YAAY3R,GAApG2J,EAASmK,EAATnK,UAAyBG,EAAoBgK,EAAlCnN,aAAmDqD,EAAqB8J,EAApCpN,cACjDrX,EAAW2O,EAAcf,EAAM5N,SAAW,GAC1CsX,EAAe,IAAI1W,YAAU6Z,GAAsB9G,MAAM,IAAI/S,YAAU,IAAIqR,IAAI,GAAKjS,IACpFqX,EAAgB,IAAIzW,YAAU+Z,GAAuBhH,MAAM,IAAI/S,YAAU,IAAIqR,IAAI,GAAKjS,IACpFoS,EAAY1B,GAASC,GAArByB,QACAI,EAAcH,GAAW1B,GAAzB6B,UACFgF,EAAWC,cACXG,EAAUC,YAAgB2D,GAE1BN,EAAa5L,GAAWgL,GAAaA,EAAUa,cAAc,GAE7DJ,EAAYC,aAAWrM,EAAcf,EAAMqN,QAAUd,GACrDqG,EAAwBtU,GAAyB,CACrDC,kBAAmByC,EAAWqM,QAC9B7O,aAAcwB,EAAMqN,UAEhBpb,EAAe,GAAAwB,OAAMqf,IAAsB,KAAArf,OAAImf,GAE/CvP,EAAW,eAAA9S,EAAAsF,YAAAC,cAAAC,MAAG,SAAAC,EAAOsN,EAAgBwT,GAAkB,OAAAhhB,cAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACrDmO,EAAQlB,EAAqB,GAAbwT,EAAkB,GAAK,IAAG,OAChDhN,GAASI,aAAuB,CAAExI,UAASyI,KAAM,CAACpH,MAAQ,wBAAA5M,EAAAU,OAAA,GAAAb,EAAA,KAC3D,gBAHgBuO,EAAA6F,GAAA,OAAA7Z,EAAAuG,MAAA,KAAAC,UAAA,KAKX2N,EAAa,eAAA5T,EAAA+E,YAAAC,cAAAC,MAAG,SAAA6S,EAAOtF,GAAc,OAAAxN,cAAAI,MAAA,SAAA2S,GAAA,cAAAA,EAAAzS,KAAAyS,EAAAxS,MAAA,cAAAwS,EAAAxS,KAAA,EACnCuO,EAAUtB,GAAO,OACvBwG,GAASI,aAAuB,CAAExI,UAASyI,KAAM,CAACpH,MAAQ,wBAAA8F,EAAAhS,OAAA,GAAA+R,EAAA,KAC3D,gBAHkBmO,GAAA,OAAAjmB,EAAAgG,MAAA,KAAAC,UAAA,KAKbzD,EAAiBuO,uBAAY,WACjC,IAAMwI,EAAyBC,YAAiBb,GAChD,OAAIY,EAAuBpX,GAAG,IAAMoX,EAAuBnX,GAAG,MACrDsU,YAAsBiC,GAAetW,iBAEvCkX,EAAuBjX,QAAQ,EAAGJ,YAAUK,WACrD,GAAG,CAACoW,IAEEc,EAAcZ,GAAevB,WAAWxB,GAAc,GAAGZ,WAAaY,EAE5E4D,EAA2BC,YACzBtb,cAACmX,GAAY,CACXvD,IAAKA,EACLrB,QAASA,EACT9P,IAAK8X,EACLnD,UAAWlD,EACXqD,UAAWkH,EACX3b,gBAAiBA,EACjBkU,wBAAyBA,EACzBS,WAAY2D,EACZ1D,WAAY2F,EAAS3F,cAVlB6D,EAYNtV,YAAAoV,EAAA,GAZsB,GAavBG,EAA4BF,YAC1Btb,cAACga,GAAa,CACZvX,IAAK6X,EACLlD,UAAW7B,EACXgC,UAAWkH,EACX/G,WAAY2F,EAAS3F,cALlB+D,GAONxV,YAAAuV,EAAA,GAPuB,GAQlBlJ,GAAa+L,YAASL,GACtBrD,GAAWC,eACTnI,GAAcJ,GAAWC,IAAzBG,UAEF6L,GAAgB5L,sBAAWhM,YAAAC,cAAAC,MAAC,SAAAihB,IAAA,OAAAlhB,cAAAI,MAAA,SAAA+gB,GAAA,cAAAA,EAAA7gB,KAAA6gB,EAAA5gB,MAAA,OAEJ,OAFI4gB,EAAA7gB,KAAA,EAE9BkW,GAAqB,GAAK2K,EAAA5gB,KAAA,EACpBuL,KAAW,OACjBkI,GAASI,aAAuB,CAAExI,UAASyI,KAAM,CAACpH,MAElDuJ,GAAqB,GAAM2K,EAAA5gB,KAAA,gBAAA4gB,EAAA7gB,KAAA,EAAA6gB,EAAAxgB,GAAAwgB,EAAA,SAE3BvgB,QAAQC,MAAKsgB,EAAAxgB,IAAG,yBAAAwgB,EAAApgB,OAAA,GAAAmgB,EAAA,kBAEjB,CAACpV,GAAWkI,GAAUpI,EAASqB,IAElC,OAAKrB,EAeD4L,EACE7D,EAAcxW,GAAG,GAEjB7C,eAACkmB,GAAe,CAAA3mB,SAAA,CACdS,eAAComB,GAAY,CAAA7mB,SAAA,CACXR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,YAAYrB,SAAS,OAAO8a,GAAG,MAAKhe,SAC5Eie,IAEHze,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,aAAarB,SAAS,OAAMlD,SACpE0C,EAAE,eAGPjC,eAACqmB,GAAa,CAAA9mB,SAAA,CACZS,eAAA,OAAAT,SAAA,CACER,cAAC6lB,GAAM,CAAArlB,SAAE2D,MACRmW,EAAcxW,GAAG,IAAM+W,EAAQ/W,GAAG,IACjC9D,cAAC8S,GAAO,CACNpP,SAAS,OACTqB,MAAM,aACN9B,SAAU,EACVJ,MAAO6Y,YAAiBb,EAAQjE,MAAM0D,IACtCnH,KAAK,OACLC,OAAO,SAIbnS,eAACmZ,GAAiB,CAAA5Z,SAAA,CAChBR,cAAC8b,IAAU,CAACxL,QAAQ,YAAYzL,QAAS4W,GAAmB3W,GAAG,MAAKtE,SAClER,cAAC+b,IAAS,CAAChX,MAAM,UAAU6D,MAAM,WAEnC5I,cAAC8b,IAAU,CACTxL,QAAQ,YACRzL,QAAS0W,EACTjC,SAAU,CAAC,UAAW,YAAYqC,MAAK,SAAC9G,GAAI,OAAK4F,EAASmB,SAASC,SAAShH,EAAK,IAAErU,SAEnFR,cAACgc,IAAO,CAACjX,MAAM,UAAU6D,MAAM,oBASzC3H,eAACkmB,GAAe,CAAA3mB,SAAA,CACdS,eAAComB,GAAY,CAAA7mB,SAAA,CACXR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,aAAarB,SAAS,OAAO8a,GAAG,MAAKhe,SAC7E0C,EAAE,SAAS6kB,gBAEd/nB,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,YAAYrB,SAAS,OAAMlD,SACnEie,OAGLze,cAACsnB,GAAa,CAAA9mB,SACZR,cAAC2E,IAAM,CACLiE,MAAM,OACN/D,QAAS0W,EACTjL,QAAQ,YACRgJ,SAAU,CAAC,UAAW,YAAYqC,MAAK,SAAC9G,GAAI,OAAK4F,EAASmB,SAASC,SAAShH,EAAK,IAAErU,SAElF0C,EAAE,gBAOR4iB,EAgBH7kB,eAACkmB,GAAe,CAAA3mB,SAAA,CACdR,cAACqnB,GAAY,CAAA7mB,SACXR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,aAAarB,SAAS,OAAMlD,SACpE0C,EAAE,mBAGPlD,cAACsnB,GAAa,CAAA9mB,SACZR,cAAC2E,IAAM,CAACiE,MAAM,OAAO0Q,SAAU4D,EAAmBrY,QAASyZ,GAAehO,QAAQ,YAAW9P,SAC1F0C,EAAE,iBAtBPjC,eAACkmB,GAAe,CAAA3mB,SAAA,CACdR,cAACqnB,GAAY,CAAA7mB,SACXR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,aAAarB,SAAS,OAAMlD,SACpE0C,EAAE,qBAGPlD,cAACsnB,GAAa,CAAA9mB,SACZR,cAAC2I,IAAQ,CAACC,MAAO,IAAKJ,aAAc,GAAIwf,UAAW,UAzFvD/mB,eAACkmB,GAAe,CAAA3mB,SAAA,CACdR,cAACqnB,GAAY,CAAA7mB,SACXR,cAACqC,IAAI,CAAC4C,MAAI,EAACsZ,cAAc,YAAYxZ,MAAM,aAAarB,SAAS,OAAMlD,SACpE0C,EAAE,qBAGPlD,cAACsnB,GAAa,CAAA9mB,SACZR,cAAC2e,KAAY,CAAC/V,MAAM,aAsG9B,EChNMqf,GAAkB1F,YAASljB,QAAAC,YAAA,oFAS3B4oB,GAAoB3F,YAASjiB,QAAAhB,YAAA,oFAS7B0L,GAAY7L,IAAOC,IAAGkD,QAAAhD,YAAA,wTACb,SAAAI,GAAW,OAAAA,EAARoP,SAEVzC,YAAGC,QAAAhN,YAAA,sDACC2oB,IAEJ5b,YAAGU,QAAAzN,YAAA,sDACC4oB,GACH,IAWL,SAAA9mB,GAAQ,OAAAA,EAALlB,MAAkB8B,aAAaokB,EAAE,IAMlCxW,GAAqBzQ,YAAO0Q,IAAP1Q,CAAoBgO,QAAA7N,YAAA,+BAIzC6oB,GAAiBhpB,IAAOC,IAAGgpB,QAAA9oB,YAAA,wJACtB,SAAAqC,GAAQ,OAAAA,EAALzB,MAAkBC,OAAOyB,IAAI,IAKvC,SAAAG,GAAQ,OAAAA,EAAL7B,MAAkB8B,aAAaG,EAAE,IAKlCkmB,GAAgBlpB,IAAOC,IAAGkpB,QAAAhpB,YAAA,yRAK5B,SAAA4C,GAAQ,OAAAA,EAALhC,MAAkB8B,aAAaG,EAAE,IAiBlCglB,GAAkBhoB,IAAOC,IAAGmpB,QAAAjpB,YAAA,kKAI9B,SAAAkD,GAAQ,OAAAA,EAALtC,MAAkB8B,aAAaG,EAAE,IAQlCqmB,GAAgBrpB,IAAOC,IAAGqpB,QAAAnpB,YAAA,+BAI1BopB,GAAiBvpB,IAAOC,IAAGupB,QAAArpB,YAAA,iEAG7B,SAAAiN,GAAQ,OAAAA,EAALrM,MAAkB8B,aAAaokB,EAAE,IAKlCwC,GAAezpB,IAAOC,IAAGypB,QAAAvpB,YAAA,2GA4EhBwpB,GArEgD,SAAHtc,GAQrD,IAPLuc,EAAOvc,EAAPuc,QACA1I,EAAG7T,EAAH6T,IACA3O,EAAUlF,EAAVkF,WACA0R,EAAS5W,EAAT4W,UACA0C,EAAatZ,EAAbsZ,cACAhX,EAAQtC,EAARsC,SACA0L,EAAWhO,EAAXgO,YAEM3G,EAAOkV,EAEL7lB,EAAMC,cAAND,EACF8lB,EAAYnV,EAAKjC,YACjBqX,EAA+B,OAApBpV,EAAKnC,WACdG,EAAsBgC,EAAtBhC,WAAYhB,EAAUgD,EAAVhD,MACdV,EAAU0D,EAAK4K,UAAY5K,EAAK4K,SAASsJ,cAAcld,QAAQ,SAAU,IACzE4Y,EAAwBtU,GAAyB,CACrDC,kBAAmByC,EAAWqM,QAC9B7O,aAAcwB,EAAMqN,UAEhBF,EAAYnK,EAAKuJ,YAAY3N,KAC7ByZ,EAAOzd,mBACX,kBAAMqY,aAAkBkF,EAAYnV,EAAKhD,MAAMqN,QAAQzO,KAAYuO,EAAU,GAC7E,CAACgL,EAAWhL,EAAWnK,EAAKhD,MAAMqN,UAE9BiL,EAAyC,IAAhClQ,WAAWpF,EAAK4D,YACzB2R,EAAO3d,mBACX,kBACEud,EAAS,GAAA1kB,OACFof,IAAa,oBAAApf,OAAmB2Z,aAAWpK,EAAKhD,MAAMqN,UAAQ,GAAA5Z,OAC9Dqf,IAAsB,KAAArf,OAAImf,EAAuB,GAC1D,CAACuF,EAAWvF,EAAuB5P,EAAKhD,MAAMqN,UAEhD,OACEjd,eAAC+J,GAAS,CAAC8D,SAAUA,EAAStO,SAAA,CAC5BS,eAACunB,GAAa,CAAAhoB,SAAA,CACXyoB,GACCjpB,cAACmoB,GAAc,CAAA3nB,SACbR,cAAC4P,GAAkB,CAAC1K,KAAMkkB,EAAK5oB,SAAE0C,EAAE,eAAgB,CAAER,OAAQyN,QAGjEnQ,cAAC4P,GAAkB,CAAC1K,KAAMgkB,EAAK1oB,SAAE0C,EAAE,mBACnCjC,eAAConB,GAAa,CAAA7nB,SAAA,CACX2oB,GAAUnpB,cAACoQ,GAAS,IACpByD,EAAKmD,yBAA2BhX,cAAC0Q,GAAqB,UAG3DzP,eAACynB,GAAc,CAAAloB,SAAA,CACbS,eAAC2nB,GAAY,CAAApoB,SAAA,CACXR,cAACqC,IAAI,CAAA7B,SAAE0C,EAAE,SACTlD,cAACwkB,GAAG1a,YAAA,GAAKuW,OAEXpf,eAAC2nB,GAAY,CAAApoB,SAAA,CACXR,cAACqC,IAAI,CAAA7B,SAAE0C,EAAE,gBACTlD,cAACqmB,GAAUvc,YAAA,GAAK4H,OAElBzQ,eAAC2nB,GAAY,CAAApoB,SAAA,CACXR,cAACqC,IAAI,CAAA7B,SAAE0C,EAAE,eACTlD,cAACgnB,GAASld,YAAA,GAAKsZ,UAGnBniB,eAACkmB,GAAe,CAAA3mB,SAAA,CACdR,cAACuc,GAAazS,wBAAA,GAAK+J,GAAI,IAAEiS,cAAeA,KACxC9lB,cAACqpB,GAAYvf,wBAAA,GAAK+J,GAAI,IAAE2G,YAAaA,EAAasL,cAAeA,UAIzE,E,UCjLawD,GAAwC,CACnD,CACEC,GAAI,EACJC,KAAM,OACNC,UAAU,EACVjkB,MAAO,IAET,CACE+jB,GAAI,EACJC,KAAM,SACNC,UAAU,EACVjkB,MAAO,UAET,CACE+jB,GAAI,EACJC,KAAM,MACNC,UAAU,EACVjkB,MAAO,OAET,CACE+jB,GAAI,EACJC,KAAM,UACNC,UAAU,EACVjkB,MAAO,KAIEkkB,GAAyC,CACpD,CACEH,GAAI,EACJC,KAAM,OACNC,UAAU,EACVjkB,MAAO,IAET,CACE+jB,GAAI,EACJC,KAAM,MACNC,UAAU,EACVjkB,MAAO,OAET,CACE+jB,GAAI,EACJC,KAAM,YACNC,UAAU,EACVjkB,MAAO,aAET,CACE+jB,GAAI,EACJC,KAAM,SACNC,UAAU,EACVjkB,MAAO,UAET,CACE+jB,GAAI,EACJC,KAAM,aACNC,UAAU,EACVjkB,MAAO,cAET,CACE+jB,GAAI,EACJC,KAAM,UACNC,UAAU,EACVjkB,MAAO,KAICmkB,GAAQ,SAARA,GAAQ,OAARA,EAAQ,cAARA,EAAQ,YAARA,CAAQ,MC7DdC,GAAQ,CACZvJ,IAAKmE,GACL3Q,KAAMyR,GACNK,OAAQE,GACRkD,QAAS/C,GACTtU,WAAY2U,GACZjD,UAAW4D,IAGP6C,GAAY1qB,IAAOC,IAAGC,QAAAC,YAAA,2JAOxB,SAAAI,GAAQ,OAAAA,EAALQ,MAAkB8B,aAAaolB,EAAE,IAKlC0C,GAAW3qB,IAAO4qB,GAAEzpB,QAAAhB,YAAA,qPAepB0qB,GAAmB7qB,IAAO8qB,GAAE3nB,QAAAhD,YAAA,wCAI5B4qB,GAAgB/qB,IAAO8qB,GAAE3d,QAAAhN,YAAA,yDAKzB6qB,GAAiBhrB,IAAO8qB,GAAEld,QAAAzN,YAAA,gCAwHjB8qB,GApH2C,SAAC7qB,GACzD,IAAQwpB,EAA2BxpB,EAA3BwpB,QAASjD,EAAkBvmB,EAAlBumB,cACXuE,IAAoB9E,YAAYwD,EAAQnV,KAAK0G,cAAcyC,WACjEjX,EAAsDC,mBAASskB,GAAgBrkB,EAAAC,YAAAH,EAAA,GAAxEwkB,EAAmBtkB,EAAA,GAAEukB,EAAsBvkB,EAAA,GAC5CwkB,EAAoBzG,GAAkBuG,EAAqB,KACzDpnB,EAAMC,cAAND,EAEFunB,EAAoB,WACxBF,GAAwBD,EAC1B,EAEA9jB,qBAAU,WACR+jB,EAAuBF,EACzB,GAAG,CAACA,IAEJ,IAAAK,EAAuBC,cAAfC,EAAIF,EAAJE,KAAMC,EAAIH,EAAJG,KAERC,GAAYF,EACZG,EAAcD,EAAWxB,GAAqBI,GAC9CsB,EAAcD,EAAYjqB,KAAI,SAACmqB,GAAM,OAAKA,EAAOzB,IAAI,IAmF3D,OACEvoB,eAAAC,WAAA,CAAAV,SAAA,CAjFKqqB,EA+CH5pB,eAAC6oB,GAAQ,CAACjlB,QAAS4lB,EAAkBjqB,SAAA,CACnCS,eAAA,MAAAT,SAAA,CACES,eAAA,MAAAT,SAAA,CACER,cAACkqB,GAAa,CAAA1pB,SACZR,cAACsF,KAAU,CAACE,MAAOtC,EAAE,OAAO1C,SAC1BR,cAACwkB,GAAG1a,wBAAA,GAAKvK,EAAM8gB,KAAG,IAAEsE,YAAU,SAGlC3kB,cAACgqB,GAAgB,CAAAxpB,SACfR,cAACsF,KAAU,CAACE,MAAOtC,EAAE,UAAU1C,SAC7BR,cAAC6lB,GAAM/b,wBAAA,GAAKvK,EAAMomB,QAAM,IAAEG,cAAeA,YAI/C9lB,cAAA,MAAAQ,SACER,cAACmqB,GAAc,CAAA3pB,SACbR,cAACsF,KAAU,CAAA9E,SACTR,cAACslB,GAAIxb,YAAA,GAAKvK,EAAMsU,gBAKxB7T,cAAA,MAAAQ,SACER,cAAC6pB,GAAS,CAAArpB,SACRR,cAACsF,KAAU,CAAA9E,SACTR,cAACgmB,GAAO,CAACC,mBAAoBqE,aAtEnCtqB,cAAC8pB,GAAQ,CAACjlB,QAAS4lB,EAAkBjqB,SAClC0qB,OAAOC,KAAK5rB,GAAOuB,KAAI,SAACsqB,GACvB,IAAMC,EAAcL,EAAYM,QAAQF,GACxC,IAAqB,IAAjBC,EACF,OAAO,KAGT,OAAQD,GACN,IAAK,UACH,OACEprB,cAAA,MAAAQ,SACER,cAAC6pB,GAAS,CAAArpB,SACRR,cAACsF,KAAU,CAAA9E,SACTR,cAACgmB,GAAO,CAACC,mBAAoBqE,SAH1Bc,GAQb,IAAK,MACH,OACEprB,cAAA,MAAAQ,SACER,cAAC6pB,GAAS,CAAArpB,SACRR,cAACsF,KAAU,CAACE,MAAOtC,EAAE,OAAO1C,SAC1BR,cAACwkB,GAAG1a,wBAAA,GAAKvK,EAAM8gB,KAAG,IAAEsE,WAAYmG,UAH7BM,GAQb,QACE,OACEprB,cAAA,MAAAQ,SACER,cAAC6pB,GAAS,CAAArpB,SACRR,cAACsF,KAAU,CAACE,MAAOtC,EAAE6nB,EAAYM,GAAa7lB,OAAOhF,SAClDE,IAAM6qB,cAAc3B,GAAMwB,GAAIthB,wBAAA,GAAOvK,EAAM6rB,IAAI,IAAEtF,wBAH/CsF,GASjB,MA0CHZ,GACCxqB,cAAA,MAAAQ,SACER,cAAA,MAAIwrB,QAAS,EAAEhrB,SACbR,cAAC8oB,GAAWhf,wBAAA,GAAKvK,GAAK,IAAEib,YAAajb,EAAMsU,KAAK2G,YAAa1L,SAAUwb,WAMnF,ECtLMtf,GAAY7L,IAAOC,IAAGC,QAAAC,YAAA,0GAChB,SAAAI,GAAQ,OAAAA,EAALQ,MAAkB0iB,KAAK6I,UAAU,IAEhC,SAAArqB,GAAQ,OAAAA,EAALlB,MAAkB0iB,KAAKC,UAAU,IAK9C6I,GAAevsB,IAAOC,IAAGkB,QAAAhB,YAAA,qFAQzBqsB,GAAcxsB,IAAOysB,MAAKtpB,QAAAhD,YAAA,gJAS1BusB,GAAY1sB,IAAO2sB,MAAKxf,QAAAhN,YAAA,iGASxBysB,GAAiB5sB,IAAOC,IAAG2N,QAAAzN,YAAA,iCAI3B0sB,GAAwB7sB,IAAOC,IAAG+N,QAAA7N,YAAA,qGA2CzB2sB,GApC0B,SAAC1sB,GACxC,IAAM2sB,EAAiBze,iBAAuB,MACtCvK,EAAMC,cAAND,EACAoD,EAAiC/G,EAAjC+G,KAAM6lB,EAA2B5sB,EAA3B4sB,QAASrG,EAAkBvmB,EAAlBumB,cAEfsG,EAASC,YAASF,EAAS7lB,EAAM,CAAEmjB,UAAU,EAAM6C,WAAY,SAA/DF,KAQR,OACEpsB,cAACgL,GAAS,CAAAxK,SACRS,eAAC8qB,GAAc,CAAAvrB,SAAA,CACbR,cAAC0rB,GAAY,CAACpd,IAAK4d,EAAe1rB,SAChCR,cAAC2rB,GAAW,CAAAnrB,SACVR,cAAC6rB,GAAS,CAAArrB,SACP4rB,EAAKtrB,KAAI,SAACyrB,GACT,OAAOC,wBAACpC,GAAGtgB,wBAAA,GAAKyiB,EAAIE,UAAQ,IAAE3G,cAAeA,EAAesF,IAAG,aAAA9mB,OAAeioB,EAAIhD,MACpF,UAINvpB,cAACgsB,GAAqB,CAAAxrB,SACpBS,eAAC0D,IAAM,CAAC2L,QAAQ,OAAOzL,QAnBX,WAClBqnB,EAAe/d,QAAQue,eAAe,CACpCC,SAAU,UAEd,EAeoDnsB,SAAA,CAC1CR,cAACgP,IAAa,CAACpG,MAAM,OAAO7D,MAAM,YACjC7B,EAAE,wBAMf,ECzDM0pB,GAAmBztB,IAAOC,IAAGC,QAAAC,YAAA,qTAW/B,SAAAI,GAAQ,OAAAA,EAALQ,MAAkB8B,aAAaG,EAAE,IAQlC0qB,GAAgB1tB,IAAOC,IAAGkB,QAAAhB,YAAA,gHAK5B+C,KAKEyqB,GAAe3tB,IAAOC,IAAGkD,QAAAhD,YAAA,+CACzB+C,KAKA0qB,GAAkB5tB,IAAOC,IAAGkN,QAAAhN,YAAA,4IAM9B,SAAA8B,GAAQ,OAAAA,EAALlB,MAAkB8B,aAAaG,EAAE,IAMlC6qB,GAAe7tB,IAAOC,IAAG2N,QAAAzN,YAAA,iRAW3B,SAAAqC,GAAQ,OAAAA,EAALzB,MAAkB8B,aAAaG,EAAE,IAUlC8qB,GAAiB9tB,IAAOC,IAAG+N,QAAA7N,YAAA,+OA4B3B4tB,GAAiB,SAAHnrB,GAAe,IAATmB,EAACnB,EAADmB,EACxB,MAAO,CACL,CACEsC,MAAOtC,EAAE,OACTL,MAAO,OAET,CACE2C,MAAOtC,EAAE,OACTL,MAAO,OAET,CACE2C,MAAOtC,EAAE,cACTL,MAAO,cAET,CACE2C,MAAOtC,EAAE,UACTL,MAAO,UAET,CACE2C,MAAOtC,EAAE,aACTL,MAAO,aAET,CACE2C,MAAOtC,EAAE,eACTL,MAAO,cAGb,EAyUesqB,GAvUS,WACtB,IAAQC,EAASC,cAATD,KACAxR,EAAalB,cAAbkB,SACA1Y,EAAMC,cAAND,EACRoqB,EAA4CC,cAA9BC,EAASF,EAAfhnB,KAAiBmnB,EAAcH,EAAdG,eACnBhR,EAAWC,cACjB5W,EAA0BC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAA/B4nB,EAAK1nB,EAAA,GAAE2nB,EAAQ3nB,EAAA,GACtB4nB,EAAmBlkB,EAAgBigB,GAASkE,MAAO,CAAE9jB,gBAAiB,sBAA/D+jB,EAAqF7nB,YAAA2nB,EAAA,GAA7E,GACPrb,EAAYC,cAAZD,QACRnM,EAAoCL,mBAAS,OAAMM,EAAAJ,YAAAG,EAAA,GAA5C2nB,EAAU1nB,EAAA,GAAE2nB,EAAa3nB,EAAA,GAE1B4nB,EAAarS,EAASC,SAAS,YAC/BqS,EAAatS,EAASC,SAAS,WAC/BoN,GAAYiF,IAAeD,EAEjCE,YAAiBF,GAEjB,IAAQla,EAAeC,cAAfD,WAEJqa,GAAgB,EAEpBra,EAAWa,OAAOyZ,SAAQ,SAACxZ,GACrBA,EAAKhS,MAAM,GAAGiO,iBAAmByB,GAAW,IAAIzB,gBAAesd,GAAgB,EACrF,IAEA,IAAM5T,EAAc4T,EAEdE,EAAUd,EAIV1H,GAAiBvT,KAAcA,GAAWkb,EAEhD3f,EAAoC/H,oBAAUkjB,GAASlb,EAAA9H,YAAA6H,EAAA,GAAhDygB,EAAUxgB,EAAA,GAAEygB,EAAazgB,EAAA,GAC1B0gB,EAAe/S,YAAiBgT,eACtCloB,qBAAU,WACRgoB,GAAevF,EACjB,GAAG,CAACA,IAEJ,IAAM0F,EAAcL,EAAQM,QAC1B,SAAC/a,GAAI,OAAMA,EAAKD,KAAoB,IAAbC,EAAKD,MAAkC,OAApBC,EAAKnC,aAAwBmd,YAAchb,EAAKD,IAAI,IAE1Fkb,EAAgBR,EAAQM,QAAO,SAAC/a,GAAI,MAAyB,qBAAbA,EAAKD,GAAmB,IACxEmb,GAAgBT,EAAQM,QAAO,SAAC/a,GAAI,OAAkB,IAAbA,EAAKD,KAAiC,OAApBC,EAAKnC,aAAwBmd,YAAchb,EAAKD,IAAI,IAC/Gob,GAAgBV,EAAQM,QAAO,SAAC/a,GAAI,OAAKgb,YAAchb,EAAKD,IAAI,IAEhEqb,GAAkBN,EAAYC,QAClC,SAAC/a,GAAI,OAAKA,EAAKwJ,UAAY,IAAIxZ,IAAUgQ,EAAKwJ,SAAS/C,eAAe8D,cAAc,EAAE,IAGlF8Q,GAAsBH,GAAcH,QACxC,SAAC/a,GAAI,OAAKA,EAAKwJ,UAAY,IAAIxZ,IAAUgQ,EAAKwJ,SAAS/C,eAAe8D,cAAc,EAAE,IAGlF+Q,GAAsBH,GAAcJ,QACxC,SAAC/a,GAAI,OAAKA,EAAKwJ,UAAY,IAAIxZ,IAAUgQ,EAAKwJ,SAAS/C,eAAe8D,cAAc,EAAE,IAGlFgR,GAAY1c,uBAChB,SAAC2c,GACC,IAAIC,EAA+CD,EAAevuB,KAAI,SAAC+S,GACrE,IAAKA,EAAK0b,sBAAwB1b,EAAKhC,WAAW2d,UAChD,OAAO3b,EAET,IAAM4b,EAAiB,IAAI5rB,IAAUgQ,EAAK0b,qBAAqB3Y,MAAM/C,EAAKhC,WAAW2d,WAE/EnP,EAAM4I,EACRyG,YACE,IAAI7rB,IAAUgQ,EAAK8b,YACnBlT,EACAgT,EACA5b,EAAKuJ,YAAY3N,KACjBgf,GAEF,EAEJ,OAAA3kB,wBAAA,GAAY+J,GAAI,IAAEwM,MAAK+C,UAAWqM,GACpC,IAEA,GAAI/B,EAAO,CACT,IAAMkC,EAAiBhlB,GAAS8iB,EAAM5c,eACtCwe,EAAwBA,EAAsBV,QAAO,SAAC/a,GACpD,OAAOjJ,GAASiJ,EAAK4K,SAAS3N,eAAe+K,SAAS+T,EACxD,GACF,CACA,OAAON,CACT,GACA,CAAC7S,EAAUiR,EAAOzE,EAAUwF,IAOxBoB,GAAcpiB,iBAAuB,MAE3CoK,GAAwD9R,mBA/H1B,IA+H2D+R,GAAA7R,YAAA4R,GAAA,GAAlFiY,GAAoBhY,GAAA,GAAEiY,GAAuBjY,GAAA,GACpDE,GAA0CjS,oBAAS,GAAMkS,GAAAhS,YAAA+R,GAAA,GAAlDgY,GAAa/X,GAAA,GAAEgY,GAAgBhY,GAAA,GAEhCiY,GAAsBzkB,mBAAQ,WAClC,IAAI0kB,EAAc,GAqClB,OAVIlH,IACFkH,EAA2Bf,GAAbb,EAAuBU,GAA6B,GAAD3qB,OAAA8rB,YAAKtB,GAAasB,YAAKzB,MAEtFT,IACFiC,EAA2Bf,GAAbb,EAAuBW,GAAiCH,KAEpEd,IACFkC,EAA2Bf,GAAbb,EAAuBY,GAAiCH,KAhCtD,SAACqB,GACjB,OAAQtC,GACN,IAAK,MACH,OAAOuC,kBAAQD,GAAO,SAACxc,GAAyB,OAAKA,EAAKwM,GAAG,GAAE,QACjE,IAAK,aACH,OAAOiQ,kBACLD,GACA,SAACxc,GAAyB,OAAMA,EAAKnC,WAAawV,OAAOrT,EAAKnC,WAAW6e,MAAM,GAAI,IAAM,CAAC,GAC1F,QAEJ,IAAK,SACH,OAAOD,kBACLD,GACA,SAACxc,GAAyB,OAAMA,EAAKwJ,SAAW6J,OAAOrT,EAAKwJ,SAASb,UAAY,CAAC,GAClF,QAEJ,IAAK,YACH,OAAO8T,kBAAQD,GAAO,SAACxc,GAAyB,OAAKqT,OAAOrT,EAAKuP,UAAU,GAAE,QAC/E,IAAK,aACH,OAAOkN,kBAAQD,GAAO,SAACxc,GAAyB,OAAKqT,OAAOrT,EAAK4D,WAAW,GAAE,OAChF,QACE,OAAO4Y,EAEb,CAYOG,CAAUL,GAAaI,MAAM,EAAGT,GACzC,GAAG,CACD/B,EACAe,EACAH,EACAS,GACAL,GACAC,GACA/F,EACAiF,EACAD,EACAkB,GACAD,GACAX,EACAU,GACAa,KAGFtpB,qBAAU,WAQHwpB,KACsB,IAAIS,sBART,SAACC,GACrBzqB,YAAgByqB,EAAO,GAAX,GACFC,gBACRZ,IAAwB,SAACa,GAAqB,OAAKA,EA9L3B,EA8L0E,GAEtG,GAGmE,CAC/DC,WAAY,MACZC,UAAW,IAEIC,QAAQlB,GAAY1hB,SACrC8hB,IAAiB,GAErB,GAAG,CAACC,GAAqBF,KAEzB,IAAMgB,GAAUd,GAAoBpvB,KAAI,SAAC+S,GACvC,IAAQhD,EAAsBgD,EAAtBhD,MAAOgB,EAAegC,EAAfhC,WACTxC,EAAewB,EAAMqN,QACrB9O,EAAoByC,EAAWqM,QAC/B/N,EAAU0D,EAAK4K,SAkCrB,MAhCsB,CACpB4B,IAAK,CACHxd,MAAOgR,EAAKwM,KAAOxM,EAAKwM,IAAIrc,eAAe,QAAS,CAAEqf,sBAAuB,IAC7E3R,WAAYmC,EAAKnC,WACjBvB,UACAd,eACAD,oBACAqN,WACAgI,cAAe5Q,EAAKwM,KAEtBxM,KAAM,CACJ4D,WAAY5D,EAAK4D,WACjBjS,MAAO2K,EACPyD,IAAKC,EAAKD,IACV/C,MAAOgD,EAAKhD,MACZgB,WAAYgC,EAAKhC,WACjBD,YAAaiC,EAAKjC,YAClB4I,eAEFmL,OAAQ,CACNnJ,SAAUd,YAAiB,IAAI7X,IAAUgQ,EAAKwJ,SAASb,WACvD5I,IAAKC,EAAKD,KAEZwP,UAAW,CACTA,UAAWvP,EAAKuP,WAElB1R,WAAY,CACVA,WAAYmC,EAAKnC,YAEnBqX,QAASlV,EAIb,IAgFA,OACE7T,cAAAkB,WAAA,CAAAV,SACES,eAACgwB,IAAI,CAAAzwB,SAAA,CACHR,cAACkxB,KAAc,IACflxB,cAACgJ,EAAS,IACV/H,eAACgsB,GAAc,CAAAzsB,SAAA,CACbR,cAACmxB,KAAe,IAChBnxB,cAACoxB,KAAQ,OAEXpxB,cAAC+I,IAAI,CAAAvI,SACHS,eAAC2rB,GAAgB,CAAApsB,SAAA,CACfS,eAAC+rB,GAAY,CAAAxsB,SAAA,CACXR,cAAC8sB,GAAY,CAAAtsB,SACXR,cAACqN,GAAM,CAACE,QAAS2f,GAAe,CAAEhqB,MAAMP,SAjBvB,SAAC6L,GAC9Bwf,EAAcxf,EAAO3L,MACvB,MAkBY5B,eAAC4rB,GAAa,CAAArsB,SAAA,CACZR,cAACqxB,IAAM,CAAChY,QAASkV,EAAY5rB,SAAU,kBAAM6rB,GAAeD,EAAW,EAAE3pB,MAAM,OAC/E3D,eAACoB,IAAI,CAAA7B,SAAA,CAAC,IAAE0C,EAAE,wBAGdlD,cAAC+sB,GAAe,CAAAvsB,SACdR,cAAC8sB,GAAY,CAACzpB,MAAO,CAAEuF,MAAO,QAASpI,SACrCR,cAACiL,GAAW,CAACtI,SAjOD,SAACqf,GACzB2L,EAAS3L,EAAMpW,OAAO/I,MACxB,EA+NwD6B,YAAY,0BArG9C,WACpB,GAAIopB,IAAanE,GAASkE,OAASmD,GAAQnwB,OAAQ,CACjD,IAEMsrB,EAFezC,GAEQ5oB,KAAI,SAACmqB,GAAM,MAAM,CAC5C1B,GAAI0B,EAAO1B,GACXC,KAAMyB,EAAOzB,KACbhkB,MAAOylB,EAAOzlB,MACd8rB,KAAM,SAACC,EAAsBC,GAC3B,OAAQvG,EAAOzB,MACb,IAAK,OACH,OAAOgI,EAAEjI,GAAKgI,EAAEhI,GAClB,IAAK,MACH,OAAIgI,EAAE9E,SAASpM,IAAIxd,OAAS2uB,EAAE/E,SAASpM,IAAIxd,MAClCqkB,OAAOqK,EAAE9E,SAASpM,IAAIxd,OAASqkB,OAAOsK,EAAE/E,SAASpM,IAAIxd,OAGvD,EACT,IAAK,SACH,OAAO0uB,EAAE9E,SAAS9G,OAAOnJ,SAAWgV,EAAE/E,SAAS9G,OAAOnJ,SACxD,QACE,OAAO,EAEb,EACAiN,SAAUwB,EAAOxB,SAClB,IAED,OAAOzpB,cAACyxB,GAAK,CAACnrB,KAAM0qB,GAAS7E,QAASA,EAASrG,cAAeA,EAAevT,QAASA,GACxF,CAEA,OACEvS,cAAA,OAAAQ,SACES,eAACoI,EAAU,CAAA7I,SAAA,CACTR,cAAC0xB,IAAK,CAACC,OAAK,EAACvE,KAAI,GAAA9oB,OAAK8oB,GAAO5sB,SAC1B0vB,GAAoBpvB,KAAI,SAAC+S,GAAI,OAC5B7T,cAACijB,GAAQ,CAEPpP,KAAMA,EACN2G,YAAaA,EACbiC,SAAUA,EACVlK,QAASA,EACTtC,SAAS,GALJ4D,EAAKD,IAMV,MAGN5T,cAAC0xB,IAAK,CAACC,OAAK,EAACvE,KAAI,GAAA9oB,OAAK8oB,EAAI,YAAW5sB,SAClC0vB,GAAoBpvB,KAAI,SAAC+S,GAAI,OAC5B7T,cAACijB,GAAQ,CAEPpP,KAAMA,EACN2G,YAAaA,EACbiC,SAAUA,EACVlK,QAASA,EACTtC,SAAO,GALF4D,EAAKD,IAMV,MAGN5T,cAAC0xB,IAAK,CAACC,OAAK,EAACvE,KAAI,GAAA9oB,OAAK8oB,EAAI,aAAY5sB,SACnC0vB,GAAoBpvB,KAAI,SAAC+S,GAAI,OAC5B7T,cAACijB,GAAQ,CAEPpP,KAAMA,EACN2G,YAAaA,EACbiC,SAAUA,EACVlK,QAASA,EACTtC,SAAO,GALF4D,EAAKD,IAMV,UAMd,CAkCOge,GACD5xB,cAAA,OAAKsO,IAAKuhB,SAIlB,C","file":"static/js/10.b4f5d77f.chunk.js","sourcesContent":["import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px 0;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n`\n\nexport default ModalActions\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, Input, InputProps, Flex, Link } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BigNumber } from 'bignumber.js'\n\ninterface ModalInputProps {\n  max: string\n  symbol: string\n  onSelectMax?: () => void\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  // placeholder?: string\n  value: string\n  addLiquidityUrl?: string\n  inputTitle?: string\n  decimals?: number\n}\n\nconst getBoxShadow = ({ isWarning = false, theme }) => {\n  if (isWarning) {\n    return theme.shadows.warning\n  }\n\n  return theme.shadows.inset\n}\n\nconst StyledTokenInput = styled.div<InputProps>`\n  display: flex;\n  flex-direction: column;\n  background-color: ${({ theme }) => theme.colors.input};\n  border-radius: 2px;\n  box-shadow: ${getBoxShadow};\n  color: ${({ theme }) => theme.colors.text};\n  padding: 20px;\n  width: 100%;\n`\n\nconst StyledInput = styled(Input)`\n  box-shadow: none;\n  flex: 1;\n  margin: 0 8px;\n  padding: 0 8px;\n\n  ${({ theme }) => theme.mediaQueries.xs} {\n    width: 80px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n  }\n`\n\nconst StyledErrorMessage = styled(Text)`\n  position: absolute;\n  bottom: -22px;\n  a {\n    display: inline;\n  }\n`\n\nconst ModalInput: React.FC<ModalInputProps> = ({\n  max,\n  symbol,\n  onChange,\n  onSelectMax,\n  value,\n  addLiquidityUrl,\n  inputTitle,\n  decimals = 18,\n}) => {\n  const { t } = useTranslation()\n  const isBalanceZero = max === '0' || !max\n\n  const displayBalance = (balance: string) => {\n    if (isBalanceZero) {\n      return '0'\n    }\n    const balanceBigNumber = new BigNumber(balance)\n    if (balanceBigNumber.gt(0) && balanceBigNumber.lt(0.0001)) {\n      return balanceBigNumber.toLocaleString()\n    }\n    return balanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  return (\n    <div style={{ position: 'relative' }}>\n      <StyledTokenInput isWarning={isBalanceZero}>\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\n          <Text fontSize=\"14px\">{inputTitle}</Text>\n          <Text fontSize=\"14px\">{t('Balance: %balance%', { balance: displayBalance(max) })}</Text>\n        </Flex>\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\n          <StyledInput\n            pattern={`^[0-9]*[.,]?[0-9]{0,${decimals}}$`}\n            inputMode=\"decimal\"\n            step=\"any\"\n            min=\"0\"\n            onChange={onChange}\n            placeholder=\"0\"\n            value={value}\n          />\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\n            {t('Max')}\n          </Button>\n          <Text fontSize=\"16px\">{symbol}</Text>\n        </Flex>\n      </StyledTokenInput>\n      {isBalanceZero && (\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\n          {t('No tokens to stake')}:{' '}\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\n            {t('Get %symbol%', { symbol })}\n          </Link>\n        </StyledErrorMessage>\n      )}\n    </div>\n  )\n}\n\nexport default ModalInput\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Label = styled.div`\n  font-weight: 600;\n  font-size: 10px;\n  line-height: 16px;\n  text-transform: uppercase;\n  color: #9199b0;\n  text-align: left;\n  margin-bottom: 3px;\n`\n\nconst ContentContainer = styled.div`\n  min-height: 24px;\n  display: flex;\n  align-items: center;\n`\n\ninterface CellLayoutProps {\n  label?: string\n}\n\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\n  return (\n    <div>\n      {label && <Label>{label}</Label>}\n      <ContentContainer>{children}</ContentContainer>\n    </div>\n  )\n}\n\nexport default CellLayout\n","import { useEffect, useState } from 'react'\nimport { useMasterchef } from './useContract'\nimport useRefresh from './useRefresh'\n\nconst useStartTime = () => {\n  const masterChefContract = useMasterchef()\n  const { slowRefresh } = useRefresh()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [data, setData] = useState<number>(0)\n\n  useEffect(() => {\n    const fetchStartTime = async () => {\n      try {\n        setLoading(true)\n        const startTime = await masterChefContract.methods.startTime().call()\n        setData(startTime * 1000)\n      } catch (e) {\n        console.error('fetch start time error', e)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchStartTime()\n  }, [masterChefContract, slowRefresh])\n\n  return {\n    data,\n    loading,\n  }\n}\n\nexport default useStartTime\n","import React from 'react'\nimport styled from 'styled-components'\nimport Countdown from 'react-countdown'\nimport { Skeleton, Text } from 'uikit'\n\nconst CountdownNumber = styled.span`\n  font-size: 30px;\n  font-weight: bold;\n`\n\nconst renderer = ({ completed, formatted }) => {\n  const { days, hours, minutes, seconds } = formatted\n  if (completed) {\n    // Render a completed state\n    return 'Started'\n  }\n  // Render a countdown\n  return (\n    <div>\n      <div>\n        <CountdownNumber>{days}</CountdownNumber> days <CountdownNumber>{hours}</CountdownNumber> hours{' '}\n        <CountdownNumber>{minutes}</CountdownNumber> minutes <CountdownNumber>{seconds}</CountdownNumber> seconds\n      </div>\n    </div>\n  )\n}\n\nconst StartCountdown = ({ targetBlockTime }) => {\n  return (\n    <Text fontSize=\"20px\" marginBottom=\"10px\">\n      {targetBlockTime ? (\n        <Countdown date={targetBlockTime} renderer={renderer} />\n      ) : (\n        <Skeleton width={300} height={60} />\n      )}\n    </Text>\n  )\n}\n\nexport default StartCountdown\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Text, Card, Spinner } from 'uikit'\n\nimport useStartTime from 'hooks/useStartTime'\n\nimport StartCountdown from './StartCountdown'\n\nconst StyledCard = styled(Card)`\n  padding: 20px;\n  margin-bottom: 15px;\n`\n\nconst StartCard = () => {\n  const { data: startTime, loading } = useStartTime()\n  if (startTime < Date.now()) return null\n  return (\n    <StyledCard>\n      <Text>Farming will start in</Text>\n      {loading && !startTime ? <Spinner size={64} /> : <StartCountdown targetBlockTime={startTime} />}\n      <Text>Deposit now to start farming right after launch.</Text>\n      <Text>Whitelisted users have discount on deposit until launch.</Text>\n    </StyledCard>\n  )\n}\n\nexport default StartCard\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import identity from 'lodash/identity'\nimport { useEffect, useState } from 'react'\n\ninterface UsePersistStateOptions {\n  localStorageKey: string\n  hydrate?: (value: any) => any\n  dehydrate?: (value: any) => any\n}\n\nconst defaultOptions = {\n  hydrate: identity,\n  dehydrate: identity,\n}\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, userOptions: UsePersistStateOptions) => {\n  const { localStorageKey, hydrate, dehydrate } = { ...defaultOptions, ...userOptions }\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? hydrate(JSON.parse(valueFromLS)) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(dehydrate(value)))\n  }, [value, localStorageKey, dehydrate])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","export const Latinise = {\n  latin_map: {\n    τ: 't',\n    Τ: 'T',\n  },\n}\n\nexport const latinise = (input: string) => {\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\n}\n","import React, { useState, useMemo } from 'react'\nimport { Input } from 'uikit'\nimport styled from 'styled-components'\nimport debounce from 'lodash/debounce'\nimport { useTranslation } from 'contexts/Localization'\n\nconst StyledInput = styled(Input)`\n  border-radius: 8px;\n  margin-left: auto;\n`\n\nconst InputWrapper = styled.div`\n  position: relative;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: block;\n  }\n`\n\nconst Container = styled.div<{ toggled: boolean }>``\n\ninterface Props {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\n  placeholder?: string\n}\n\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback, placeholder = 'Search' }) => {\n  const [toggled, setToggled] = useState(false)\n  const [searchText, setSearchText] = useState('')\n\n  const { t } = useTranslation()\n\n  const debouncedOnChange = useMemo(\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\n    [onChangeCallback],\n  )\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value)\n    debouncedOnChange(e)\n  }\n\n  return (\n    <Container toggled={toggled}>\n      <InputWrapper>\n        <StyledInput\n          value={searchText}\n          onChange={onChange}\n          placeholder={t(placeholder)}\n          onBlur={() => setToggled(false)}\n        />\n      </InputWrapper>\n    </Container>\n  )\n}\n\nexport default SearchInput\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from 'uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 8px;\n  background: #495576;\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: #495576;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: #495576;\n  border-radius: 8px;\n  height: 40px;\n  min-width: 136px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown + 1};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOptionIndex, setSelectedOptionIndex] = useState(0)\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (selectedIndex: number) => () => {\n    setSelectedOptionIndex(selectedIndex)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(options[selectedIndex])\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{options[selectedOptionIndex].label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option, index) =>\n            index !== selectedOptionIndex ? (\n              <ListItem onClick={onOptionClicked(index)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper aria-label={t('Hide or show expandable content')} role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? t('Hide') : t('Details')}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\n// Each part of the url represents a different side of the LP pair.\nimport { CHAIN_ID } from 'config'\nimport { getWethAddress } from './addressHelpers'\n\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\n  const wETHAddressString = getWethAddress()\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[CHAIN_ID] : null\n  const tokenAddressString: string = tokenAddress ? tokenAddress[CHAIN_ID] : null\n  const firstPart =\n    !quoteTokenAddressString || quoteTokenAddressString === wETHAddressString ? 'ETH' : quoteTokenAddressString\n  const secondPart = !tokenAddressString || tokenAddressString === wETHAddressString ? 'ETH' : tokenAddressString\n  return `${firstPart}/${secondPart}`\n}\n\nexport default getLiquidityUrlPathParts\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Text, Flex, LinkExternal, Skeleton } from 'uikit'\n\nexport interface ExpandableSectionProps {\n  bscScanAddress?: string\n  infoAddress?: string\n  removed?: boolean\n  totalValueFormatted?: string\n  lpLabel?: string\n  addLiquidityUrl?: string\n}\n\nconst Wrapper = styled.div`\n  margin-top: 24px;\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\n  bscScanAddress,\n  infoAddress,\n  removed,\n  totalValueFormatted,\n  lpLabel,\n  addLiquidityUrl,\n}) => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Total Liquidity')}:</Text>\n        {totalValueFormatted ? <Text>{totalValueFormatted}</Text> : <Skeleton width={75} height={25} />}\n      </Flex>\n      {!removed && (\n        <StyledLinkExternal href={addLiquidityUrl}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n      )}\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\n      <StyledLinkExternal href={infoAddress}>{t('See Info')}</StyledLinkExternal>\n    </Wrapper>\n  )\n}\n\nexport default DetailsSection\n","import React from 'react'\nimport { Tag, VerifiedIcon, BinanceIcon, RefreshIcon, AutoRenewIcon, TagProps } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst CoreTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Core')}\n    </Tag>\n  )\n}\n\nconst NoFeesTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('No Fees')}\n    </Tag>\n  )\n}\n\nconst BinanceTag: React.FC<TagProps> = (props) => {\n  return (\n    <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      Binance\n    </Tag>\n  )\n}\n\nconst DualTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"textSubtle\" outline {...props}>\n      {t('Dual')}\n    </Tag>\n  )\n}\n\nconst ManualPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n      {t('Manual')}\n    </Tag>\n  )\n}\n\nconst CompoundingPoolTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Auto')}\n    </Tag>\n  )\n}\n\nconst DepositLockDicountTag: React.FC<TagProps> = (props) => {\n  const { t } = useTranslation()\n  return (\n    <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n      {t('Deposit Lock Discount')}\n    </Tag>\n  )\n}\n\nexport { CoreTag, NoFeesTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag, DepositLockDicountTag }\n","import React from 'react'\n\nimport { TokenPairImage as UIKitTokenPairImage, TokenPairImageProps as UIKitTokenPairImageProps } from 'uikit'\n\nimport { Token } from 'config/constants/types'\n\ninterface TokenPairImageProps extends Omit<UIKitTokenPairImageProps, 'primarySrc' | 'secondarySrc'> {\n  primaryToken: Token\n  secondaryToken: Token\n}\n\nexport const getImageUrlFromToken = (token: Token) => {\n  const symbol = token.symbol.toLowerCase()\n  return `/images/tokens/${symbol}.svg`\n}\n\nconst TokenPairImage: React.FC<TokenPairImageProps> = ({ primaryToken, secondaryToken, ...props }) => {\n  return (\n    <UIKitTokenPairImage\n      primarySrc={getImageUrlFromToken(primaryToken)}\n      secondarySrc={getImageUrlFromToken(secondaryToken)}\n      {...props}\n    />\n  )\n}\n\nexport default TokenPairImage\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Tag, Flex, Heading } from 'uikit'\nimport { NoFeesTag } from 'components/Tags'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage, { getImageUrlFromToken } from 'components/TokenPairImage'\nimport { StyledPrimaryImage } from 'uikit/components/Image/styles'\nimport ImageWrapper from 'uikit/components/Image/Wrapper'\n\nexport interface ExpandableSectionProps {\n  lpLabel?: string\n  multiplier?: string\n  isFeesFreeFarm?: boolean\n  token: Token\n  quoteToken: Token\n  isTokenOnly?: boolean\n}\n\nconst Wrapper = styled(Flex)`\n  svg {\n    margin-right: 4px;\n  }\n`\n\nconst MultiplierTag = styled(Tag)`\n  margin-left: 4px;\n`\n\nconst logoSize = 64\n\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\n  lpLabel,\n  multiplier,\n  isFeesFreeFarm,\n  isTokenOnly,\n  token,\n  quoteToken,\n}) => {\n  return (\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\n        <Flex justifyContent=\"center\">\n          {isFeesFreeFarm && <NoFeesTag />}\n          <MultiplierTag variant=\"secondary\">{multiplier || 'TBA'}</MultiplierTag>\n        </Flex>\n      </Flex>\n      {isTokenOnly ? (\n        <ImageWrapper width={logoSize} height={logoSize}>\n          <StyledPrimaryImage variant=\"inverted\" src={getImageUrlFromToken(token)} width={logoSize} height={logoSize} />\n        </ImageWrapper>\n      ) : (\n        <TokenPairImage\n          variant=\"inverted\"\n          primaryToken={token}\n          secondaryToken={quoteToken}\n          width={logoSize}\n          height={logoSize}\n        />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default CardHeading\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\nexport default useApprove\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from 'uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n  onClick?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  onClick,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} onClick={onClick} {...props}>\n      {prefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {unit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { StandardMerkleTree } from '@openzeppelin/merkle-tree'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { useFarmFromPid, useWhitelist } from 'state/hooks'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const farm = useFarmFromPid(pid)\n  const { merkleTree } = useWhitelist()\n\n  const tokenDecimals = farm.isTokenOnly ? farm.token.decimals : 18\n\n  const handleStake = useCallback(\n    async (amount: string, lockPeriod = 0) => {\n      const whitelistMerkleTree = StandardMerkleTree.of(\n        merkleTree.values.map((item) => item.value),\n        merkleTree.leafEncoding,\n      )\n      let proof = []\n      try {\n        proof = whitelistMerkleTree.getProof([account])\n      } catch (e) {\n        console.error('Whitelist check error', e)\n      }\n      const txHash = await stake(\n        masterChefContract,\n        pid,\n        amount,\n        lockPeriod,\n        proof,\n        account,\n        BIG_TEN.pow(tokenDecimals),\n      )\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid, tokenDecimals, merkleTree],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const { merkleTree } = useWhitelist()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const whitelistMerkleTree = StandardMerkleTree.of(\n          merkleTree.values.map((item) => item.value),\n          merkleTree.leafEncoding,\n        )\n        let proof = []\n        try {\n          proof = whitelistMerkleTree.getProof([account])\n        } catch (e) {\n          console.error('Whitelist check error', e)\n        }\n        await stake(masterChefContract, 0, amount, 0, proof, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, merkleTree],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserStakedBalance, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useFarmFromPid } from 'state/hooks'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const farm = useFarmFromPid(pid)\n\n  const tokenDecimals = farm.isTokenOnly ? farm.token.decimals : 18\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account, BIG_TEN.pow(tokenDecimals))\n      console.info(txHash)\n    },\n    [account, masterChefContract, pid, tokenDecimals],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal, LinkExternal, Radio, Skeleton } from 'uikit'\nimport moment from 'moment'\n\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { useMasterchef } from 'hooks/useContract'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nconst DepositDiscountInfo = styled.div`\n  color: #fff;\n  margin-top: 20px;\n`\n\nconst DepositDiscountTitle = styled.div`\n  margin-bottom: 10px;\n`\n\nconst DepositDiscountItems = styled.div``\n\nconst DepositDiscountItem = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  width: 100%;\n  color: #fff;\n  margin-top: 10px;\n  margin-bottom: 10px;\n`\n\nconst DepositDiscountLabel = styled.div`\n  display: flex;\n  align-items: center;\n\n  span {\n    text-decoration: line-through;\n    margin-right: 2px;\n  }\n`\n\nconst lockPeriods = [\n  {\n    value: 0,\n    discount: 0,\n  },\n  {\n    value: 30,\n    discount: 0.15,\n  },\n  {\n    value: 60,\n    discount: 0.3,\n  },\n  {\n    value: 90,\n    discount: 0.45,\n  },\n]\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string, lockPeriod: number) => void\n  onDismiss?: () => void\n  tokenName?: string\n  addLiquidityUrl?: string\n  decimals?: number\n  withDepositLockDiscount?: boolean\n  depositFee: string\n  unlockTime: number\n  account: string\n  pid: number\n}\n\nconst DATE_FORMAT = 'MMMM Do YYYY, hh:mm:ss'\n\nconst useNewUnlockTime = ({ pid, account, amount, lockPeriod, decimals, enabled }) => {\n  const masterChef = useMasterchef()\n  const [loading, setLoading] = useState<boolean>(false)\n  const [newUnlockTime, setNewUnlockTime] = useState(0)\n\n  useEffect(() => {\n    const fetchNewUnlockTime = async () => {\n      try {\n        setLoading(true)\n\n        const amountWei = new BigNumber(amount || '0').times(BIG_TEN.pow(decimals)).toString()\n\n        const response = await masterChef.methods\n          .calculateNewUnlockTimeForUser(account, pid, lockPeriod * 60 * 60 * 24, amountWei)\n          .call()\n\n        setNewUnlockTime(Date.now() + response * 1000)\n      } catch (e) {\n        console.error(e)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    if (enabled) fetchNewUnlockTime()\n  }, [account, pid, amount, decimals, lockPeriod, masterChef, enabled])\n\n  return {\n    loading,\n    data: newUnlockTime,\n  }\n}\n\nconst UnlockTime = styled.div`\n  margin-top: 20px;\n`\n\nconst NewUnlockTime = ({ pid, account, amount, decimals, lockPeriod, withDepositLockDiscount }) => {\n  const { loading, data } = useNewUnlockTime({\n    pid,\n    account,\n    amount,\n    decimals,\n    lockPeriod,\n    enabled: withDepositLockDiscount,\n  })\n\n  if (loading) {\n    return (\n      <UnlockTime>\n        New unlock time: <Skeleton width=\"130\" />\n      </UnlockTime>\n    )\n  }\n\n  return <UnlockTime>New unlock time: {data > 0 ? moment(data, 'x').format(DATE_FORMAT) : '-'}</UnlockTime>\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  addLiquidityUrl,\n  decimals = 18,\n  withDepositLockDiscount,\n  depositFee,\n  unlockTime,\n  account,\n  pid,\n}) => {\n  const [val, setVal] = useState('')\n  const [lockPeriod, setLockPeriod] = useState(0)\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleLockPeriodChange = (evt) => {\n    const { value } = evt.target\n    setLockPeriod(parseInt(value))\n  }\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  const depositFeeNumber = parseFloat(depositFee)\n\n  return (\n    <Modal title={t('Stake tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        addLiquidityUrl={addLiquidityUrl}\n        inputTitle={t('Stake')}\n        decimals={decimals}\n      />\n      {withDepositLockDiscount ? (\n        <DepositDiscountInfo>\n          <DepositDiscountTitle>Lock your tokens and get a discount on deposit fee:</DepositDiscountTitle>\n          <DepositDiscountItems>\n            {lockPeriods.map((item) => (\n              <DepositDiscountItem key={item.value}>\n                <Radio\n                  scale=\"sm\"\n                  onChange={handleLockPeriodChange}\n                  value={item.value}\n                  checked={lockPeriod === item.value}\n                />\n                <DepositDiscountLabel>\n                  {item.value}d -{item.value > 0 ? <span> {depositFee}%</span> : null}{' '}\n                  {depositFeeNumber * (1 - item.discount)}%\n                </DepositDiscountLabel>\n              </DepositDiscountItem>\n            ))}\n          </DepositDiscountItems>\n          <UnlockTime>\n            Old unlock time: {unlockTime > Date.now() ? moment(unlockTime, 'x').format(DATE_FORMAT) : 'Unlocked'}\n          </UnlockTime>\n          <NewUnlockTime\n            decimals={decimals}\n            account={account}\n            pid={pid}\n            amount={val}\n            withDepositLockDiscount={withDepositLockDiscount}\n            lockPeriod={lockPeriod}\n          />\n        </DepositDiscountInfo>\n      ) : null}\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          width=\"100%\"\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val, lockPeriod)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\n        {t('Get %symbol%', { symbol: tokenName })}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport Countdown from 'react-countdown'\nimport styled from 'styled-components'\nimport { Button, Modal, Text } from 'uikit'\nimport ModalActions from 'components/ModalActions'\nimport ModalInput from 'components/ModalInput'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\nconst CountdownNumber = styled.span`\n  font-size: 30px;\n  font-weight: bold;\n`\n\nconst CountdownWrapper = styled.div`\n  color: #fff;\n  margin-top: 20px;\n  margin-bottom: 20px;\n`\n\nconst UnlockedText = () => <Text fontSize=\"30px\">Unlocked</Text>\n\nconst UnlockCountdown: React.FC<{ unlockTime: number }> = ({ unlockTime }) => {\n  const renderer = (args) => {\n    const { completed, formatted } = args\n    const { days, hours, minutes, seconds } = formatted\n    if (completed) {\n      // Render a completed state\n      return <UnlockedText />\n    }\n    // Render a countdown\n    return (\n      <div>\n        <div>\n          <CountdownNumber>{days}</CountdownNumber> days <CountdownNumber>{hours}</CountdownNumber> hours{' '}\n          <CountdownNumber>{minutes}</CountdownNumber> minutes <CountdownNumber>{seconds}</CountdownNumber> seconds\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <CountdownWrapper>\n      <Text mb=\"10px\">Unlocks in:</Text>\n      {unlockTime > 0 ? <Countdown date={unlockTime} renderer={renderer} /> : <UnlockedText />}\n    </CountdownWrapper>\n  )\n}\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  unlockTime: number\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', unlockTime }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { t } = useTranslation()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const valNumber = new BigNumber(val)\n  const fullBalanceNumber = new BigNumber(fullBalance)\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      if (e.currentTarget.validity.valid) {\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\n      }\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  const canWithdraw = unlockTime < Date.now()\n\n  const submitDisabled =\n    pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber) || !canWithdraw\n\n  return (\n    <Modal title={t('Unstake tokens')} onDismiss={onDismiss}>\n      <ModalInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n        inputTitle={t('Unstake')}\n      />\n\n      <UnlockCountdown unlockTime={unlockTime} />\n\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\n          {t('Cancel')}\n        </Button>\n        <Button\n          disabled={submitDisabled}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n          width=\"100%\"\n        >\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import React, { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'uikit'\nimport { useLocation } from 'react-router-dom'\nimport Balance from 'components/Balance'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useLpTokenPrice } from 'state/hooks'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  tokenName?: string\n  pid?: number\n  addLiquidityUrl?: string\n  depositFee?: string\n  withDepositLockDiscount?: boolean\n  unlockTime: number\n  hasDiscount: boolean\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\n  stakedBalance,\n  tokenBalance,\n  tokenName,\n  pid,\n  addLiquidityUrl,\n  depositFee,\n  withDepositLockDiscount,\n  unlockTime,\n  hasDiscount,\n}) => {\n  const { t } = useTranslation()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const location = useLocation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const lpPrice = useLpTokenPrice(tokenName)\n\n  const handleStake = async (amount: string) => {\n    await onStake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const _depositFee = hasDiscount ? (parseFloat(depositFee) / 2).toString() : depositFee\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      pid={pid}\n      account={account}\n      max={tokenBalance}\n      onConfirm={handleStake}\n      tokenName={tokenName}\n      addLiquidityUrl={addLiquidityUrl}\n      depositFee={_depositFee}\n      withDepositLockDiscount={withDepositLockDiscount}\n      unlockTime={unlockTime}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={handleUnstake} tokenName={tokenName} unlockTime={unlockTime} />,\n  )\n\n  const renderStakingButtons = () => {\n    return stakedBalance.eq(0) ? (\n      <Button\n        onClick={onPresentDeposit}\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n      >\n        {t('Stake')}\n      </Button>\n    ) : (\n      <IconButtonWrapper>\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n        <IconButton\n          variant=\"tertiary\"\n          onClick={onPresentDeposit}\n          disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n        >\n          <AddIcon color=\"primary\" width=\"14px\" />\n        </IconButton>\n      </IconButtonWrapper>\n    )\n  }\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\n        {stakedBalance.gt(0) && lpPrice.gt(0) && (\n          <Balance\n            fontSize=\"12px\"\n            color=\"textSubtle\"\n            decimals={2}\n            value={getBalanceNumber(lpPrice.times(stakedBalance))}\n            unit=\" USD\"\n            prefix=\"~\"\n          />\n        )}\n      </Flex>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\nimport useReferrer from './useReferrer'\n\nexport const useHarvest = (farmPid: number) => {\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const referrer = useReferrer()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, referrer, account)\n    return txHash\n  }, [account, farmPid, masterChefContract, referrer])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n  const referrer = useReferrer()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, referrer, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId, referrer])\n\n  return { onReward: handleHarvest }\n}\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { useWeb3React } from '@web3-react/core'\nimport { usePriceDIBUsdc } from 'state/hooks'\nimport Balance from 'components/Balance'\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const { account } = useWeb3React()\n  const { t } = useTranslation()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const dibPrice = usePriceDIBUsdc()\n  const dispatch = useAppDispatch()\n  const rawEarningsBalance = account ? getBalanceAmount(earnings) : BIG_ZERO\n  const displayBalance = rawEarningsBalance.toFixed(3, BigNumber.ROUND_DOWN)\n  const earningsBusd = rawEarningsBalance ? rawEarningsBalance.multipliedBy(dibPrice).toNumber() : 0\n\n  return (\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\" alignItems=\"flex-start\">\n        <Heading color={rawEarningsBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\n        {earningsBusd > 0 && (\n          <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n        )}\n      </Flex>\n      <Button\n        disabled={rawEarningsBalance.eq(0) || pendingTx}\n        onClick={async () => {\n          setPendingTx(true)\n          await onReward()\n          dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n          setPendingTx(false)\n        }}\n      >\n        {t('Harvest')}\n      </Button>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Text } from 'uikit'\nimport { getAddress } from 'utils/addressHelpers'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport { useApprove } from 'hooks/useApprove'\nimport UnlockButton from 'components/UnlockButton'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  account?: string\n  addLiquidityUrl?: string\n  hasDiscount: boolean\n}\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl, hasDiscount }) => {\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses, token, isTokenOnly } = farm\n  const {\n    allowance: allowanceAsString = '0',\n    tokenBalance: tokenBalanceAsString = '0',\n    stakedBalance: stakedBalanceAsString = '0',\n    earnings: earningsAsString = '0',\n    unlockTime = 0,\n  } = farm.userData || {}\n  const allowance = new BigNumber(allowanceAsString)\n  const tokenBalance = new BigNumber(tokenBalanceAsString).times(new BigNumber(10).pow(18 - farm.token.decimals))\n  const stakedBalance = new BigNumber(stakedBalanceAsString).times(new BigNumber(10).pow(18 - farm.token.decimals))\n  const earnings = new BigNumber(earningsAsString)\n  const lpAddress = getAddress(isTokenOnly ? token.address : lpAddresses)\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const dispatch = useAppDispatch()\n\n  const lpContract = useERC20(lpAddress)\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  const renderApprovalOrStakeButton = () => {\n    if (!farm.pid && farm.pid !== 0) {\n      return (\n        <Button mt=\"8px\" width=\"100%\" disabled>\n          TBD\n        </Button>\n      )\n    }\n    return isApproved ? (\n      <StakeAction\n        stakedBalance={stakedBalance}\n        tokenBalance={tokenBalance}\n        tokenName={farm.lpSymbol}\n        pid={pid}\n        addLiquidityUrl={addLiquidityUrl}\n        unlockTime={unlockTime}\n        hasDiscount={hasDiscount}\n      />\n    ) : (\n      <Button mt=\"8px\" width=\"100%\" disabled={requestedApproval} onClick={handleApprove}>\n        {t('Approve Contract')}\n      </Button>\n    )\n  }\n\n  return (\n    <Action>\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          DIB\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </Flex>\n      <HarvestAction earnings={earnings} pid={pid} />\n      <Flex>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          {farm.lpSymbol}\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Staked')}\n        </Text>\n      </Flex>\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\n    </Action>\n  )\n}\n\nexport default CardActions\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n  isFarm?: boolean\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 12px;\n`\n\nconst GridItem = styled.div``\n\nconst GridHeaderItem = styled.div`\n  max-width: 180px;\n`\n\nconst BulletList = styled.ul`\n  li::marker {\n    font-size: 12px;\n    color: ${({ theme }) => theme.colors.textSubtle};\n  }\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'DIB',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n  isFarm = false,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      {isFarm && (\n        <Flex mb=\"24px\" justifyContent=\"space-between\">\n          <Text small color=\"textSubtle\">\n            {t('APR (incl. LP rewards)')}\n          </Text>\n          <Text small>{apr.toFixed(roundingDecimals)}%</Text>\n        </Flex>\n      )}\n      <Grid>\n        <GridHeaderItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('Timeframe')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text\n            textAlign=\"right\"\n            fontSize=\"12px\"\n            bold\n            color=\"textSubtle\"\n            textTransform=\"uppercase\"\n            mr=\"12px\"\n            ml=\"12px\"\n            mb=\"12px\"\n          >\n            {t('ROI')}\n          </Text>\n        </GridHeaderItem>\n        <GridHeaderItem>\n          <Text textAlign=\"right\" fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"12px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridHeaderItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem style={{ maxWidth: '180px' }}>\n          <Text>{t('365d (APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\" mr=\"12px\" ml=\"12px\">\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text textAlign=\"right\">{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Flex justifyContent=\"center\">\n        <Box mb=\"28px\" maxWidth=\"280px\" p=\"4px\">\n          <BulletList>\n            <li>\n              <Text ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Calculated based on current rates.')}\n              </Text>\n            </li>\n            <li>\n              <Text ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t('Compounding %freq%x daily.', { freq: compoundFrequency.toLocaleString() })}\n              </Text>\n            </li>\n            {isFarm && (\n              <li>\n                <Text ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('LP rewards: 0.17% trading fees, distributed proportionally among LP token holders.')}\n                </Text>\n              </li>\n            )}\n            <li>\n              <Text ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                {t(\n                  'All figures are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n                )}\n              </Text>\n            </li>\n            {performanceFee > 0 && (\n              <li>\n                <Text mt=\"14px\" ml=\"-8px\" fontSize=\"12px\" textAlign=\"center\" color=\"textSubtle\" display=\"inline\">\n                  {t('All estimated rates take into account this pool’s %fee%% performance fee', {\n                    fee: performanceFee,\n                  })}\n                </Text>\n              </li>\n            )}\n          </BulletList>\n        </Box>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport { IconButton, useModal, CalculateIcon } from 'uikit'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { useTranslation } from 'contexts/Localization'\n\nexport interface ApyButtonProps {\n  lpLabel?: string\n  dibPrice?: BigNumber\n  apr?: number\n  addLiquidityUrl?: string\n}\n\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, dibPrice, apr, addLiquidityUrl }) => {\n  const { t } = useTranslation()\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      linkLabel={t('Get %symbol%', { symbol: lpLabel })}\n      tokenPrice={dibPrice.toNumber()}\n      apr={apr}\n      linkHref={addLiquidityUrl}\n      isFarm\n    />,\n  )\n\n  const handleClickButton = (event): void => {\n    event.stopPropagation()\n    onPresentApyModal()\n  }\n\n  return (\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\n      <CalculateIcon width=\"18px\" />\n    </IconButton>\n  )\n}\n\nexport default ApyButton\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst DepositFeeWrapper = styled.div`\n  display: inline-flex;\n  align-items: center;\n  gap: 5px;\n`\n\nconst DepositFeeDiscounted = styled.div`\n  text-decoration: line-through;\n`\n\nconst DepositFee = ({ depositFee, hasDiscount }): any => {\n  if (!depositFee) return 'TBA'\n  const value = `${depositFee}%`\n  const newDepositFee = hasDiscount ? depositFee / 2 : parseFloat(depositFee)\n  if (newDepositFee !== parseFloat(depositFee)) {\n    return (\n      <DepositFeeWrapper>\n        <DepositFeeDiscounted>{value}</DepositFeeDiscounted> {depositFee / 2}%\n      </DepositFeeWrapper>\n    )\n  }\n\n  return value\n}\n\nexport default DepositFee\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled, { keyframes } from 'styled-components'\nimport { Flex, Text, Skeleton } from 'uikit'\nimport { Farm } from 'state/types'\nimport { getScanAddressUrl } from 'utils/scan'\nimport { useTranslation } from 'contexts/Localization'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport { BASE_ADD_LIQUIDITY_URL, BASE_SWAP_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getAddress } from 'utils/addressHelpers'\nimport DetailsSection from './DetailsSection'\nimport CardHeading from './CardHeading'\nimport CardActionsContainer from './CardActionsContainer'\nimport ApyButton from './ApyButton'\nimport DepositFee from '../DepositFee/DepositFee'\n\nexport interface FarmWithStakedValue extends Farm {\n  apr?: number\n  liquidity?: BigNumber\n}\n\nconst AccentGradient = keyframes`  \n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\nconst StyledCardAccent = styled.div`\n  background: ${({ theme }) => `linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary})`};\n  background-size: 400% 400%;\n  animation: ${AccentGradient} 2s linear infinite;\n  border-radius: 2px;\n  position: absolute;\n  top: -1px;\n  right: -1px;\n  bottom: -3px;\n  left: -1px;\n  z-index: -1;\n`\n\nconst FCard = styled.div<{ isPromotedFarm: boolean }>`\n  align-self: baseline;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 2px;\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 15px;\n  position: relative;\n  text-align: center;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.cardBorder};\n  height: 1px;\n  margin: 28px auto;\n  width: 100%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\n\ninterface FarmCardProps {\n  farm: FarmWithStakedValue\n  removed: boolean\n  dibPrice?: BigNumber\n  account?: string\n  // tokenOnly?: boolean\n  hasDiscount: boolean\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, dibPrice, account, hasDiscount }) => {\n  const { t } = useTranslation()\n\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n\n  const totalValueFormatted =\n    farm.liquidity && farm.liquidity.gt(0)\n      ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n      : ''\n\n  const lpLabel = farm.lpSymbol\n  const earnLabel = farm.dual ? farm.dual.earnLabel : t('DIB')\n\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\n\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: farm.quoteToken.address,\n    tokenAddress: farm.token.address,\n  })\n  const address = farm.isTokenOnly ? getAddress(farm.token.address) : getAddress(farm.lpAddresses)\n  const addLiquidityUrl = farm.isTokenOnly\n    ? `${BASE_SWAP_URL}?outputCurrency=${address}`\n    : `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n  const isPromotedFarm = farm.token.symbol === 'DIB'\n  const isFeesFreeFarm = parseFloat(farm.depositFee) === 0\n  const { depositFee } = farm\n\n  return (\n    <FCard isPromotedFarm={isPromotedFarm}>\n      {isPromotedFarm && <StyledCardAccent />}\n      <CardHeading\n        lpLabel={lpLabel}\n        multiplier={farm.multiplier}\n        isFeesFreeFarm={isFeesFreeFarm}\n        token={farm.token}\n        quoteToken={farm.quoteToken}\n        isTokenOnly={farm.isTokenOnly}\n      />\n      {!removed && (\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\n          <Text>{t('APR')}:</Text>\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\n            {farm.apr ? (\n              <>\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} dibPrice={dibPrice} apr={farm.apr} />\n                {farmAPR}%\n              </>\n            ) : (\n              <Skeleton height={24} width={80} />\n            )}\n          </Text>\n        </Flex>\n      )}\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Earn')}:</Text>\n        <Text bold>{earnLabel}</Text>\n      </Flex>\n      <Flex justifyContent=\"space-between\">\n        <Text>{t('Deposit fee')}:</Text>\n        <Text bold>\n          <DepositFee depositFee={depositFee} hasDiscount={hasDiscount} />\n        </Text>\n      </Flex>\n      <CardActionsContainer farm={farm} account={account} hasDiscount={hasDiscount} addLiquidityUrl={addLiquidityUrl} />\n      <Divider />\n      <ExpandableSectionButton\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\n        expanded={showExpandableSection}\n      />\n      <ExpandingWrapper expanded={showExpandableSection}>\n        <DetailsSection\n          removed={removed}\n          bscScanAddress={getScanAddressUrl(address)}\n          totalValueFormatted={totalValueFormatted}\n          lpLabel={lpLabel}\n          addLiquidityUrl={addLiquidityUrl}\n        />\n      </ExpandingWrapper>\n    </FCard>\n  )\n}\n\nexport default FarmCard\n","import { useState, useEffect } from 'react'\n\n/**\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\n * This hook \"shows\" element immediately when the isMounted is true\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\n * delayTime should be the same as animation time in most cases.\n */\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\n  const [shouldRender, setShouldRender] = useState(false)\n\n  useEffect(() => {\n    let timeoutId: ReturnType<typeof setTimeout>\n    if (isMounted && !shouldRender) {\n      setShouldRender(true)\n    } else if (!isMounted && shouldRender) {\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\n    }\n    return () => clearTimeout(timeoutId)\n  }, [isMounted, delayTime, shouldRender])\n  return shouldRender\n}\n\nexport default useDelayedUnmount\n","/* eslint-disable react/no-unused-prop-types */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\nimport { Address } from 'config/constants/types'\nimport BigNumber from 'bignumber.js'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { Skeleton } from 'uikit'\n\nexport interface AprProps {\n  value: string\n  multiplier: string\n  lpLabel: string\n  tokenAddress?: Address\n  quoteTokenAddress?: Address\n  dibPrice: BigNumber\n  originalValue: number\n  hideButton?: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n  color: ${({ theme }) => theme.colors.text};\n\n  button {\n    width: 20px;\n    height: 20px;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.textSubtle};\n      }\n    }\n  }\n`\n\nconst AprWrapper = styled.div`\n  min-width: 60px;\n  text-align: left;\n`\n\nconst Apr: React.FC<AprProps> = ({\n  value,\n  lpLabel,\n  tokenAddress,\n  quoteTokenAddress,\n  dibPrice,\n  originalValue,\n  hideButton = false,\n}) => {\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  return originalValue !== 0 ? (\n    <Container>\n      {originalValue ? (\n        <>\n          <AprWrapper>{value}%</AprWrapper>\n          {!hideButton && (\n            <ApyButton lpLabel={lpLabel} dibPrice={dibPrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\n          )}\n        </>\n      ) : (\n        <AprWrapper>\n          <Skeleton width={60} />\n        </AprWrapper>\n      )}\n    </Container>\n  ) : (\n    <Container>\n      <AprWrapper>{originalValue}%</AprWrapper>\n    </Container>\n  )\n}\n\nexport default Apr\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useFarmUser } from 'state/hooks'\nimport { useTranslation } from 'contexts/Localization'\nimport { Text } from 'uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Token } from 'config/constants/types'\nimport TokenPairImage, { getImageUrlFromToken } from 'components/TokenPairImage'\nimport { StyledPrimaryImage } from 'uikit/components/Image/styles'\nimport DepositFee from '../DepositFee/DepositFee'\n\nexport interface FarmProps {\n  label: string\n  pid: number\n  token: Token\n  quoteToken: Token\n  isTokenOnly?: boolean\n  depositFee: string\n  hasDiscount: boolean\n}\n\nconst Arrow = () => (\n  <svg\n    className=\"tokens-arrow\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 16 16\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M12 8.5L8.5 5V12L12 8.5Z\" fill=\"white\" />\n    <path d=\"M4 8.5H11\" stroke=\"white\" />\n  </svg>\n)\n\nconst Container = styled.div`\n  padding-left: 16px;\n  display: flex;\n  align-items: center;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 32px;\n  }\n`\n\nconst TokensWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n  align-items: center;\n  color: #fff;\n  margin-right: 10px;\n\n  flex-direction: column;\n\n  @media (max-width: 767px) {\n    .tokens-arrow {\n      transform: rotate(90deg);\n    }\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n  }\n`\n\nconst TokenWrapper = styled.div<{ isPair?: boolean }>`\n  width: ${({ isPair }) => (isPair ? '36px' : '24px')};\n  height: 24px;\n  position: relative;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: ${({ isPair }) => (isPair ? '60px' : '40px')};\n    height: 40px;\n  }\n`\n\nconst Farm: React.FunctionComponent<FarmProps> = ({\n  isTokenOnly,\n  token,\n  quoteToken,\n  label,\n  pid,\n  depositFee,\n  hasDiscount,\n}) => {\n  const { stakedBalance } = useFarmUser(pid)\n  const { t } = useTranslation()\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\n\n  const handleRenderFarming = (): JSX.Element => {\n    if (rawStakedBalance) {\n      return (\n        <Text color=\"secondary\" fontSize=\"12px\" bold textTransform=\"uppercase\">\n          {t('Farming')}\n        </Text>\n      )\n    }\n\n    return null\n  }\n\n  const imgSize = 40\n\n  return (\n    <Container>\n      <TokensWrapper>\n        <TokenWrapper isPair={!isTokenOnly}>\n          {isTokenOnly ? (\n            <StyledPrimaryImage variant=\"inverted\" src={getImageUrlFromToken(token)} width={imgSize} height={imgSize} />\n          ) : (\n            <TokenPairImage\n              variant=\"inverted\"\n              primaryToken={token}\n              secondaryToken={quoteToken}\n              width={imgSize}\n              height={imgSize}\n            />\n          )}\n        </TokenWrapper>\n        <Arrow />\n        <TokenWrapper>\n          <StyledPrimaryImage variant=\"inverted\" src=\"/images/tokens/dib.svg\" width={imgSize} height={imgSize} />\n        </TokenWrapper>\n      </TokensWrapper>\n      <div>\n        {handleRenderFarming()}\n        <Text bold>{label}</Text>\n        <Text fontSize=\"12px\">\n          Deposit fee: <DepositFee depositFee={depositFee} hasDiscount={hasDiscount} />\n        </Text>\n      </div>\n    </Container>\n  )\n}\n\nexport default Farm\n","/* eslint-disable react/no-unused-prop-types */\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { Skeleton } from 'uikit'\n\nexport interface EarnedProps {\n  earnings: number\n  pid: number\n}\n\ninterface EarnedPropsWithLoading extends EarnedProps {\n  userDataReady: boolean\n}\n\nconst Amount = styled.span<{ earned: number }>`\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\n  display: flex;\n  align-items: center;\n`\n\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\n  if (userDataReady) {\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\n  }\n  return (\n    <Amount earned={0}>\n      <Skeleton width={60} />\n    </Amount>\n  )\n}\n\nexport default Earned\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon } from 'uikit'\n\ninterface DetailsProps {\n  actionPanelToggled: boolean\n}\n\nconst Container = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: flex-end;\n  padding-right: 8px;\n  color: ${({ theme }) => theme.colors.primary};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 0px;\n  }\n`\n\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\n  height: 20px;\n`\n\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\n  return (\n    <Container>\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\n    </Container>\n  )\n}\n\nexport default Details\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Skeleton, useTooltip } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface MultiplierProps {\n  multiplier: string\n}\n\nconst MultiplierWrapper = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  width: 36px;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\n  const { t } = useTranslation()\n  const tooltipContent = (\n    <div>\n      {t('The multiplier represents the amount of DIB rewards each farm gets.')}\n      <br />\n      <br />\n      {t('For example, if a 1x farm was getting 1 DIB per block, a 40x farm would be getting 40 DIB per block.')}\n    </div>\n  )\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\n    placement: 'top-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <Container>\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Multiplier\n","import React from 'react'\nimport styled from 'styled-components'\nimport { HelpIcon, Text, Skeleton, useTooltip } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport BigNumber from 'bignumber.js'\n\nconst ReferenceElement = styled.div`\n  display: inline-block;\n`\n\nexport interface LiquidityProps {\n  liquidity: BigNumber\n}\n\nconst LiquidityWrapper = styled.div`\n  min-width: 110px;\n  font-weight: 600;\n  text-align: right;\n  margin-right: 14px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    text-align: left;\n    margin-right: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\n  const displayLiquidity =\n    liquidity && liquidity.gt(0) ? (\n      `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\n    ) : (\n      <Skeleton width={60} />\n    )\n  const { t } = useTranslation()\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Total value of the funds in this farm’s liquidity pool'),\n    { placement: 'top-end', tooltipOffset: [20, 10] },\n  )\n\n  return (\n    <Container>\n      <LiquidityWrapper>\n        <Text>{displayLiquidity}</Text>\n      </LiquidityWrapper>\n      <ReferenceElement ref={targetRef}>\n        <HelpIcon color=\"textSubtle\" />\n      </ReferenceElement>\n      {tooltipVisible && tooltip}\n    </Container>\n  )\n}\n\nexport default Liquidity\n","import styled from 'styled-components'\n\nexport const ActionContainer = styled.div`\n  padding: 16px;\n  border-radius: 2px;\n  flex-grow: 1;\n  flex-basis: 0;\n  margin-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-left: 12px;\n    margin-right: 12px;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    margin-left: 48px;\n    margin-right: 0;\n    margin-bottom: 0;\n    max-height: 100px;\n  }\n`\n\nexport const ActionTitles = styled.div`\n  display: flex;\n`\n\nexport const ActionContent = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`\nexport const Earned = styled.div`\n  font-weight: 600;\n  font-size: 16px;\n  color: ${({ theme }) => theme.colors.text};\n`\n","import React, { useState } from 'react'\nimport { Button, Skeleton, Text } from 'uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport Balance from 'components/Balance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { usePriceDIBUsdc } from 'state/hooks'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { useTranslation } from 'contexts/Localization'\n\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles'\n\ninterface HarvestActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n}\n\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\n  const earningsBigNumber = new BigNumber(userData.earnings)\n  const dibPrice = usePriceDIBUsdc()\n  let earnings = BIG_ZERO\n  let earningsBusd = 0\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\n\n  // If user didn't connect wallet default balance will be 0\n  if (!earningsBigNumber.isZero()) {\n    earnings = getBalanceAmount(earningsBigNumber)\n    earningsBusd = earnings.multipliedBy(dibPrice).toNumber()\n    displayBalance = earnings.toFixed(3, BigNumber.ROUND_DOWN)\n  }\n\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n          DIB\n        </Text>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Earned')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <div>\n          <Earned>{displayBalance}</Earned>\n          {earningsBusd > 0 && (\n            <Balance fontSize=\"12px\" color=\"textSubtle\" decimals={2} value={earningsBusd} unit=\" USD\" prefix=\"~\" />\n          )}\n        </div>\n        <Button\n          disabled={earnings.eq(0) || pendingTx || !userDataReady}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n            setPendingTx(false)\n          }}\n          ml=\"4px\"\n        >\n          {t('Harvest')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default HarvestAction\n","import React, { useState, useCallback } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton, Text } from 'uikit'\nimport { useLocation } from 'react-router-dom'\nimport { BigNumber } from 'bignumber.js'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\nimport { useWeb3React } from '@web3-react/core'\nimport { useFarmUser, useLpTokenPrice } from 'state/hooks'\nimport { fetchFarmUserDataAsync } from 'state/farms'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useTranslation } from 'contexts/Localization'\nimport { useApprove } from 'hooks/useApprove'\nimport { useERC20 } from 'hooks/useContract'\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getBalanceAmount, getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getAddress } from 'utils/addressHelpers'\nimport DepositModal from '../../DepositModal'\nimport WithdrawModal from '../../WithdrawModal'\nimport { ActionContainer, ActionTitles, ActionContent, Earned } from './styles'\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n`\n\ninterface StackedActionProps extends FarmWithStakedValue {\n  userDataReady: boolean\n  hasDiscount?: boolean\n}\n\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\n  isTokenOnly,\n  pid,\n  lpSymbol,\n  lpAddresses,\n  quoteToken,\n  token,\n  userDataReady,\n  withDepositLockDiscount,\n  depositFee,\n  userData,\n  hasDiscount,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { allowance, tokenBalance: tokenBalanceAsString, stakedBalance: stakedBalanceAsString } = useFarmUser(pid)\n  const decimals = isTokenOnly ? token.decimals : 18\n  const tokenBalance = new BigNumber(tokenBalanceAsString).times(new BigNumber(10).pow(18 - decimals))\n  const stakedBalance = new BigNumber(stakedBalanceAsString).times(new BigNumber(10).pow(18 - decimals))\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n  const location = useLocation()\n  const lpPrice = useLpTokenPrice(lpSymbol)\n\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n\n  const lpAddress = getAddress(isTokenOnly ? token.address : lpAddresses)\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\n\n  const handleStake = async (amount: string, daysToLock: number) => {\n    await onStake(amount, daysToLock * 60 * 60 * 24)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const handleUnstake = async (amount: string) => {\n    await onUnstake(amount)\n    dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n  }\n\n  const displayBalance = useCallback(() => {\n    const stakedBalanceBigNumber = getBalanceAmount(stakedBalance)\n    if (stakedBalanceBigNumber.gt(0) && stakedBalanceBigNumber.lt(0.0001)) {\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\n    }\n    return stakedBalanceBigNumber.toFixed(3, BigNumber.ROUND_DOWN)\n  }, [stakedBalance])\n\n  const _depositFee = hasDiscount ? (parseFloat(depositFee) / 2).toString() : depositFee\n\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      pid={pid}\n      account={account}\n      max={tokenBalance}\n      onConfirm={handleStake}\n      tokenName={lpSymbol}\n      addLiquidityUrl={addLiquidityUrl}\n      withDepositLockDiscount={withDepositLockDiscount}\n      depositFee={_depositFee}\n      unlockTime={userData.unlockTime}\n    />,\n  )\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n      max={stakedBalance}\n      onConfirm={handleUnstake}\n      tokenName={lpSymbol}\n      unlockTime={userData.unlockTime}\n    />,\n  )\n  const lpContract = useERC20(lpAddress)\n  const dispatch = useAppDispatch()\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      dispatch(fetchFarmUserDataAsync({ account, pids: [pid] }))\n\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, dispatch, account, pid])\n\n  if (!account) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <UnlockButton width=\"100%\" />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (isApproved) {\n    if (stakedBalance.gt(0)) {\n      return (\n        <ActionContainer>\n          <ActionTitles>\n            <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"4px\">\n              {lpSymbol}\n            </Text>\n            <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n              {t('Staked')}\n            </Text>\n          </ActionTitles>\n          <ActionContent>\n            <div>\n              <Earned>{displayBalance()}</Earned>\n              {stakedBalance.gt(0) && lpPrice.gt(0) && (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={getBalanceNumber(lpPrice.times(stakedBalance))}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              )}\n            </div>\n            <IconButtonWrapper>\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\n                <MinusIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n              <IconButton\n                variant=\"secondary\"\n                onClick={onPresentDeposit}\n                disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n              >\n                <AddIcon color=\"primary\" width=\"14px\" />\n              </IconButton>\n            </IconButtonWrapper>\n          </ActionContent>\n        </ActionContainer>\n      )\n    }\n\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\" pr=\"4px\">\n            {t('Stake').toUpperCase()}\n          </Text>\n          <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\">\n            {lpSymbol}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Button\n            width=\"100%\"\n            onClick={onPresentDeposit}\n            variant=\"secondary\"\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\n          >\n            {t('Stake')}\n          </Button>\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  if (!userDataReady) {\n    return (\n      <ActionContainer>\n        <ActionTitles>\n          <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n            {t('Start Farming')}\n          </Text>\n        </ActionTitles>\n        <ActionContent>\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\n        </ActionContent>\n      </ActionContainer>\n    )\n  }\n\n  return (\n    <ActionContainer>\n      <ActionTitles>\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\n          {t('Enable Farm')}\n        </Text>\n      </ActionTitles>\n      <ActionContent>\n        <Button width=\"100%\" disabled={requestedApproval} onClick={handleApprove} variant=\"secondary\">\n          {t('Enable')}\n        </Button>\n      </ActionContent>\n    </ActionContainer>\n  )\n}\n\nexport default Staked\n","import React, { useMemo } from 'react'\nimport styled, { keyframes, css } from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { LinkExternal, Text } from 'uikit'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\nimport { getScanAddressUrl } from 'utils/scan'\nimport { DepositLockDicountTag, NoFeesTag } from 'components/Tags'\nimport { BASE_ADD_LIQUIDITY_URL, BASE_SWAP_URL, CHAIN_ID } from 'config'\nimport { getAddress } from 'utils/addressHelpers'\n\nimport HarvestAction from './HarvestAction'\nimport StakedAction from './StakedAction'\nimport Apr, { AprProps } from '../Apr'\nimport Multiplier, { MultiplierProps } from '../Multiplier'\nimport Liquidity, { LiquidityProps } from '../Liquidity'\n\nexport interface ActionPanelProps {\n  apr: AprProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  userDataReady: boolean\n  expanded: boolean\n  tokenOnly?: boolean\n  hasDiscount: boolean\n}\n\nconst expandAnimation = keyframes`\n  from {\n    max-height: 0px;\n  }\n  to {\n    max-height: 500px;\n  }\n`\n\nconst collapseAnimation = keyframes`\n  from {\n    max-height: 500px;\n  }\n  to {\n    max-height: 0px;\n  }\n`\n\nconst Container = styled.div<{ expanded }>`\n  animation: ${({ expanded }) =>\n    expanded\n      ? css`\n          ${expandAnimation} 300ms linear forwards\n        `\n      : css`\n          ${collapseAnimation} 300ms linear forwards\n        `};\n  overflow: hidden;\n  background: #161b28;\n  border-width: 0px 1px 1px 1px;\n  border-style: solid;\n  border-color: #2c3550;\n  display: flex;\n  width: 100%;\n  flex-direction: column-reverse;\n  padding: 24px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    flex-direction: row;\n    padding: 16px 32px;\n  }\n`\n\nconst StyledLinkExternal = styled(LinkExternal)`\n  font-weight: 400;\n`\n\nconst StakeContainer = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  align-items: center;\n  display: flex;\n  justify-content: space-between;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n  }\n`\n\nconst TagsContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 16px;\n  }\n\n  > div {\n    height: 24px;\n    padding: 0 6px;\n    font-size: 14px;\n    margin-right: 4px;\n    border-radius: 5px;\n\n    svg {\n      width: 14px;\n    }\n  }\n`\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    align-items: center;\n    flex-grow: 1;\n    flex-basis: 0;\n  }\n`\n\nconst InfoContainer = styled.div`\n  min-width: 200px;\n`\n\nconst ValueContainer = styled.div`\n  display: block;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: none;\n  }\n`\n\nconst ValueWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 4px 0px;\n`\n\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\n  details,\n  apr,\n  multiplier,\n  liquidity,\n  userDataReady,\n  expanded,\n  hasDiscount,\n}) => {\n  const farm = details\n\n  const { t } = useTranslation()\n  const tokenOnly = farm.isTokenOnly\n  const isActive = farm.multiplier !== '0X'\n  const { quoteToken, token } = farm\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANARB', '')\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\n    quoteTokenAddress: quoteToken.address,\n    tokenAddress: token.address,\n  })\n  const lpAddress = farm.lpAddresses[CHAIN_ID]\n  const scan = useMemo(\n    () => getScanAddressUrl(tokenOnly ? farm.token.address[CHAIN_ID] : lpAddress),\n    [tokenOnly, lpAddress, farm.token.address],\n  )\n  const noFees = parseFloat(farm.depositFee) === 0\n  const link = useMemo(\n    () =>\n      tokenOnly\n        ? `${BASE_SWAP_URL}?outputCurrency=${getAddress(farm.token.address)}`\n        : `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`,\n    [tokenOnly, liquidityUrlPathParts, farm.token.address],\n  )\n  return (\n    <Container expanded={expanded}>\n      <InfoContainer>\n        {isActive && (\n          <StakeContainer>\n            <StyledLinkExternal href={link}>{t('Get %symbol%', { symbol: lpLabel })}</StyledLinkExternal>\n          </StakeContainer>\n        )}\n        <StyledLinkExternal href={scan}>{t('View Contract')}</StyledLinkExternal>\n        <TagsContainer>\n          {noFees && <NoFeesTag />}\n          {farm.withDepositLockDiscount && <DepositLockDicountTag />}\n        </TagsContainer>\n      </InfoContainer>\n      <ValueContainer>\n        <ValueWrapper>\n          <Text>{t('APR')}</Text>\n          <Apr {...apr} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Multiplier')}</Text>\n          <Multiplier {...multiplier} />\n        </ValueWrapper>\n        <ValueWrapper>\n          <Text>{t('Liquidity')}</Text>\n          <Liquidity {...liquidity} />\n        </ValueWrapper>\n      </ValueContainer>\n      <ActionContainer>\n        <HarvestAction {...farm} userDataReady={userDataReady} />\n        <StakedAction {...farm} hasDiscount={hasDiscount} userDataReady={userDataReady} />\n      </ActionContainer>\n    </Container>\n  )\n}\n\nexport default ActionPanel\n","export type TableProps = {\n  data?: TableDataTypes[]\n  selectedFilters?: string\n  sortBy?: string\n  sortDir?: string\n  onSort?: (value: string) => void\n}\n\nexport type ColumnsDefTypes = {\n  id: number\n  label: string\n  name: string\n  sortable: boolean\n}\n\nexport type ScrollBarProps = {\n  ref: string\n  width: number\n}\n\nexport type TableDataTypes = {\n  POOL: string\n  APR: string\n  EARNED: string\n  STAKED: string\n  DETAILS: string\n  LINKS: string\n}\n\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 3,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\n  {\n    id: 1,\n    name: 'farm',\n    sortable: true,\n    label: '',\n  },\n  {\n    id: 2,\n    name: 'apr',\n    sortable: true,\n    label: 'APR',\n  },\n  {\n    id: 3,\n    name: 'liquidity',\n    sortable: true,\n    label: 'Liquidity',\n  },\n  {\n    id: 4,\n    name: 'earned',\n    sortable: true,\n    label: 'Earned',\n  },\n  {\n    id: 5,\n    name: 'multiplier',\n    sortable: true,\n    label: 'Multiplier',\n  },\n  {\n    id: 6,\n    name: 'details',\n    sortable: true,\n    label: '',\n  },\n]\n\nexport enum ViewMode {\n  'TABLE' = 'TABLE',\n  'CARD' = 'CARD',\n}\n","/* eslint-disable react/destructuring-assignment */\n\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\nimport { useMatchBreakpoints } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\nimport { useFarmUser } from 'state/hooks'\n\nimport Apr, { AprProps } from './Apr'\nimport Farm, { FarmProps } from './Farm'\nimport Earned, { EarnedProps } from './Earned'\nimport Details from './Details'\nimport Multiplier, { MultiplierProps } from './Multiplier'\nimport Liquidity, { LiquidityProps } from './Liquidity'\nimport ActionPanel from './Actions/ActionPanel'\nimport CellLayout from './CellLayout'\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\n\nexport interface RowProps {\n  apr: AprProps\n  farm: FarmProps\n  earned: EarnedProps\n  multiplier: MultiplierProps\n  liquidity: LiquidityProps\n  details: FarmWithStakedValue\n  tokenOnly?: boolean\n}\n\ninterface RowPropsWithLoading extends RowProps {\n  userDataReady: boolean\n}\n\nconst cells = {\n  apr: Apr,\n  farm: Farm,\n  earned: Earned,\n  details: Details,\n  multiplier: Multiplier,\n  liquidity: Liquidity,\n}\n\nconst CellInner = styled.div`\n  padding: 24px 0px;\n  display: flex;\n  width: 100%;\n  align-items: center;\n  padding-right: 8px;\n\n  ${({ theme }) => theme.mediaQueries.xl} {\n    padding-right: 32px;\n  }\n`\n\nconst StyledTr = styled.tr`\n  cursor: pointer;\n  background: #1b2131;\n  border-bottom: 1px solid #2c3550;\n\n  &:first-of-type {\n    border-top-left-radius: 10px;\n    border-top-right-radius: 10px;\n  }\n\n  &:nth-child(odd) {\n    background: #1f2638;\n  }\n`\n\nconst EarnedMobileCell = styled.td`\n  padding: 16px 0 24px 16px;\n`\n\nconst AprMobileCell = styled.td`\n  padding-top: 16px;\n  padding-bottom: 24px;\n`\n\nconst FarmMobileCell = styled.td`\n  padding-top: 24px;\n`\n\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\n  const { details, userDataReady } = props\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\n  const { t } = useTranslation()\n\n  const toggleActionPanel = () => {\n    setActionPanelExpanded(!actionPanelExpanded)\n  }\n\n  useEffect(() => {\n    setActionPanelExpanded(hasStakedAmount)\n  }, [hasStakedAmount])\n\n  const { isXl, isXs } = useMatchBreakpoints()\n\n  const isMobile = !isXl\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\n  const columnNames = tableSchema.map((column) => column.name)\n\n  const handleRenderRow = () => {\n    if (!isXs) {\n      return (\n        <StyledTr onClick={toggleActionPanel}>\n          {Object.keys(props).map((key) => {\n            const columnIndex = columnNames.indexOf(key)\n            if (columnIndex === -1) {\n              return null\n            }\n\n            switch (key) {\n              case 'details':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout>\n                        <Details actionPanelToggled={actionPanelExpanded} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              case 'apr':\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t('APR')}>\n                        <Apr {...props.apr} hideButton={isMobile} />\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n              default:\n                return (\n                  <td key={key}>\n                    <CellInner>\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\n                      </CellLayout>\n                    </CellInner>\n                  </td>\n                )\n            }\n          })}\n        </StyledTr>\n      )\n    }\n\n    return (\n      <StyledTr onClick={toggleActionPanel}>\n        <td>\n          <tr>\n            <AprMobileCell>\n              <CellLayout label={t('APR')}>\n                <Apr {...props.apr} hideButton />\n              </CellLayout>\n            </AprMobileCell>\n            <EarnedMobileCell>\n              <CellLayout label={t('Earned')}>\n                <Earned {...props.earned} userDataReady={userDataReady} />\n              </CellLayout>\n            </EarnedMobileCell>\n          </tr>\n          <tr>\n            <FarmMobileCell>\n              <CellLayout>\n                <Farm {...props.farm} />\n              </CellLayout>\n            </FarmMobileCell>\n          </tr>\n        </td>\n        <td>\n          <CellInner>\n            <CellLayout>\n              <Details actionPanelToggled={actionPanelExpanded} />\n            </CellLayout>\n          </CellInner>\n        </td>\n      </StyledTr>\n    )\n  }\n\n  return (\n    <>\n      {handleRenderRow()}\n      {shouldRenderChild && (\n        <tr>\n          <td colSpan={6}>\n            <ActionPanel {...props} hasDiscount={props.farm.hasDiscount} expanded={actionPanelExpanded} />\n          </td>\n        </tr>\n      )}\n    </>\n  )\n}\n\nexport default Row\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport { useTable, Button, ChevronUpIcon, ColumnType } from 'uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nimport Row, { RowProps } from './Row'\n\nexport interface ITableProps {\n  data: RowProps[]\n  columns: ColumnType<RowProps>[]\n  userDataReady: boolean\n  sortColumn?: string\n  account?: string\n}\n\nconst Container = styled.div`\n  filter: ${({ theme }) => theme.card.dropShadow};\n  width: 100%;\n  background: ${({ theme }) => theme.card.background};\n  border-radius: 2px;\n  margin: 16px 0px;\n`\n\nconst TableWrapper = styled.div`\n  overflow: visible;\n\n  &::-webkit-scrollbar {\n    display: none;\n  }\n`\n\nconst StyledTable = styled.table`\n  border-collapse: collapse;\n  font-size: 14px;\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 100%;\n`\n\nconst TableBody = styled.tbody`\n  & tr {\n    td {\n      font-size: 16px;\n      vertical-align: middle;\n    }\n  }\n`\n\nconst TableContainer = styled.div`\n  position: relative;\n`\n\nconst ScrollButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 5px;\n  padding-bottom: 5px;\n`\n\nconst FarmTable: React.FC<ITableProps> = (props) => {\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\n  const { t } = useTranslation()\n  const { data, columns, userDataReady } = props\n\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\n\n  const scrollToTop = (): void => {\n    tableWrapperEl.current.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  return (\n    <Container>\n      <TableContainer>\n        <TableWrapper ref={tableWrapperEl}>\n          <StyledTable>\n            <TableBody>\n              {rows.map((row) => {\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\n              })}\n            </TableBody>\n          </StyledTable>\n        </TableWrapper>\n        <ScrollButtonContainer>\n          <Button variant=\"text\" onClick={scrollToTop}>\n            <ChevronUpIcon width=\"24px\" color=\"primary\" />\n            {t('Back To Top')}\n          </Button>\n        </ScrollButtonContainer>\n      </TableContainer>\n    </Container>\n  )\n}\n\nexport default FarmTable\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { RowType, Toggle, Text, Card } from 'uikit'\nimport styled from 'styled-components'\n\nimport { CHAIN_ID } from 'config'\n\nimport StartCard from 'views/Home/components/StartCard'\n\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { useFarms, usePollFarmsData, usePriceDIBUsdc, useWhitelist } from 'state/hooks'\nimport usePersistState from 'hooks/usePersistState'\nimport { useDIBPerSecond } from 'hooks/useTokenBalance'\nimport { Farm } from 'state/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getFarmApr } from 'utils/apr'\nimport { orderBy } from 'lodash'\nimport isArchivedPid from 'utils/farmHelpers'\nimport { latinise } from 'utils/latinise'\n// import PageHeader from 'components/PageHeader'\nimport TutorialBanner from 'components/TutorialBanner'\nimport SearchInput from 'components/SearchInput'\nimport Select, { OptionProps } from 'components/Select/Select'\n\nimport FarmStakingCard from 'views/Home/components/FarmStakingCard'\nimport DIBStats from 'views/Home/components/DIBStats'\n\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport Table from './components/FarmTable/FarmTable'\n// import FarmTabButtons from './components/FarmTabButtons'\nimport { RowProps } from './components/FarmTable/Row'\nimport { DesktopColumnSchema, ViewMode } from './components/types'\n\nconst ControlContainer = styled.div`\n  display: flex;\n  width: 100%;\n  align-items: center;\n  position: relative;\n\n  justify-content: space-between;\n  flex-direction: column;\n  margin-bottom: 32px;\n  padding: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n    flex-wrap: wrap;\n    padding: 16px 32px;\n    margin-bottom: 0;\n  }\n`\n\nconst ToggleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: 10px;\n\n  ${Text} {\n    margin-left: 8px;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst FilterContainer = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    width: auto;\n    padding: 0;\n  }\n`\n\nconst ViewControls = styled.div`\n  flex-wrap: wrap;\n  justify-content: space-between;\n  display: flex;\n  align-items: center;\n  width: 100%;\n\n  > div {\n    padding: 8px 0px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    justify-content: flex-start;\n    width: auto;\n\n    > div {\n      padding: 0;\n    }\n  }\n`\n\nconst StatsContainer = styled.div`\n  & > div {\n    margin-top: 15px;\n    margin-bottom: 15px;\n  }\n\n  @media (min-width: 768px) {\n    display: flex;\n    gap: 10px;\n    flex-wrap: wrap;\n    margin-bottom: 15px;\n\n    & > div {\n      flex: 1;\n    }\n  }\n`\n\n// const IconWrapper = styled.div`\n//   text-align: center;\n//   margin-left: auto;\n//   margin-right: auto;\n//   margin-top: 58px;\n//   color: ${(props) => props.theme.colors.primary};\n// `\n\nconst NUMBER_OF_FARMS_VISIBLE = 12\n\nconst getSortOptions = ({ t }) => {\n  return [\n    {\n      label: t('Hot'),\n      value: 'hot',\n    },\n    {\n      label: t('APR'),\n      value: 'apr',\n    },\n    {\n      label: t('Multiplier'),\n      value: 'multiplier',\n    },\n    {\n      label: t('Earned'),\n      value: 'earned',\n    },\n    {\n      label: t('Liquidity'),\n      value: 'liquidity',\n    },\n    {\n      label: t('Deposit fee'),\n      value: 'depositFee',\n    },\n  ]\n}\n\nconst Farms: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { pathname } = useLocation()\n  const { t } = useTranslation()\n  const { data: farmsData, userDataLoaded } = useFarms()\n  const dibPrice = usePriceDIBUsdc()\n  const [query, setQuery] = useState('')\n  const [viewMode] = usePersistState(ViewMode.TABLE, { localStorageKey: 'pancake_farm_view' })\n  const { account } = useWeb3React()\n  const [sortOption, setSortOption] = useState('hot')\n\n  const isArchived = pathname.includes('archived')\n  const isInactive = pathname.includes('history')\n  const isActive = !isInactive && !isArchived\n\n  usePollFarmsData(isArchived)\n\n  const { merkleTree } = useWhitelist()\n\n  let isInWhiteList = false\n\n  merkleTree.values.forEach((item) => {\n    if (item.value[0].toLowerCase() === (account || '').toLowerCase()) isInWhiteList = true\n  })\n\n  const hasDiscount = isInWhiteList\n\n  const farmsLP = farmsData\n\n  // Users with no wallet connected should see 0 as Earned amount\n  // Connected users should see loading indicator until first userData has loaded\n  const userDataReady = !account || (!!account && userDataLoaded)\n\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\n  const dibPerSecond = getBalanceNumber(useDIBPerSecond())\n  useEffect(() => {\n    setStakedOnly(!isActive)\n  }, [isActive])\n\n  const activeFarms = farmsLP.filter(\n    (farm) => (farm.pid || farm.pid === 0) && farm.multiplier !== '0X' && !isArchivedPid(farm.pid),\n  )\n  const upcomingFarms = farmsLP.filter((farm) => typeof farm.pid === 'undefined')\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedInactiveFarms = inactiveFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const stakedArchivedFarms = archivedFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n\n  const farmsList = useCallback(\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        if (!farm.lpTotalInQuoteToken || !farm.quoteToken.usdcPrice) {\n          return farm\n        }\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.usdcPrice)\n\n        const apr = isActive\n          ? getFarmApr(\n              new BigNumber(farm.poolWeight),\n              dibPrice,\n              totalLiquidity,\n              farm.lpAddresses[CHAIN_ID],\n              dibPerSecond,\n            )\n          : 0\n\n        return { ...farm, apr, liquidity: totalLiquidity }\n      })\n\n      if (query) {\n        const lowercaseQuery = latinise(query.toLowerCase())\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\n        })\n      }\n      return farmsToDisplayWithAPR\n    },\n    [dibPrice, query, isActive, dibPerSecond],\n  )\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value)\n  }\n\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n\n  const farmsStakedMemoized = useMemo(() => {\n    let farmsStaked = []\n\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\n      switch (sortOption) {\n        case 'apr':\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\n        case 'multiplier':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\n            'desc',\n          )\n        case 'earned':\n          return orderBy(\n            farms,\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\n            'desc',\n          )\n        case 'liquidity':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\n        case 'depositFee':\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.depositFee), 'asc')\n        default:\n          return farms\n      }\n    }\n\n    if (isActive) {\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList([...upcomingFarms, ...activeFarms])\n    }\n    if (isInactive) {\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\n    }\n    if (isArchived) {\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\n    }\n\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\n  }, [\n    sortOption,\n    upcomingFarms,\n    activeFarms,\n    farmsList,\n    inactiveFarms,\n    archivedFarms,\n    isActive,\n    isInactive,\n    isArchived,\n    stakedArchivedFarms,\n    stakedInactiveFarms,\n    stakedOnly,\n    stakedOnlyFarms,\n    numberOfFarmsVisible,\n  ])\n\n  useEffect(() => {\n    const showMoreFarms = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [farmsStakedMemoized, observerIsSet])\n\n  const rowData = farmsStakedMemoized.map((farm) => {\n    const { token, quoteToken } = farm\n    const tokenAddress = token.address\n    const quoteTokenAddress = quoteToken.address\n    const lpLabel = farm.lpSymbol\n\n    const row: RowProps = {\n      apr: {\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\n        multiplier: farm.multiplier,\n        lpLabel,\n        tokenAddress,\n        quoteTokenAddress,\n        dibPrice,\n        originalValue: farm.apr,\n      },\n      farm: {\n        depositFee: farm.depositFee,\n        label: lpLabel,\n        pid: farm.pid,\n        token: farm.token,\n        quoteToken: farm.quoteToken,\n        isTokenOnly: farm.isTokenOnly,\n        hasDiscount,\n      },\n      earned: {\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\n        pid: farm.pid,\n      },\n      liquidity: {\n        liquidity: farm.liquidity,\n      },\n      multiplier: {\n        multiplier: farm.multiplier,\n      },\n      details: farm,\n    }\n\n    return row\n  })\n\n  const renderContent = (): JSX.Element => {\n    if (viewMode === ViewMode.TABLE && rowData.length) {\n      const columnSchema = DesktopColumnSchema\n\n      const columns = columnSchema.map((column) => ({\n        id: column.id,\n        name: column.name,\n        label: column.label,\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\n          switch (column.name) {\n            case 'farm':\n              return b.id - a.id\n            case 'apr':\n              if (a.original.apr.value && b.original.apr.value) {\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\n              }\n\n              return 0\n            case 'earned':\n              return a.original.earned.earnings - b.original.earned.earnings\n            default:\n              return 1\n          }\n        },\n        sortable: column.sortable,\n      }))\n\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} account={account} />\n    }\n\n    return (\n      <div>\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                hasDiscount={hasDiscount}\n                dibPrice={dibPrice}\n                account={account}\n                removed={false}\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                hasDiscount={hasDiscount}\n                dibPrice={dibPrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n          <Route exact path={`${path}/archived`}>\n            {farmsStakedMemoized.map((farm) => (\n              <FarmCard\n                key={farm.pid}\n                farm={farm}\n                hasDiscount={hasDiscount}\n                dibPrice={dibPrice}\n                account={account}\n                removed\n              />\n            ))}\n          </Route>\n        </FlexLayout>\n      </div>\n    )\n  }\n\n  const handleSortOptionChange = (option: OptionProps): void => {\n    setSortOption(option.value)\n  }\n\n  return (\n    <>\n      <Page>\n        <TutorialBanner />\n        <StartCard />\n        <StatsContainer>\n          <FarmStakingCard />\n          <DIBStats />\n        </StatsContainer>\n        <Card>\n          <ControlContainer>\n            <ViewControls>\n              <LabelWrapper>\n                <Select options={getSortOptions({ t })} onChange={handleSortOptionChange} />\n              </LabelWrapper>\n              {/* <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} /> */}\n              <ToggleWrapper>\n                <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\n                <Text> {t('Staked only')}</Text>\n              </ToggleWrapper>\n            </ViewControls>\n            <FilterContainer>\n              <LabelWrapper style={{ width: '100%' }}>\n                <SearchInput onChange={handleChangeQuery} placeholder=\"Search Farms\" />\n              </LabelWrapper>\n            </FilterContainer>\n          </ControlContainer>\n        </Card>\n        {renderContent()}\n        <div ref={loadMoreRef} />\n      </Page>\n    </>\n  )\n}\n\nexport default Farms\n"],"sourceRoot":""}